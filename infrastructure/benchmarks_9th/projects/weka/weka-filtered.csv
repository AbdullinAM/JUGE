"ncss","ccn","method"
"11","5","weka.filters.unsupervised.attribute.MakeIndicatorTest.testFilteredClassifier()"
"8","5","weka.filters.unsupervised.attribute.AddClusterTest.setUp()"
"9","6","weka.filters.unsupervised.attribute.NormalizeTest.testTypical()"
"11","5","weka.filters.unsupervised.attribute.MergeTwoValuesTest.testTypical()"
"12","5","weka.filters.unsupervised.attribute.MergeTwoValuesTest.testFirstValueIndex()"
"12","5","weka.filters.unsupervised.attribute.MergeTwoValuesTest.testSecondValueIndex()"
"17","6","weka.filters.unsupervised.attribute.MergeTwoValuesTest.testAttributeWithMissing()"
"11","5","weka.filters.unsupervised.attribute.MergeTwoValuesTest.testFilteredClassifier()"
"17","5","weka.filters.unsupervised.attribute.SwapValuesTest.testAttributeWithMissing()"
"11","5","weka.filters.unsupervised.attribute.SwapValuesTest.testFilteredClassifier()"
"11","5","weka.filters.unsupervised.attribute.MergeManyValuesTest.testTypical()"
"12","5","weka.filters.unsupervised.attribute.MergeManyValuesTest.testDifferentRange()"
"16","6","weka.filters.unsupervised.attribute.MergeManyValuesTest.testAttributeWithMissing()"
"11","5","weka.filters.unsupervised.attribute.MergeManyValuesTest.testFilteredClassifier()"
"18","8","weka.filters.unsupervised.attribute.TimeSeriesDeltaTest.testInverted()"
"11","5","weka.filters.unsupervised.attribute.NominalToStringTest.testFilteredClassifier()"
"11","5","weka.filters.unsupervised.attribute.StringToNominalTest.testFilteredClassifier()"
"15","5","weka.filters.unsupervised.attribute.ChangeDateFormatTest.testTypical()"
"15","5","weka.filters.unsupervised.attribute.ChangeDateFormatTest.testSameFormat()"
"11","5","weka.filters.unsupervised.attribute.ChangeDateFormatTest.testFilteredClassifier()"
"9","5","weka.filters.unsupervised.attribute.ClusterMembershipTest.setUp()"
"13","5","weka.filters.unsupervised.attribute.NumericTransformTest.testDefault()"
"15","6","weka.filters.unsupervised.attribute.NumericTransformTest.testInverted()"
"15","5","weka.filters.unsupervised.attribute.NumericTransformTest.testClassNameAndMethodName()"
"15","5","weka.filters.unsupervised.attribute.ReplaceMissingValuesTest.testTypical()"
"23","5","weka.filters.unsupervised.attribute.SortLabelsTest.performTest()"
"13","5","weka.filters.unsupervised.attribute.MergeInfrequentNominalValuesTest.testDifferentRange()"
"16","6","weka.filters.unsupervised.attribute.MergeInfrequentNominalValuesTest.testAttributeWithMissing()"
"11","5","weka.filters.unsupervised.attribute.MergeInfrequentNominalValuesTest.testFilteredClassifier()"
"14","6","weka.filters.unsupervised.attribute.ObfuscateTest.testTypical()"
"17","14","weka.filters.unsupervised.attribute.AddValuesTest.compDatasets(Instances,Instances)"
"11","5","weka.filters.unsupervised.attribute.AddValuesTest.testFilteredClassifier()"
"19","5","weka.filters.unsupervised.attribute.InterquartileRangeTest.testPerAttribute()"
"20","5","weka.filters.unsupervised.attribute.InterquartileRangeTest.testOffset()"
"11","5","weka.filters.unsupervised.attribute.RenameNominalValuesTest.testFilteredClassifier()"
"15","6","weka.filters.unsupervised.attribute.NumericToBinaryTest.testTypical()"
"14","5","weka.filters.unsupervised.attribute.MathExpressionTest.testEquality()"
"14","5","weka.filters.unsupervised.attribute.MathExpressionTest.testAbs()"
"14","5","weka.filters.unsupervised.attribute.MathExpressionTest.testsqrt()"
"14","5","weka.filters.unsupervised.attribute.MathExpressionTest.testLog()"
"14","5","weka.filters.unsupervised.attribute.MathExpressionTest.testExp()"
"14","5","weka.filters.unsupervised.attribute.MathExpressionTest.testSin()"
"14","5","weka.filters.unsupervised.attribute.MathExpressionTest.testCos()"
"14","5","weka.filters.unsupervised.attribute.MathExpressionTest.testTan()"
"14","5","weka.filters.unsupervised.attribute.MathExpressionTest.testRint()"
"14","5","weka.filters.unsupervised.attribute.MathExpressionTest.testFloor()"
"14","5","weka.filters.unsupervised.attribute.MathExpressionTest.testPow2()"
"14","5","weka.filters.unsupervised.attribute.MathExpressionTest.testCeil()"
"18","8","weka.filters.unsupervised.attribute.TimeSeriesTranslateTest.testInverted()"
"35","5","weka.filters.unsupervised.instance.RemoveFrequentValuesTest.testNominal()"
"11","5","weka.filters.unsupervised.instance.RemoveFrequentValuesTest.testFilteredClassifier()"
"9","5","weka.filters.supervised.attribute.PartitionMembershipTest.setUp()"
"13","5","weka.filters.supervised.attribute.ClassOrderTest.performTests(Instances)"
"28","7","weka.filters.supervised.attribute.AddClassificationTest.performTest(boolean,boolean,boolean,boolean,boolean)"
"11","5","weka.filters.supervised.attribute.MergeNominalValuesTest.testFilteredClassifier()"
"2","5","weka.associations.AbstractAssociatorTest.canPredict(int)"
"42","16","weka.associations.AbstractAssociatorTest.checkAttributes(boolean,boolean,boolean,boolean,boolean,boolean)"
"15","6","weka.associations.AbstractAssociatorTest.testInstanceWeights()"
"7","5","weka.associations.AbstractAssociatorTest.testNClasses()"
"9","5","weka.associations.AbstractAssociatorTest.testClassAsNthAttribute()"
"14","6","weka.associations.AbstractAssociatorTest.testZeroTraining()"
"12","5","weka.associations.AbstractAssociatorTest.checkMissingPredictors(int,int,boolean)"
"14","6","weka.associations.AbstractAssociatorTest.testBuildInitialization()"
"14","6","weka.associations.AbstractAssociatorTest.testDatasetIntegrity()"
"37","18","weka.associations.AbstractAssociatorTest.testRegression()"
"32","10","weka.core.stopwords.AbstractStopwordsTest.copyResourceToTmp(String)"
"32","10","weka.core.stopwords.AbstractStopwordsTest.testBuildInitialization()"
"25","7","weka.core.stopwords.AbstractStopwordsTest.testRegression()"
"21","5","weka.core.tokenizers.CharacterNGramTokenizerTest.testNumberOfGeneratedTokens()"
"21","5","weka.core.tokenizers.NGramTokenizerTest.testNumberOfGeneratedTokens()"
"34","9","weka.core.UtilsTest.testQuoting()"
"26","9","weka.core.OptionHandlersTest.suite()"
"22","10","weka.core.AlgVectorTest.runTestOnData(Instances)"
"2","5","weka.clusterers.AbstractClustererTest.canPredict()"
"35","14","weka.clusterers.AbstractClustererTest.checkAttributes(boolean,boolean,boolean,boolean,boolean,boolean)"
"8","5","weka.clusterers.AbstractClustererTest.testInstanceWeights()"
"7","5","weka.clusterers.AbstractClustererTest.testZeroTraining()"
"7","5","weka.clusterers.AbstractClustererTest.testBuildInitialization()"
"7","5","weka.clusterers.AbstractClustererTest.testDatasetIntegrity()"
"20","5","weka.clusterers.AbstractClustererTest.useClusterer(Instances)"
"28","15","weka.clusterers.AbstractClustererTest.testRegression()"
"47","7","weka.experiment.StatsTest.testMinMax()"
"11","6","weka.experiment.StatsTest.testInvalidState()"
"25","7","weka.experiment.StatsTest.addWeightedStatsWithSubtracts(Stats,Stats[],Stats[][],int,int)"
"9","6","weka.experiment.StatsTest.getWeightedMax(double)"
"9","6","weka.experiment.StatsTest.getWeightedMin(double)"
"17","5","weka.classifiers.misc.SerializedClassifierTest.trainAndSerializeClassifier(Instances)"
"41","12","weka.classifiers.misc.SerializedClassifierTest.performTest(boolean)"
"49","8","weka.classifiers.misc.SerializedClassifierTest.testRegression()"
"36","16","weka.classifiers.misc.InputMappedClassifierTest.performTest(boolean,int,int,boolean,boolean,boolean)"
"13","5","weka.classifiers.AbstractClassifierTest.AbsPostProcessor.process(Instances)"
"2","5","weka.classifiers.AbstractClassifierTest.canPredict(int)"
"37","15","weka.classifiers.AbstractClassifierTest.checkAttributes(boolean,boolean,boolean,boolean,boolean,boolean)"
"10","5","weka.classifiers.AbstractClassifierTest.testInstanceWeights()"
"9","5","weka.classifiers.AbstractClassifierTest.testOnlyClass()"
"7","5","weka.classifiers.AbstractClassifierTest.testNClasses()"
"9","5","weka.classifiers.AbstractClassifierTest.testClassAsNthAttribute()"
"9","5","weka.classifiers.AbstractClassifierTest.testZeroTraining()"
"9","5","weka.classifiers.AbstractClassifierTest.testBuildInitialization()"
"9","5","weka.classifiers.AbstractClassifierTest.testDatasetIntegrity()"
"10","5","weka.classifiers.AbstractClassifierTest.testUpdatingEquality()"
"25","8","weka.classifiers.AbstractClassifierTest.useClassifier(Instances)"
"32","17","weka.classifiers.AbstractClassifierTest.testRegression()"
"19","5","weka.classifiers.evaluation.EvaluationTest.testRegression()"
"12","6","weka.filters.unsupervised.attribute.Center.input(Instance)"
"14","8","weka.filters.unsupervised.attribute.Center.batchFinished()"
"34","12","weka.filters.unsupervised.attribute.Center.convertInstance(Instance)"
"13","6","weka.filters.unsupervised.attribute.AbstractTimeSeries.input(Instance)"
"10","6","weka.filters.unsupervised.attribute.AbstractTimeSeries.batchFinished()"
"11","8","weka.filters.unsupervised.attribute.AbstractTimeSeries.historyInput(Instance)"
"25","6","weka.filters.unsupervised.attribute.RenameAttribute.setOptions(String[])"
"29","6","weka.filters.unsupervised.attribute.Discretize.setOptions(String[])"
"25","8","weka.filters.unsupervised.attribute.Discretize.getOptions()"
"9","7","weka.filters.unsupervised.attribute.Discretize.setInputFormat(Instances)"
"11","6","weka.filters.unsupervised.attribute.Discretize.input(Instance)"
"11","5","weka.filters.unsupervised.attribute.Discretize.batchFinished()"
"15","7","weka.filters.unsupervised.attribute.Discretize.getBinRangesString(int)"
"11","7","weka.filters.unsupervised.attribute.Discretize.calculateCutPoints()"
"20","9","weka.filters.unsupervised.attribute.Discretize.calculateCutPointsByEqualWidthBinning(int)"
"51","14","weka.filters.unsupervised.attribute.Discretize.calculateCutPointsByEqualFrequencyBinning(int)"
"38","16","weka.filters.unsupervised.attribute.Discretize.findNumBins(int)"
"63","21","weka.filters.unsupervised.attribute.Discretize.setOutputFormat()"
"43","15","weka.filters.unsupervised.attribute.Discretize.convertInstance(Instance)"
"66","25","weka.filters.unsupervised.attribute.MergeInfrequentNominalValues.determineOutputFormat(Instances)"
"15","5","weka.filters.unsupervised.attribute.MergeInfrequentNominalValues.process(Instances)"
"66","24","weka.filters.unsupervised.attribute.RenameNominalValues.setInputFormat(Instances)"
"32","14","weka.filters.unsupervised.attribute.RenameNominalValues.input(Instance)"
"13","7","weka.filters.unsupervised.attribute.RenameNominalValues.getOptions()"
"19","5","weka.filters.unsupervised.attribute.InterquartileRange.getOptions()"
"52","9","weka.filters.unsupervised.attribute.InterquartileRange.determineOutputFormat(Instances)"
"38","5","weka.filters.unsupervised.attribute.InterquartileRange.computeThresholds(Instances)"
"16","14","weka.filters.unsupervised.attribute.InterquartileRange.getValues(ValueType)"
"42","13","weka.filters.unsupervised.attribute.InterquartileRange.process(Instances)"
"15","10","weka.filters.unsupervised.attribute.TimeSeriesDelta.setInputFormat(Instances)"
"18","8","weka.filters.unsupervised.attribute.TimeSeriesDelta.mergeInstances(Instance,Instance)"
"12","6","weka.filters.unsupervised.attribute.Standardize.input(Instance)"
"16","8","weka.filters.unsupervised.attribute.Standardize.batchFinished()"
"44","18","weka.filters.unsupervised.attribute.Standardize.convertInstance(Instance)"
"20","6","weka.filters.unsupervised.attribute.AddExpression.input(Instance)"
"50","10","weka.filters.unsupervised.attribute.NumericCleaner.setOptions(String[])"
"36","17","weka.filters.unsupervised.attribute.NumericCleaner.process(Instance)"
"14","8","weka.filters.unsupervised.attribute.SortLabels.CaseSensitiveComparator.compare(String,String)"
"14","8","weka.filters.unsupervised.attribute.SortLabels.CaseInsensitiveComparator.compare(String,String)"
"10","5","weka.filters.unsupervised.attribute.SortLabels.setSortType(SelectedTag)"
"33","6","weka.filters.unsupervised.attribute.SortLabels.determineOutputFormat(Instances)"
"15","5","weka.filters.unsupervised.attribute.SortLabels.process(Instance)"
"12","6","weka.filters.unsupervised.attribute.Reorder.determineIndex(String,int)"
"31","9","weka.filters.unsupervised.attribute.Reorder.determineIndices(int)"
"30","9","weka.filters.unsupervised.attribute.Reorder.setInputFormat(Instances)"
"18","6","weka.filters.unsupervised.attribute.Reorder.input(Instance)"
"29","9","weka.filters.unsupervised.attribute.Add.setOptions(String[])"
"30","9","weka.filters.unsupervised.attribute.Add.setInputFormat(Instances)"
"18","6","weka.filters.unsupervised.attribute.Add.setNominalLabels(String)"
"20","5","weka.filters.unsupervised.attribute.Remove.setInputFormat(Instances)"
"24","9","weka.filters.unsupervised.attribute.Remove.input(Instance)"
"20","5","weka.filters.unsupervised.attribute.KernelFilter.getOptions()"
"35","6","weka.filters.unsupervised.attribute.KernelFilter.setOptions(String[])"
"46","15","weka.filters.unsupervised.attribute.KernelFilter.initFilter(Instances)"
"44","16","weka.filters.unsupervised.attribute.KernelFilter.process(Instances)"
"18","6","weka.filters.unsupervised.attribute.ReplaceMissingWithUserConstant.setOptions(String[])"
"19","6","weka.filters.unsupervised.attribute.ReplaceMissingWithUserConstant.getOptions()"
"107","57","weka.filters.unsupervised.attribute.ReplaceMissingWithUserConstant.setInputFormat(Instances)"
"53","20","weka.filters.unsupervised.attribute.ReplaceMissingWithUserConstant.input(Instance)"
"31","12","weka.filters.unsupervised.attribute.FirstOrder.setInputFormat(Instances)"
"31","11","weka.filters.unsupervised.attribute.FirstOrder.input(Instance)"
"18","6","weka.filters.unsupervised.attribute.ClusterMembership.removeIgnored(Instances)"
"51","20","weka.filters.unsupervised.attribute.ClusterMembership.batchFinished()"
"11","6","weka.filters.unsupervised.attribute.ClusterMembership.input(Instance)"
"23","6","weka.filters.unsupervised.attribute.ClusterMembership.convertInstance(Instance)"
"14","6","weka.filters.unsupervised.attribute.ClusterMembership.getOptions()"
"20","5","weka.filters.unsupervised.attribute.RemoveType.setInputFormat(Instances)"
"17","11","weka.filters.unsupervised.attribute.RemoveType.getAttributeTypeString()"
"16","6","weka.filters.unsupervised.attribute.RemoveType.setAttributeTypeString(String)"
"29","10","weka.filters.unsupervised.attribute.CartesianProduct.determineOutputFormat(Instances)"
"26","11","weka.filters.unsupervised.attribute.CartesianProduct.process(Instances)"
"17","6","weka.filters.unsupervised.attribute.AddCluster.removeIgnored(Instances)"
"38","13","weka.filters.unsupervised.attribute.AddCluster.batchFinished()"
"11","6","weka.filters.unsupervised.attribute.AddCluster.input(Instance)"
"21","5","weka.filters.unsupervised.attribute.AddCluster.convertInstance(Instance)"
"29","10","weka.filters.unsupervised.attribute.AddCluster.setOptions(String[])"
"32","8","weka.filters.unsupervised.attribute.Obfuscate.setInputFormat(Instances)"
"6","5","weka.filters.unsupervised.attribute.AddUserFields.AttributeSpec.getDateValue()"
"15","7","weka.filters.unsupervised.attribute.AddUserFields.AttributeSpec.init(Environment)"
"12","5","weka.filters.unsupervised.attribute.AddUserFields.input(Instance)"
"27","7","weka.filters.unsupervised.attribute.AddUserFields.convertInstance(Instance)"
"31","8","weka.filters.unsupervised.attribute.AddUserFields.setOutputFormat()"
"10","5","weka.filters.unsupervised.attribute.MakeIndicator.setInputFormat(Instances)"
"14","6","weka.filters.unsupervised.attribute.MakeIndicator.input(Instance)"
"30","5","weka.filters.unsupervised.attribute.MakeIndicator.setOutputFormat()"
"13","5","weka.filters.unsupervised.attribute.ClassAssigner.setClassIndex(String)"
"11","7","weka.filters.unsupervised.attribute.ClassAssigner.getClassIndex()"
"11","5","weka.filters.unsupervised.attribute.SwapValues.setInputFormat(Instances)"
"15","7","weka.filters.unsupervised.attribute.SwapValues.input(Instance)"
"19","5","weka.filters.unsupervised.attribute.SwapValues.setOptions(String[])"
"25","6","weka.filters.unsupervised.attribute.SwapValues.setOutputFormat()"
"14","6","weka.filters.unsupervised.attribute.NominalToBinary.getOptions()"
"58","23","weka.filters.unsupervised.attribute.NominalToBinary.setOutputFormat()"
"33","14","weka.filters.unsupervised.attribute.NominalToBinary.convertInstance(Instance)"
"12","6","weka.filters.unsupervised.attribute.AddID.input(Instance)"
"11","5","weka.filters.unsupervised.attribute.AddID.batchFinished()"
"11","7","weka.filters.unsupervised.attribute.MathExpression.setInputFormat(Instances)"
"15","11","weka.filters.unsupervised.attribute.MathExpression.input(Instance)"
"14","9","weka.filters.unsupervised.attribute.MathExpression.batchFinished()"
"21","11","weka.filters.unsupervised.attribute.MathExpression.convertInstance(Instance)"
"16","7","weka.filters.unsupervised.attribute.ChangeDateFormat.input(Instance)"
"16","10","weka.filters.unsupervised.attribute.Transpose.process(Instances)"
"15","10","weka.filters.unsupervised.attribute.MergeTwoValues.setInputFormat(Instances)"
"14","6","weka.filters.unsupervised.attribute.MergeTwoValues.input(Instance)"
"19","5","weka.filters.unsupervised.attribute.MergeTwoValues.setOptions(String[])"
"42","14","weka.filters.unsupervised.attribute.MergeTwoValues.setOutputFormat()"
"17","6","weka.filters.unsupervised.attribute.RemoveByName.determineOutputFormat(Instances)"
"14","6","weka.filters.unsupervised.attribute.RemoveUseless.input(Instance)"
"40","12","weka.filters.unsupervised.attribute.RemoveUseless.batchFinished()"
"23","15","weka.filters.unsupervised.attribute.FixedDictionaryStringToWordVector.determineOutputFormat(Instances)"
"25","10","weka.filters.unsupervised.attribute.OrdinalToNumeric.setInputFormat(Instances)"
"30","7","weka.filters.unsupervised.attribute.PartitionedMultiFilter.setOptions(String[])"
"15","5","weka.filters.unsupervised.attribute.PartitionedMultiFilter.getOptions()"
"21","8","weka.filters.unsupervised.attribute.PartitionedMultiFilter.determineUnusedIndices(Instances)"
"20","5","weka.filters.unsupervised.attribute.PartitionedMultiFilter.generateSubset(Instances,Range)"
"16","5","weka.filters.unsupervised.attribute.PartitionedMultiFilter.renameAttributes(Instances,String)"
"36","13","weka.filters.unsupervised.attribute.PartitionedMultiFilter.determineOutputFormat(Instances)"
"83","27","weka.filters.unsupervised.attribute.PartitionedMultiFilter.process(Instances)"
"19","5","weka.filters.unsupervised.attribute.AddNoise.setOptions(String[])"
"10","6","weka.filters.unsupervised.attribute.AddNoise.setInputFormat(Instances)"
"12","6","weka.filters.unsupervised.attribute.AddNoise.input(Instance)"
"55","13","weka.filters.unsupervised.attribute.AddNoise.addNoise(Instances,int,int,int,boolean)"
"21","8","weka.filters.unsupervised.attribute.AddNoise.changeValueRandomly(Random,int,int,Instance,boolean)"
"43","10","weka.filters.unsupervised.attribute.NumericToNominal.determineOutputFormat(Instances)"
"33","10","weka.filters.unsupervised.attribute.NumericToNominal.process(Instances)"
"51","17","weka.filters.unsupervised.attribute.RandomSubset.determineOutputFormat(Instances)"
"33","8","weka.filters.unsupervised.attribute.RandomSubset.process(Instances)"
"21","11","weka.filters.unsupervised.attribute.StringToNominal.input(Instance)"
"10","5","weka.filters.unsupervised.attribute.StringToNominal.batchFinished()"
"19","5","weka.filters.unsupervised.attribute.StringToNominal.setOutputFormat()"
"21","7","weka.filters.unsupervised.attribute.Copy.input(Instance)"
"47","12","weka.filters.unsupervised.attribute.AddValues.setInputFormat(Instances)"
"15","5","weka.filters.unsupervised.attribute.AddValues.input(Instance)"
"26","9","weka.filters.unsupervised.attribute.AddValues.setLabels(String)"
"24","5","weka.filters.unsupervised.attribute.NumericToBinary.setOutputFormat()"
"30","13","weka.filters.unsupervised.attribute.NumericToBinary.convertInstance(Instance)"
"29","9","weka.filters.unsupervised.attribute.RandomProjection.setOptions(String[])"
"21","8","weka.filters.unsupervised.attribute.RandomProjection.setInputFormat(Instances)"
"16","9","weka.filters.unsupervised.attribute.RandomProjection.input(Instance)"
"15","6","weka.filters.unsupervised.attribute.RandomProjection.batchFinished()"
"25","10","weka.filters.unsupervised.attribute.RandomProjection.setOutputFormat()"
"12","5","weka.filters.unsupervised.attribute.RandomProjection.convertInstance(Instance)"
"10","5","weka.filters.unsupervised.attribute.RandomProjection.weightedDistribution(int[])"
"12","6","weka.filters.unsupervised.attribute.NominalToString.input(Instance)"
"10","5","weka.filters.unsupervised.attribute.NominalToString.batchFinished()"
"12","6","weka.filters.unsupervised.attribute.Normalize.input(Instance)"
"26","14","weka.filters.unsupervised.attribute.Normalize.batchFinished()"
"44","20","weka.filters.unsupervised.attribute.Normalize.convertInstance(Instance)"
"51","17","weka.filters.unsupervised.attribute.PrincipalComponents.determineOutputFormat(Instances)"
"17","5","weka.filters.unsupervised.attribute.PrincipalComponents.fillCovariance()"
"51","10","weka.filters.unsupervised.attribute.PrincipalComponents.convertInstance(Instance)"
"46","8","weka.filters.unsupervised.attribute.PrincipalComponents.setup(Instances)"
"15","6","weka.filters.unsupervised.attribute.PrincipalComponents.input(Instance)"
"17","5","weka.filters.unsupervised.attribute.PrincipalComponents.batchFinished()"
"22","5","weka.filters.unsupervised.attribute.ReplaceWithMissingValue.setOptions(String[])"
"17","10","weka.filters.unsupervised.attribute.ReplaceWithMissingValue.process(Instances)"
"74","16","weka.filters.unsupervised.attribute.StringToWordVector.setOptions(String[])"
"50","17","weka.filters.unsupervised.attribute.StringToWordVector.getOptions()"
"13","6","weka.filters.unsupervised.attribute.StringToWordVector.input(Instance)"
"21","9","weka.filters.unsupervised.attribute.StringToWordVector.batchFinished()"
"15","11","weka.filters.unsupervised.attribute.TimeSeriesTranslate.setInputFormat(Instances)"
"18","6","weka.filters.unsupervised.attribute.TimeSeriesTranslate.mergeInstances(Instance,Instance)"
"9","5","weka.filters.unsupervised.attribute.NumericTransform.setInputFormat(Instances)"
"31","11","weka.filters.unsupervised.attribute.NumericTransform.input(Instance)"
"14","5","weka.filters.unsupervised.attribute.NumericTransform.getOptions()"
"12","6","weka.filters.unsupervised.attribute.ReplaceMissingValues.input(Instance)"
"50","23","weka.filters.unsupervised.attribute.ReplaceMissingValues.batchFinished()"
"36","15","weka.filters.unsupervised.attribute.ReplaceMissingValues.convertInstance(Instance)"
"90","9","weka.filters.unsupervised.attribute.ReplaceMissingValues.toSource(String,Instances)"
"20","5","weka.filters.unsupervised.attribute.MergeManyValues.setOptions(String[])"
"12","8","weka.filters.unsupervised.attribute.MergeManyValues.setInputFormat(Instances)"
"26","6","weka.filters.unsupervised.attribute.MergeManyValues.setOutputFormat()"
"16","6","weka.filters.unsupervised.attribute.MergeManyValues.input(Instance)"
"10","5","weka.filters.unsupervised.instance.ReservoirSample.processInstance(Instance)"
"14","7","weka.filters.unsupervised.instance.ReservoirSample.input(Instance)"
"21","9","weka.filters.unsupervised.instance.ReservoirSample.createSubsample()"
"30","9","weka.filters.unsupervised.instance.RemoveFrequentValues.determineValues(Instances)"
"26","7","weka.filters.unsupervised.instance.RemoveFrequentValues.modifyHeader(Instances)"
"21","8","weka.filters.unsupervised.instance.RemoveFrequentValues.setOutputFormat()"
"12","6","weka.filters.unsupervised.instance.RemoveFrequentValues.input(Instance)"
"12","6","weka.filters.unsupervised.instance.RemoveDuplicates.input(Instance)"
"11","5","weka.filters.unsupervised.instance.RemoveDuplicates.process(Instances)"
"16","6","weka.filters.unsupervised.instance.SubsetByExpression.input(Instance)"
"16","8","weka.filters.unsupervised.instance.SubsetByExpression.process(Instances)"
"17","5","weka.filters.unsupervised.instance.Resample.setOptions(String[])"
"12","6","weka.filters.unsupervised.instance.Resample.input(Instance)"
"24","8","weka.filters.unsupervised.instance.Resample.createSubsample()"
"20","5","weka.filters.unsupervised.instance.RemoveFolds.setOptions(String[])"
"12","6","weka.filters.unsupervised.instance.RemoveFolds.input(Instance)"
"19","7","weka.filters.unsupervised.instance.RemoveFolds.batchFinished()"
"14","5","weka.filters.unsupervised.instance.SparseToNonSparse.input(Instance)"
"12","6","weka.filters.unsupervised.instance.RemovePercentage.input(Instance)"
"15","6","weka.filters.unsupervised.instance.RemovePercentage.batchFinished()"
"18","7","weka.filters.unsupervised.instance.NonSparseToSparse.input(Instance)"
"12","6","weka.filters.unsupervised.instance.Randomize.input(Instance)"
"11","5","weka.filters.unsupervised.instance.Randomize.batchFinished()"
"23","5","weka.filters.unsupervised.instance.RemoveWithValues.setOptions(String[])"
"18","6","weka.filters.unsupervised.instance.RemoveWithValues.getOptions()"
"28","11","weka.filters.unsupervised.instance.RemoveWithValues.setInputFormat(Instances)"
"32","21","weka.filters.unsupervised.instance.RemoveWithValues.input(Instance)"
"12","6","weka.filters.unsupervised.instance.RemoveRange.input(Instance)"
"15","7","weka.filters.unsupervised.instance.RemoveRange.batchFinished()"
"43","15","weka.filters.unsupervised.instance.RemoveMisclassified.cleanseTrain(Instances)"
"48","18","weka.filters.unsupervised.instance.RemoveMisclassified.cleanseCross(Instances)"
"12","6","weka.filters.unsupervised.instance.RemoveMisclassified.input(Instance)"
"15","6","weka.filters.unsupervised.instance.RemoveMisclassified.batchFinished()"
"35","9","weka.filters.unsupervised.instance.RemoveMisclassified.setOptions(String[])"
"40","14","weka.filters.CheckSource.setOptions(String[])"
"22","7","weka.filters.CheckSource.getOptions()"
"13","6","weka.filters.CheckSource.compare(Instance,Instance)"
"49","13","weka.filters.CheckSource.execute()"
"14","6","weka.filters.SimpleBatchFilter.input(Instance)"
"15","7","weka.filters.SimpleBatchFilter.input(Instances)"
"19","8","weka.filters.SimpleBatchFilter.batchFinished()"
"20","8","weka.filters.supervised.attribute.Discretize.getOptions()"
"11","6","weka.filters.supervised.attribute.Discretize.input(Instance)"
"11","5","weka.filters.supervised.attribute.Discretize.batchFinished()"
"15","7","weka.filters.supervised.attribute.Discretize.getBinRangesString(int)"
"8","5","weka.filters.supervised.attribute.Discretize.calculateCutPoints()"
"23","7","weka.filters.supervised.attribute.Discretize.FayyadAndIranisMDL(boolean[],boolean[][][],double,int)"
"59","19","weka.filters.supervised.attribute.Discretize.cutPointsForSubset(Instances,int,int,int)"
"63","20","weka.filters.supervised.attribute.Discretize.setOutputFormat()"
"43","14","weka.filters.supervised.attribute.Discretize.convertInstance(Instance)"
"16","8","weka.filters.supervised.attribute.ClassOrder.input(Instance)"
"59","20","weka.filters.supervised.attribute.ClassOrder.batchFinished()"
"7","6","weka.filters.supervised.attribute.ClassOrder.originalValue(double)"
"11","5","weka.filters.supervised.attribute.AttributeSelection.listOptions()"
"32","8","weka.filters.supervised.attribute.AttributeSelection.setOptions(String[])"
"11","6","weka.filters.supervised.attribute.AttributeSelection.input(Instance)"
"17","7","weka.filters.supervised.attribute.AttributeSelection.batchFinished()"
"17","6","weka.filters.supervised.attribute.AttributeSelection.setOutputFormat()"
"15","5","weka.filters.supervised.attribute.AttributeSelection.convertInstance(Instance)"
"21","8","weka.filters.supervised.attribute.PartitionMembership.batchFinished()"
"11","6","weka.filters.supervised.attribute.PartitionMembership.input(Instance)"
"11","5","weka.filters.supervised.attribute.PartitionMembership.getOptions()"
"44","24","weka.filters.supervised.attribute.ClassConditionalProbabilities.determineOutputFormat(Instances)"
"22","7","weka.filters.supervised.attribute.ClassConditionalProbabilities.process(Instances)"
"18","7","weka.filters.supervised.attribute.ClassConditionalProbabilities.convertInstance(Instance)"
"10","5","weka.filters.supervised.attribute.NominalToBinary.setInputFormat(Instances)"
"11","7","weka.filters.supervised.attribute.NominalToBinary.input(Instance)"
"11","6","weka.filters.supervised.attribute.NominalToBinary.batchFinished()"
"25","9","weka.filters.supervised.attribute.NominalToBinary.computeAverageClassValues()"
"58","21","weka.filters.supervised.attribute.NominalToBinary.setOutputFormatNominal()"
"53","20","weka.filters.supervised.attribute.NominalToBinary.setOutputFormatNumeric()"
"33","13","weka.filters.supervised.attribute.NominalToBinary.convertInstanceNominal(Instance)"
"31","11","weka.filters.supervised.attribute.NominalToBinary.convertInstanceNumeric(Instance)"
"64","28","weka.filters.supervised.attribute.MergeNominalValues.determineOutputFormat(Instances)"
"47","17","weka.filters.supervised.attribute.MergeNominalValues.mergeValues(sum[][][])"
"15","5","weka.filters.supervised.attribute.MergeNominalValues.process(Instances)"
"33","10","weka.filters.supervised.attribute.AddClassification.setOptions(String[])"
"19","7","weka.filters.supervised.attribute.AddClassification.getOptions()"
"20","5","weka.filters.supervised.attribute.AddClassification.getActualClassifier()"
"42","18","weka.filters.supervised.attribute.AddClassification.determineOutputFormat(Instances)"
"56","20","weka.filters.supervised.attribute.AddClassification.process(Instances)"
"20","5","weka.filters.supervised.instance.StratifiedRemoveFolds.setOptions(String[])"
"12","6","weka.filters.supervised.instance.StratifiedRemoveFolds.input(Instance)"
"20","7","weka.filters.supervised.instance.StratifiedRemoveFolds.batchFinished()"
"20","5","weka.filters.supervised.instance.SpreadSubsample.setOptions(String[])"
"12","6","weka.filters.supervised.instance.SpreadSubsample.input(Instance)"
"55","26","weka.filters.supervised.instance.SpreadSubsample.createSubsample()"
"19","8","weka.filters.supervised.instance.SpreadSubsample.getClassIndices()"
"23","6","weka.filters.supervised.instance.Resample.setOptions(String[])"
"12","6","weka.filters.supervised.instance.Resample.input(Instance)"
"48","18","weka.filters.supervised.instance.Resample.createSubsample()"
"22","6","weka.filters.supervised.instance.ClassBalancer.process(Instances)"
"11","5","weka.filters.AllFilter.input(Instance)"
"17","11","weka.filters.SimpleStreamFilter.input(Instance)"
"17","7","weka.filters.SimpleStreamFilter.batchFinished()"
"18","7","weka.filters.MultiFilter.isStreamableFilter()"
"7","6","weka.filters.RenameRelation.setInputFormat(Instances)"
"11","5","weka.filters.RenameRelation.input(Instance)"
"19","6","weka.filters.RenameRelation.applyRelationNameChange(Instances)"
"3","5","weka.filters.Filter.copyValues(Instance,boolean)"
"11","6","weka.filters.Filter.batchFinished()"
"7","5","weka.filters.Filter.output()"
"7","5","weka.filters.Filter.outputPeek()"
"209","6","weka.filters.Filter.wekaStaticWrapper(Sourcable,String,Instances,Instances)"
"95","38","weka.filters.Filter.filterFile(Filter,String[])"
"106","41","weka.filters.Filter.batchFilterFile(Filter,String[])"
"14","6","weka.filters.Filter.runFilter(Filter,String[])"
"34","21","weka.associations.ItemSet.containedByTreatZeroAsMissing(Instance)"
"8","7","weka.associations.ItemSet.containedBy(Instance)"
"9","9","weka.associations.ItemSet.equals(Object)"
"34","11","weka.associations.ItemSet.mergeAllItemSets(Object,int,int)"
"17","6","weka.associations.ItemSet.pruneItemSets(Object,Integer)"
"23","6","weka.associations.ItemSet.pruneRules(Object[],double)"
"14","6","weka.associations.ItemSet.singletons(Instances)"
"13","6","weka.associations.ItemSet.toString(Instances,char,char)"
"16","8","weka.associations.FPGrowth.FrequentItemSets.Comparator$1.compare(FrequentBinaryItemSet,FrequentBinaryItemSet)"
"15","7","weka.associations.FPGrowth.FrequentItemSets.toString(int)"
"14","7","weka.associations.FPGrowth.getPremise(FrequentBinaryItemSet,FrequentBinaryItemSet[])"
"23","9","weka.associations.FPGrowth.generateRulesBruteForce(FrequentItemSets,DefaultAssociationRule.METRIC_TYPE,double,int,int,int)"
"28","18","weka.associations.FPGrowth.passesMustContain(Instance,Instance[],int)"
"10","7","weka.associations.FPGrowth.processSingleton(Instance,BinaryItem)"
"28","9","weka.associations.FPGrowth.getSingletons(Object)"
"17","9","weka.associations.FPGrowth.insertInstance(Instance,BinaryItem,FPTreeRoot,int)"
"22","8","weka.associations.FPGrowth.buildFPTree(BinaryItem,Object,int)"
"32","13","weka.associations.FPGrowth.mineTree(FPTreeRoot,FrequentItemSets,int,FrequentBinaryItemSet,int)"
"35","11","weka.associations.FPGrowth.setOptions(String[])"
"30","5","weka.associations.FPGrowth.getOptions()"
"21","7","weka.associations.FPGrowth.parseTransactionsMustContain(Instances)"
"60","23","weka.associations.FPGrowth.buildAssociations(Object)"
"26","14","weka.associations.FPGrowth.toString()"
"24","8","weka.associations.FPGrowth.main(String[])"
"13","7","weka.associations.AbstractAssociator.runAssociator(Associator,String[])"
"19","5","weka.associations.NumericItem.toString(boolean)"
"7","7","weka.associations.NumericItem.equals(Object)"
"24","7","weka.associations.FilteredAssociator.setOptions(String[])"
"15","5","weka.associations.FilteredAssociator.buildAssociations(Instances)"
"48","6","weka.associations.AprioriItemSet.generateRules(double,Integer,int)"
"86","20","weka.associations.AprioriItemSet.generateRulesBruteForce(double,int,Integer,int,int,double)"
"52","8","weka.associations.AprioriItemSet.moreComplexRules(Object[],int,int,double,Integer)"
"15","7","weka.associations.AprioriItemSet.singletons(Instances,boolean)"
"34","11","weka.associations.AprioriItemSet.mergeAllItemSets(Object,int,int)"
"12","5","weka.associations.CheckAssociator.getOptions()"
"27","12","weka.associations.CheckAssociator.testsPerClassType(int,boolean,boolean)"
"19","9","weka.associations.CheckAssociator.testsWithoutClass(boolean,boolean)"
"63","23","weka.associations.CheckAssociator.correctBuildInitialisation(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"19","5","weka.associations.CheckAssociator.canHandleMissing(boolean,boolean,boolean,boolean,boolean,boolean,int,boolean,boolean,int)"
"52","17","weka.associations.CheckAssociator.instanceWeights(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"29","11","weka.associations.CheckAssociator.datasetIntegrity(boolean,boolean,boolean,boolean,boolean,boolean,int,boolean,boolean)"
"42","20","weka.associations.CheckAssociator.runBasicTest(boolean,boolean,boolean,boolean,boolean,boolean,int,int,int,boolean,boolean,int,int,String)"
"41","16","weka.associations.CheckAssociator.printAttributeSummary(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"26","10","weka.associations.AssociatorEvaluation.evaluate(Associator,String[])"
"9","6","weka.associations.AssociatorEvaluation.equals(Object)"
"6","5","weka.associations.LabeledItemSet.equals(Object)"
"9","9","weka.associations.LabeledItemSet.equalCondset(Object)"
"40","13","weka.associations.LabeledItemSet.mergeAllItemSets(Object,int,int)"
"14","7","weka.associations.LabeledItemSet.divide(Instances,boolean)"
"15","7","weka.associations.LabeledItemSet.singletons(Instances,Instances)"
"17","7","weka.associations.LabeledItemSet.pruneItemSets(Object,Integer)"
"8","5","weka.associations.DefaultAssociationRule.getNamedMetricValue(String)"
"4","5","weka.associations.BinaryItem.BinaryItem(Attribute,int)"
"7","6","weka.associations.BinaryItem.equals(Object)"
"33","13","weka.associations.Apriori.removeMissingColumns(Instances)"
"101","33","weka.associations.Apriori.buildAssociations(Instances)"
"20","5","weka.associations.Apriori.pruneRulesForUpperBoundSupport()"
"34","12","weka.associations.Apriori.setOptions(String[])"
"33","7","weka.associations.Apriori.getOptions()"
"136","29","weka.associations.Apriori.toString()"
"10","7","weka.associations.Apriori.metricString()"
"9","6","weka.associations.Apriori.setMetricType(SelectedTag)"
"26","6","weka.associations.Apriori.findLargeItemSets()"
"16","5","weka.associations.Apriori.findRulesQuickly()"
"27","6","weka.associations.Apriori.findLargeCarItemSets()"
"40","13","weka.associations.Apriori.getAssociationRules()"
"6","5","weka.associations.AssociationRule.equals(Object)"
"19","12","weka.associations.AssociationRule.containsItems(Item,boolean)"
"7","6","weka.associations.NominalItem.equals(Object)"
"6","5","weka.associations.Item.compareTo(Item)"
"7","5","weka.associations.Item.equals(Object)"
"12","17","weka.Run.findSchemeMatch(Class,String,boolean,boolean)"
"152","63","weka.Run.main(String[])"
"18","7","weka.core.stopwords.AbstractFileBasedStopwords.read()"
"10","6","weka.core.stopwords.RegExpFromFile.is(String)"
"27","8","weka.core.FilteredDistance.setOptions(String[])"
"47","9","weka.core.packageManagement.VersionPackageConstraint.parseVersion(String)"
"27","8","weka.core.packageManagement.VersionPackageConstraint.compare(String,String)"
"35","35","weka.core.packageManagement.VersionPackageConstraint.checkConstraint(PackageConstraint)"
"21","9","weka.core.packageManagement.PackageManager.create()"
"14","9","weka.core.packageManagement.PackageManager.establishProxy()"
"22","12","weka.core.packageManagement.PackageManager.setProxyAuthentication(URL)"
"71","18","weka.core.packageManagement.DefaultPackage.splitNameVersion(String)"
"27","6","weka.core.packageManagement.DefaultPackage.getDependencies()"
"33","9","weka.core.packageManagement.DefaultPackage.getBaseSystemDependency()"
"26","7","weka.core.packageManagement.DefaultPackage.getMissingDependencies(Package)"
"26","10","weka.core.packageManagement.DefaultPackage.getPrecludedPackages(Package)"
"26","9","weka.core.packageManagement.DefaultPackage.getIncompatibleDependencies(Package)"
"31","10","weka.core.packageManagement.DefaultPackage.isCompatibleBaseSystem()"
"47","7","weka.core.packageManagement.DefaultPackage.main(String[])"
"24","13","weka.core.packageManagement.VersionRangePackageConstraint.setRangeConstraint(String,VersionPackageConstraint.VersionComparison,String,VersionPackageConstraint.VersionComparison)"
"7","5","weka.core.packageManagement.VersionRangePackageConstraint.checkConstraint(String,VersionPackageConstraint.VersionComparison,String,VersionPackageConstraint.VersionComparison,String,boolean)"
"106","30","weka.core.packageManagement.VersionRangePackageConstraint.checkTargetVersionRangePackageConstraint(VersionRangePackageConstraint)"
"190","82","weka.core.packageManagement.VersionRangePackageConstraint.checkTargetVersionPackageConstraint(VersionPackageConstraint)"
"13","11","weka.core.packageManagement.VersionRangePackageConstraint.checkConstraint(PackageConstraint)"
"26","6","weka.core.packageManagement.DefaultPackageManager.downloadArchive(URL,String,PrintStream)"
"12","5","weka.core.packageManagement.DefaultPackageManager.getPackageArchiveInfo(String)"
"8","6","weka.core.packageManagement.DefaultPackageManager.establishPackageHome()"
"17","8","weka.core.packageManagement.DefaultPackageManager.deleteDir(File,PrintStream)"
"13","6","weka.core.packageManagement.DefaultPackageManager.installPackageFromArchive(String,PrintStream)"
"21","6","weka.core.packageManagement.DefaultPackageManager.installAdditionalLibs(String,String[],PrintStream)"
"11","5","weka.core.packageManagement.DefaultPackageManager.installPackages(Package,PrintStream)"
"21","6","weka.core.packageManagement.DefaultPackageManager.getAllDependenciesForPackage(Package,Dependency)"
"32","9","weka.core.packageManagement.DefaultPackageManager.installPackage(String,String,PrintStream)"
"29","13","weka.core.packageManagement.DefaultPackageManager.getConnection(URL)"
"25","9","weka.core.packageManagement.DefaultPackageManager.getRepositoryPackageMetaDataOnlyAsZip(PrintStream)"
"55","6","weka.core.packageManagement.DefaultPackageManager.getRepositoryPackageMetaDataOnlyAsZipLegacy(PrintStream)"
"25","11","weka.core.packageManagement.DefaultPackageManager.getInstalledPackages()"
"8","5","weka.core.packageManagement.DefaultPackageManager.deleteInstalledPackageCacheFile()"
"18","9","weka.core.packageManagement.DefaultPackageManager.loadInstalledPackageCache()"
"8","5","weka.core.packageManagement.DefaultPackageManager.fixStringLength(String,int,boolean)"
"45","13","weka.core.CheckGOE.checkToolTips()"
"7","5","weka.core.StringLocator.copyStringValues(Instance,Instances,AttributeLocator)"
"28","15","weka.core.StringLocator.copyStringValues(Instance,boolean,Instances,AttributeLocator,Instances,AttributeLocator)"
"9","12","weka.core.tokenizers.AlphabeticTokenizer.hasMoreElements()"
"13","13","weka.core.tokenizers.AlphabeticTokenizer.nextElement()"
"27","7","weka.core.tokenizers.Tokenizer.tokenize(Tokenizer,String[])"
"6","5","weka.core.SingleIndex.toString()"
"6","5","weka.core.SingleIndex.getIndex()"
"16","9","weka.core.SingleIndex.setValue()"
"310","138","weka.core.Optimization.lnsrch(m_X[][],m_X[][][],m_X[][][][],double,double[],double[][][],DynamicIntArray)"
"165","62","weka.core.Optimization.findArgmin(x[][],x[][][][])"
"36","15","weka.core.Optimization.solveTriangle(Matrix,Matrix[],boolean,boolean[])"
"65","24","weka.core.Optimization.updateCholeskyFactor(Matrix,Matrix[],Matrix[][],double,double[])"
"9","7","weka.core.Optimization.DynamicIntArray.equal(DynamicIntArray)"
"17","6","weka.core.Environment.substitute(String)"
"166","170","weka.core.stemmers.LovinsStemmer.removeEnding(String)"
"87","58","weka.core.stemmers.LovinsStemmer.recodeEnding(String)"
"20","8","weka.core.stemmers.LovinsStemmer.stemString(String)"
"13","7","weka.core.stemmers.SnowballStemmer.initStemmers()"
"19","6","weka.core.stemmers.SnowballStemmer.getStemmerList(int,String)"
"44","13","weka.core.stemmers.Stemming.useStemmer(Stemmer,String[])"
"25","8","weka.core.WekaPackageLibIsolatingClassLoader.init(File)"
"38","13","weka.core.WekaPackageLibIsolatingClassLoader.checkForNativeLibs(Package,File)"
"27","8","weka.core.WekaPackageLibIsolatingClassLoader.installNativeLibs(File,String,String)"
"20","11","weka.core.WekaPackageLibIsolatingClassLoader.processDir(File,String,boolean)"
"16","8","weka.core.WekaPackageLibIsolatingClassLoader.storeJarContents(File,String,boolean)"
"15","9","weka.core.WekaPackageLibIsolatingClassLoader.findClass(String)"
"16","10","weka.core.WekaPackageLibIsolatingClassLoader.getResource(String)"
"18","14","weka.core.WekaPackageLibIsolatingClassLoader.getResources(String)"
"62","26","weka.core.WekaPackageLibIsolatingClassLoader.closeClassLoader()"
"13","10","weka.core.WekaPackageLibIsolatingClassLoader.integrityCheck()"
"13","7","weka.core.WekaPackageLibIsolatingClassLoader.setSystemProperties(Package,PrintStream)"
"22","11","weka.core.WekaPackageLibIsolatingClassLoader.checkForMissingClasses(Package,PrintStream)"
"23","11","weka.core.WekaPackageLibIsolatingClassLoader.checkForMissingFiles(Package,File,PrintStream)"
"19","9","weka.core.WekaPackageLibIsolatingClassLoader.checkForUnsetEnvVar(Package)"
"15","6","weka.core.scripting.Groovy.newInstance(File,Class)"
"42","11","weka.core.scripting.Jython.newInstance(File,Class,File[])"
"19","9","weka.core.RevisionUtils.getType(String)"
"18","7","weka.core.InheritanceUtils.hasInterface(Class,Class)"
"9","5","weka.core.SerializationHelper.checkForThirdPartyClass(String,WekaPackageLibIsolatingClassLoader)"
"15","7","weka.core.SerializationHelper.ObjectInputStream$1.resolveClass(ObjectStreamClass)"
"28","7","weka.core.PropertyPath.find(Object,Path)"
"21","5","weka.core.PropertyPath.getValue(Object,Path)"
"25","5","weka.core.PropertyPath.setValue(Object,Path,Object)"
"79","30","weka.core.ConjugateGradientOptimization.findArgmin(Override[][],Override[][][][])"
"15","6","weka.core.AttributeStats.addDistinct(double,int,double)"
"36","6","weka.core.AttributeStats.toString()"
"203","64","weka.core.expressionlanguage.parser.Parser.CUP$Parser$actions.CUP$Parser$do_action_part00000000(int,java_cup.runtime.lr_parser,java.util.Stack,int)"
"33","11","weka.core.expressionlanguage.parser.Scanner.zzRefill()"
"209","113","weka.core.expressionlanguage.parser.Scanner.next_token()"
"10","6","weka.core.expressionlanguage.common.SimpleVariableDeclarations.VariableInitializer.add(Node)"
"6","5","weka.core.expressionlanguage.common.SimpleVariableDeclarations.VariableInitializer.setBoolean(String,boolean)"
"6","5","weka.core.expressionlanguage.common.SimpleVariableDeclarations.VariableInitializer.setDouble(String,double)"
"6","5","weka.core.expressionlanguage.common.SimpleVariableDeclarations.VariableInitializer.setString(String,String)"
"33","26","weka.core.expressionlanguage.common.JavaMacro.evaluate(Node)"
"28","20","weka.core.expressionlanguage.common.JavaMacro.parseSignature(String,Class)"
"11","8","weka.core.expressionlanguage.common.JavaMacro.getType(String)"
"9","8","weka.core.expressionlanguage.common.JavaMacro.isJavaIdentifier(String)"
"10","5","weka.core.expressionlanguage.common.JavaMacro.JavaMethod.evaluateArgs()"
"5","5","weka.core.expressionlanguage.common.VariableDeclarationsCompositor.getVariable(String)"
"6","8","weka.core.expressionlanguage.common.Operators.plus(Node,Node)"
"4","5","weka.core.expressionlanguage.common.Operators.minus(Node,Node)"
"4","5","weka.core.expressionlanguage.common.Operators.times(Node,Node)"
"4","5","weka.core.expressionlanguage.common.Operators.division(Node,Node)"
"4","5","weka.core.expressionlanguage.common.Operators.pow(Node,Node)"
"4","5","weka.core.expressionlanguage.common.Operators.lessThan(Node,Node)"
"4","5","weka.core.expressionlanguage.common.Operators.lessEqual(Node,Node)"
"4","5","weka.core.expressionlanguage.common.Operators.greaterThan(Node,Node)"
"4","5","weka.core.expressionlanguage.common.Operators.greaterEqual(Node,Node)"
"4","5","weka.core.expressionlanguage.common.Operators.equal(Node,Node)"
"4","5","weka.core.expressionlanguage.common.Operators.and(Node,Node)"
"4","5","weka.core.expressionlanguage.common.Operators.or(Node,Node)"
"4","5","weka.core.expressionlanguage.common.Operators.is(Node,Node)"
"7","7","weka.core.expressionlanguage.common.Operators.regexp(Node,Node)"
"5","5","weka.core.expressionlanguage.common.MacroDeclarationsCompositor.getMacro(String)"
"14","15","weka.core.expressionlanguage.common.IfElseMacro.evaluate(Node)"
"9","8","weka.core.expressionlanguage.common.MathFunctions.DoubleUnaryMacro.evaluate(Node)"
"8","7","weka.core.expressionlanguage.common.MathFunctions.PowMacro.evaluate(Node)"
"6","6","weka.core.expressionlanguage.weka.InstancesHelper.evaluate(Node)"
"8","7","weka.core.expressionlanguage.weka.InstancesHelper.getIndex(String)"
"9","10","weka.core.expressionlanguage.weka.InstancesHelper.getVariable(String)"
"24","9","weka.core.Stopwords.main(String[])"
"44","13","weka.core.DictionaryBuilder.getOptions()"
"67","15","weka.core.DictionaryBuilder.setOptions(String[])"
"11","9","weka.core.DictionaryBuilder.setup(Instances)"
"18","10","weka.core.DictionaryBuilder.determineSelectedRange(Instances)"
"22","14","weka.core.DictionaryBuilder.getVectorizedFormat()"
"32","16","weka.core.DictionaryBuilder.vectorizeBatch(Instances,boolean)"
"83","36","weka.core.DictionaryBuilder.vectorizeInstance(Instance,Instance[],boolean)"
"15","10","weka.core.DictionaryBuilder.normalizeInstance(Instance,int)"
"44","19","weka.core.DictionaryBuilder.processInstance(Instance)"
"8","6","weka.core.DictionaryBuilder.pruneDictionary()"
"16","6","weka.core.DictionaryBuilder.aggregate(DictionaryBuilder)"
"36","15","weka.core.DictionaryBuilder.finalizeDictionary()"
"50","23","weka.core.DictionaryBuilder.loadDictionary(Reader)"
"15","8","weka.core.DictionaryBuilder.loadDictionary(InputStream)"
"15","8","weka.core.DictionaryBuilder.saveDictionary(Writer)"
"14","5","weka.core.DictionaryBuilder.saveDictionary(OutputStream)"
"20","10","weka.core.SelectedTag.SelectedTag(int,Tag[])"
"7","6","weka.core.SelectedTag.SelectedTag(String,Tag[])"
"8","7","weka.core.SelectedTag.equals(Object)"
"48","10","weka.core.CheckScheme.setOptions(String[])"
"21","6","weka.core.CheckScheme.attributeTypeToString(int)"
"17","14","weka.core.CheckScheme.compareDatasets(Instances,Instances)"
"9","8","weka.core.CheckScheme.addMissing(Instances,int,boolean,boolean)"
"16","7","weka.core.ClassCache.initFromDir(String,File)"
"16","9","weka.core.ClassCache.initFromManifest(Manifest)"
"18","7","weka.core.ClassCache.initFromJar(File)"
"19","7","weka.core.ClassCache.initFromClasspathPart(String)"
"16","5","weka.core.ClassCache.find(String)"
"22","7","weka.core.TechnicalInformation.generateID()"
"96","35","weka.core.TechnicalInformation.toString()"
"24","5","weka.core.TechnicalInformation.toBibTex()"
"55","6","weka.core.TechnicalInformation.main(String[])"
"36","12","weka.core.Option.listOptionsForClass(Class)"
"12","5","weka.core.Option.getOptionsForHierarchy(Object,Class)"
"55","26","weka.core.Option.getOptions(Object,Class)"
"133","56","weka.core.Option.setOptions(String[],Object,Class)"
"14","5","weka.core.Queue.main(String[])"
"18","6","weka.core.Instances.Instances(String,Attribute,int)"
"16","7","weka.core.Instances.stringFreeStructure()"
"12","7","weka.core.Instances.allAttributeWeightsIdentical()"
"9","6","weka.core.Instances.allInstanceWeightsIdentical()"
"14","12","weka.core.Instances.checkInstance(Instance)"
"24","10","weka.core.Instances.deleteAttributeAt(int)"
"10","8","weka.core.Instances.equalHeadersMsg(Instances)"
"29","10","weka.core.Instances.insertAttributeAt(Attribute,int)"
"13","8","weka.core.Instances.kthSmallestValue(int,int)"
"22","11","weka.core.Instances.meanOrMode(int)"
"7","5","weka.core.Instances.numClasses()"
"27","10","weka.core.Instances.replaceAttributeAt(Attribute,int)"
"21","10","weka.core.Instances.renameAttribute(int,String)"
"17","5","weka.core.Instances.setAttributeWeight(int,double)"
"63","27","weka.core.Instances.resampleWithWeights(Random,Random[],Random[][],boolean,double)"
"18","6","weka.core.Instances.sortBasedOnNominalAttribute(int)"
"17","5","weka.core.Instances.sort(int)"
"16","11","weka.core.Instances.stratify(int)"
"17","6","weka.core.Instances.testCV(int,int)"
"18","6","weka.core.Instances.trainCV(int,int)"
"30","11","weka.core.Instances.variances()"
"26","10","weka.core.Instances.variance(int)"
"26","7","weka.core.Instances.attributeStats(int)"
"77","7","weka.core.Instances.toSummaryString()"
"12","6","weka.core.Instances.mergeInstances(Instances,Instances)"
"133","17","weka.core.Instances.test(String[])"
"51","19","weka.core.Instances.main(String[])"
"43","19","weka.core.converters.LibSVMSaver.writeIncremental(Instance)"
"21","9","weka.core.converters.LibSVMSaver.writeBatch()"
"9","5","weka.core.converters.LibSVMLoader.reset()"
"56","17","weka.core.converters.LibSVMLoader.getStructure()"
"25","9","weka.core.converters.LibSVMLoader.getDataSet()"
"17","9","weka.core.converters.ConverterUtils.DataSource.DataSource(String)"
"16","6","weka.core.converters.ConverterUtils.DataSource.reset()"
"19","6","weka.core.converters.ConverterUtils.DataSource.nextElement(Instances)"
"14","5","weka.core.converters.MatlabSaver.matlabHeader()"
"47","21","weka.core.converters.MatlabSaver.writeIncremental(Instance)"
"23","9","weka.core.converters.MatlabSaver.writeBatch()"
"19","11","weka.core.converters.ArffLoader.ArffReader.ArffReader(Reader,Instances,int,int,boolean,String)"
"7","6","weka.core.converters.ArffLoader.ArffReader.getFirstToken()"
"15","8","weka.core.converters.ArffLoader.ArffReader.getInstanceWeight()"
"11","7","weka.core.converters.ArffLoader.ArffReader.getNextToken()"
"18","5","weka.core.converters.ArffLoader.ArffReader.initTokenizer()"
"11","6","weka.core.converters.ArffLoader.ArffReader.getInstance(Instances,boolean)"
"71","27","weka.core.converters.ArffLoader.ArffReader.getInstanceSparse(boolean)"
"54","19","weka.core.converters.ArffLoader.ArffReader.getInstanceFull(boolean)"
"23","7","weka.core.converters.ArffLoader.ArffReader.readHeader(int)"
"86","22","weka.core.converters.ArffLoader.ArffReader.parseAttribute(Attribute)"
"15","7","weka.core.converters.ArffLoader.ArffReader.getAttributeWeight()"
"9","5","weka.core.converters.ArffLoader.reset()"
"10","6","weka.core.converters.ArffLoader.getStructure()"
"17","8","weka.core.converters.ArffLoader.getDataSet()"
"14","7","weka.core.converters.ArffLoader.getNextInstance(Instances)"
"92","42","weka.core.converters.C45Saver.writeIncremental(Instance)"
"71","31","weka.core.converters.C45Saver.writeBatch()"
"43","15","weka.core.converters.C45Saver.setOptions(String[])"
"20","7","weka.core.converters.XRFFSaver.writeBatch()"
"15","7","weka.core.converters.SerializedInstancesSaver.writeBatch()"
"59","26","weka.core.converters.CSVSaver.writeIncremental(Instance)"
"35","16","weka.core.converters.CSVSaver.writeBatch()"
"22","9","weka.core.converters.CSVSaver.instanceToString(Instance)"
"50","21","weka.core.converters.ArffSaver.writeIncremental(Instance)"
"28","11","weka.core.converters.ArffSaver.writeBatch()"
"35","10","weka.core.converters.SVMLightLoader.svmlightToArray(String)"
"22","5","weka.core.converters.SVMLightLoader.determineClassAttribute()"
"42","17","weka.core.converters.SVMLightLoader.getStructure()"
"33","13","weka.core.converters.SVMLightLoader.getDataSet()"
"28","6","weka.core.converters.CSVLoader.getOptions()"
"46","14","weka.core.converters.CSVLoader.setOptions(String[])"
"38","16","weka.core.converters.CSVLoader.getNextInstance(Instances)"
"18","7","weka.core.converters.CSVLoader.getDataSet()"
"16","9","weka.core.converters.CSVLoader.readData(boolean)"
"34","14","weka.core.converters.CSVLoader.makeInstance()"
"21","8","weka.core.converters.CSVLoader.makeStructure()"
"104","30","weka.core.converters.CSVLoader.readHeader()"
"10","5","weka.core.converters.CSVLoader.separatorAndEnclosuresToArray()"
"11","5","weka.core.converters.CSVLoader.initTokenizer(StreamTokenizer)"
"55","23","weka.core.converters.CSVLoader.getInstance(StreamTokenizer)"
"9","5","weka.core.converters.AbstractSaver.setInstances(Instances)"
"14","9","weka.core.converters.AbstractSaver.setStructure(Instances)"
"42","23","weka.core.converters.DictionarySaver.writeIncremental(Instance)"
"29","16","weka.core.converters.DictionarySaver.writeBatch()"
"7","6","weka.core.converters.StreamTokenizerUtils.getFirstToken(StreamTokenizer)"
"9","7","weka.core.converters.StreamTokenizerUtils.getToken(StreamTokenizer)"
"63","20","weka.core.converters.DatabaseSaver.writeStructure()"
"30","10","weka.core.converters.DatabaseSaver.writeInstance(Instance)"
"35","17","weka.core.converters.DatabaseSaver.writeIncremental(Instance)"
"21","10","weka.core.converters.DatabaseSaver.writeBatch()"
"25","15","weka.core.converters.DatabaseSaver.getOptions()"
"36","9","weka.core.converters.DatabaseSaver.setOptions(String[])"
"14","6","weka.core.converters.XRFFLoader.setSource(File)"
"11","8","weka.core.converters.XRFFLoader.getStructure()"
"11","7","weka.core.converters.XRFFLoader.getDataSet()"
"31","9","weka.core.converters.C45Loader.setSource(File)"
"19","8","weka.core.converters.C45Loader.getDataSet()"
"18","8","weka.core.converters.C45Loader.getNextInstance(Instances)"
"31","13","weka.core.converters.C45Loader.getInstance(StreamTokenizer)"
"61","20","weka.core.converters.C45Loader.readHeader(StreamTokenizer)"
"12","5","weka.core.converters.TextDirectoryLoader.getOptions()"
"7","6","weka.core.converters.TextDirectoryLoader.setSource(File)"
"22","7","weka.core.converters.TextDirectoryLoader.getStructure()"
"46","14","weka.core.converters.TextDirectoryLoader.getDataSet()"
"60","17","weka.core.converters.TextDirectoryLoader.getNextInstance(Instances)"
"23","8","weka.core.converters.TextDirectoryLoader.run(Object,String[])"
"14","6","weka.core.converters.JSONLoader.setSource(File)"
"11","8","weka.core.converters.JSONLoader.getStructure()"
"11","7","weka.core.converters.JSONLoader.getDataSet()"
"9","5","weka.core.converters.MatlabLoader.reset()"
"57","20","weka.core.converters.MatlabLoader.getStructure()"
"25","10","weka.core.converters.MatlabLoader.getDataSet()"
"19","7","weka.core.converters.SVMLightSaver.instanceToSvmlight(Instance)"
"43","19","weka.core.converters.SVMLightSaver.writeIncremental(Instance)"
"21","9","weka.core.converters.SVMLightSaver.writeBatch()"
"28","11","weka.core.converters.AbstractFileSaver.setOptions(String[])"
"6","5","weka.core.converters.AbstractFileSaver.cancel()"
"37","15","weka.core.converters.AbstractFileSaver.setDestination(File)"
"20","11","weka.core.converters.AbstractFileSaver.setDirAndPrefix(String,String)"
"13","6","weka.core.converters.AbstractFileSaver.runFileSaver(AbstractFileSaver,String[])"
"17","7","weka.core.converters.DatabaseLoader.resetOptions()"
"20","9","weka.core.converters.DatabaseLoader.reset()"
"14","5","weka.core.converters.DatabaseLoader.endOfQuery(boolean)"
"28","11","weka.core.converters.DatabaseLoader.checkForKey()"
"26","9","weka.core.converters.DatabaseLoader.limitQuery(String,int,int)"
"157","49","weka.core.converters.DatabaseLoader.getStructure()"
"46","14","weka.core.converters.DatabaseLoader.getDataSet()"
"109","30","weka.core.converters.DatabaseLoader.readInstance(ResultSet)"
"40","21","weka.core.converters.DatabaseLoader.getNextInstance(Instances)"
"27","13","weka.core.converters.DatabaseLoader.getOptions()"
"29","8","weka.core.converters.DatabaseLoader.setOptions(String[])"
"18","5","weka.core.converters.DatabaseLoader.main(String[])"
"6","5","weka.core.converters.SerializedInstancesLoader.getNextInstance(Instances)"
"34","9","weka.core.converters.ConverterResources.initialize()"
"26","7","weka.core.converters.ConverterResources.getFileConverters(String,String[])"
"23","8","weka.core.converters.JSONSaver.writeBatch()"
"30","11","weka.core.converters.AbstractFileLoader.setSource(File)"
"23","5","weka.core.converters.AbstractFileLoader.makeOptionStr(AbstractFileLoader)"
"38","15","weka.core.converters.AbstractFileLoader.runFileLoader(AbstractFileLoader,String[])"
"12","10","weka.core.SerializedObject.equals(Object)"
"17","8","weka.core.SerializedObject.ObjectInputStream$1.resolveClass(ObjectStreamClass)"
"17","8","weka.core.SerializedObject.ObjectInputStream$1.resolveClass(ObjectStreamClass)"
"57","6","weka.core.SerializedObject.getObject()"
"5","6","weka.core.Utils.indexToOrdinal(int)"
"19","6","weka.core.Utils.correlation(double[],double[],int)"
"27","11","weka.core.Utils.doubleToString(double,int,int)"
"23","8","weka.core.Utils.arrayToString(Object)"
"11","7","weka.core.Utils.checkForRemainingOptions(String[])"
"14","8","weka.core.Utils.getOption(String,String[])"
"12","11","weka.core.Utils.getOptionPos(String,String[])"
"8","16","weka.core.Utils.quote(String)"
"6","11","weka.core.Utils.unquote(String)"
"19","6","weka.core.Utils.backQuoteChars(String)"
"26","7","weka.core.Utils.convertNewLines(String)"
"24","7","weka.core.Utils.revertNewLines(String)"
"10","5","weka.core.Utils.partitionOptions(String[])"
"23","6","weka.core.Utils.replaceStrings(String,String[],String[][])"
"41","18","weka.core.Utils.splitOptions(String,String[],String[][])"
"16","8","weka.core.Utils.joinOptions(String[])"
"7","6","weka.core.Utils.normalize(sum[],double)"
"15","7","weka.core.Utils.probRound(double,Random)"
"23","7","weka.core.Utils.sort(mask[][])"
"28","9","weka.core.Utils.stableSort(index[][])"
"14","6","weka.core.Utils.variance(double[])"
"8","6","weka.core.Utils.partition(int[],int[][],int,int,double)"
"17","9","weka.core.Utils.partition(int[],int[][],int,int)"
"20","7","weka.core.Utils.quickSort(r[],r[][],int,int)"
"22","9","weka.core.Utils.select(int[],int[][],int,int,int)"
"44","11","weka.core.Utils.createRelativePath(File)"
"9","5","weka.core.Utils.select(int[],int[][],int,int,int)"
"9","5","weka.core.Utils.getDontShowDialog(String)"
"10","6","weka.core.Utils.setDontShowDialog(String)"
"13","6","weka.core.Utils.setDontShowDialogResponse(String,String)"
"34","7","weka.core.Utils.breakUp(String,int)"
"54","18","weka.core.Utils.getGlobalInfo(Object,boolean)"
"22","5","weka.core.Utils.lineWrap(String,int)"
"19","8","weka.core.Utils.configureRangeFromRangeStringOrAttributeNameList(Instances,String)"
"41","13","weka.core.Utils.takeSample(result[][],Random)"
"95","15","weka.core.Utils.main(String[])"
"28","11","weka.core.ContingencyTables.chiVal(double[][],boolean)"
"32","16","weka.core.ContingencyTables.cochransCriterion(boolean[][])"
"12","7","weka.core.ContingencyTables.CramersV(double[][])"
"12","5","weka.core.ContingencyTables.entropyConditionedOnColumns(double[][])"
"12","5","weka.core.ContingencyTables.entropyConditionedOnRows(double[][])"
"11","5","weka.core.ContingencyTables.entropyOverRows(double[][])"
"11","5","weka.core.ContingencyTables.entropyOverColumns(double[][])"
"21","7","weka.core.ContingencyTables.gainRatio(double[][])"
"18","7","weka.core.ContingencyTables.log2MultipleHypergeometric(double[][])"
"29","11","weka.core.ContingencyTables.reduceMatrix(log2[][][][])"
"21","8","weka.core.ContingencyTables.symmetricalUncertainty(double[][])"
"19","6","weka.core.ContingencyTables.tauVal(double[][])"
"9","6","weka.core.ContingencyTables.lnFunc(double)"
"9","5","weka.core.ContingencyTables.chiCell(double,double,boolean)"
"47","7","weka.core.ContingencyTables.main(String[])"
"17","7","weka.core.PluginManager.addFromProperties(String,Properties,boolean)"
"19","8","weka.core.PluginManager.addPluginResourcesFromProperty(String,String)"
"11","7","weka.core.PluginManager.getPluginResourceAsStream(String,String)"
"10","5","weka.core.PluginManager.getPluginNamesOfType(String)"
"11","7","weka.core.PluginManager.getPluginInstance(String,String)"
"13","5","weka.core.BinarySparseInstance.mergeInstance(Instance)"
"15","5","weka.core.BinarySparseInstance.setValue(int,double)"
"17","7","weka.core.BinarySparseInstance.toString()"
"15","5","weka.core.BinarySparseInstance.forceDeleteAttributeAt(int)"
"17","5","weka.core.BinarySparseInstance.forceInsertAttributeAt(int)"
"106","11","weka.core.BinarySparseInstance.main(String[])"
"17","7","weka.core.NominalAttributeInfo.NominalAttributeInfo(String,String)"
"15","8","weka.core.Check.forName(String,Class,String,String[])"
"13","5","weka.core.Check.runCheck(Check,String[])"
"10","10","weka.core.CheckOptionHandler.compareOptions(String[],String[])"
"19","7","weka.core.CheckOptionHandler.checkListOptions()"
"28","7","weka.core.CheckOptionHandler.checkCanonicalUserOptions()"
"26","6","weka.core.CheckOptionHandler.checkResettingOptions()"
"20","7","weka.core.CheckOptionHandler.doTests()"
"23","5","weka.core.xml.XMLBasicSerialization.readDefaultListModel(Element)"
"26","5","weka.core.xml.XMLBasicSerialization.readCollection(Element)"
"33","6","weka.core.xml.XMLBasicSerialization.readMap(Element)"
"23","6","weka.core.xml.XMLBasicSerialization.readCostMatrix(Element)"
"15","6","weka.core.xml.XMLSerialization.checkVersion()"
"18","7","weka.core.xml.XMLSerialization.getDescriptors(Object)"
"14","9","weka.core.xml.XMLSerialization.stringToBoolean(String)"
"18","6","weka.core.xml.XMLSerialization.addElement(Element,String,String,boolean,int,boolean)"
"78","25","weka.core.xml.XMLSerialization.writeToXML(Element,Object,String)"
"44","11","weka.core.xml.XMLSerialization.invokeWriteToXML(Element,Object,String)"
"28","9","weka.core.xml.XMLSerialization.determineClass(String)"
"33","10","weka.core.xml.XMLSerialization.getPrimitive(Element)"
"37","15","weka.core.xml.XMLSerialization.readFromXML(Object,String,Element)"
"26","7","weka.core.xml.XMLSerialization.getArrayDimensions(Element)"
"53","11","weka.core.xml.XMLSerialization.readFromXML(Element)"
"37","13","weka.core.xml.XMLSerialization.invokeReadFromXML(Element)"
"25","7","weka.core.xml.XMLOptions.fixHyphens()"
"50","20","weka.core.xml.XMLOptions.toCommandLine(Element)"
"24","8","weka.core.xml.XMLSerializationMethodHandler.addMethods(MethodHandler,Method,Method[])"
"58","16","weka.core.xml.XMLInstances.addAttribute(Element,Attribute)"
"34","9","weka.core.xml.XMLInstances.addInstance(Element,Instance)"
"65","17","weka.core.xml.XMLInstances.createAttribute(Element)"
"57","12","weka.core.xml.XMLInstances.createInstance(Instances,Element)"
"18","6","weka.core.xml.XMLInstances.main(String[])"
"14","5","weka.core.xml.XMLDocument.getChildTags(Node,String)"
"38","11","weka.core.xml.XMLDocument.toString(StringBuffer,Node,int)"
"35","5","weka.core.xml.SerialUIDChanger.changeUID(long,long,String,String)"
"15","6","weka.core.ClassloaderUtil.addURL(URL)"
"30","10","weka.core.Statistics.normalInverse(double)"
"48","22","weka.core.Statistics.lnGamma(double)"
"34","14","weka.core.Statistics.errorFunctionComplemented(double)"
"18","10","weka.core.Statistics.incompleteGamma(double,double)"
"42","12","weka.core.Statistics.incompleteGammaComplement(double,double)"
"48","24","weka.core.Statistics.gamma(double)"
"65","30","weka.core.Statistics.incompleteBeta(double,double,double)"
"64","9","weka.core.Statistics.incompleteBetaFraction1(double,double,double)"
"65","9","weka.core.Statistics.incompleteBetaFraction2(double,double,double)"
"29","5","weka.core.Statistics.powerSeries(double,double,double)"
"11","6","weka.core.pmml.Discretize.DiscretizeBin.DiscretizeBin(Element,FieldMetaInfo.Optype)"
"18","8","weka.core.pmml.Discretize.Discretize(Element,FieldMetaInfo.Optype,Attribute)"
"32","16","weka.core.pmml.Discretize.setUpField()"
"4","5","weka.core.pmml.Discretize.getOutputDef()"
"30","14","weka.core.pmml.Discretize.getResult(double[])"
"12","5","weka.core.pmml.Discretize.toString(String)"
"29","13","weka.core.pmml.VectorDictionary.VectorDictionary(Element,MiningSchema)"
"23","15","weka.core.pmml.DefineFunction.DefineFunction(Element,TransformationDictionary)"
"16","11","weka.core.pmml.DefineFunction.setParameterDefs(Attribute)"
"12","6","weka.core.pmml.NormDiscrete.NormDiscrete(Element,FieldMetaInfo.Optype,Attribute)"
"18","11","weka.core.pmml.NormDiscrete.setUpField()"
"52","23","weka.core.pmml.MappingInfo.MappingInfo(Instances,MiningSchema,Logger)"
"29","7","weka.core.pmml.MappingInfo.fieldsMappingString(Instances,Instances)"
"26","8","weka.core.pmml.MappingInfo.instanceToSchema(Instance,MiningSchema)"
"19","6","weka.core.pmml.PMMLFactory.getPMMLModel(InputStream,Logger)"
"26","8","weka.core.pmml.PMMLFactory.getModelInstance(Document,ModelType,Element,Instances,MiningSchema)"
"20","13","weka.core.pmml.PMMLFactory.getModelType(Document)"
"29","11","weka.core.pmml.PMMLFactory.getModelElement(Document,ModelType)"
"24","10","weka.core.pmml.PMMLFactory.getMiningSchemaAsInstances(Element,Instances)"
"35","16","weka.core.pmml.PMMLFactory.getDataDictionaryAsInstances(Document)"
"19","6","weka.core.pmml.PMMLFactory.applyClassifier(PMMLModel,Instances)"
"12","5","weka.core.pmml.PMMLFactory.main(String[])"
"7","5","weka.core.pmml.BuiltInMath.getResult(double[])"
"12","6","weka.core.pmml.MiningFieldMetaInfo.applyMissingValueTreatment(double)"
"12","5","weka.core.pmml.MiningFieldMetaInfo.applyOutlierTreatment(double)"
"36","16","weka.core.pmml.MiningFieldMetaInfo.MiningFieldMetaInfo(Element)"
"19","11","weka.core.pmml.Apply.Apply(Element,FieldMetaInfo.Optype,Attribute,TransformationDictionary)"
"4","5","weka.core.pmml.Apply.getOutputDef()"
"9","11","weka.core.pmml.FieldRef.validateField()"
"21","13","weka.core.pmml.FieldRef.getResult(double[])"
"14","7","weka.core.pmml.FieldRef.getResultCategorical(String[])"
"13","6","weka.core.pmml.DerivedFieldMetaInfo.DerivedFieldMetaInfo(Element,Attribute,TransformationDictionary)"
"14","8","weka.core.pmml.BuiltInString.getResult(double[])"
"10","5","weka.core.pmml.Constant.Constant(Element,FieldMetaInfo.Optype,Attribute)"
"48","10","weka.core.pmml.SparseArray.initialize(Element)"
"17","10","weka.core.pmml.SparseArray.locateIndex(int)"
"14","6","weka.core.pmml.Expression.getExpression(Node,FieldMetaInfo.Optype,Attribute,TransformationDictionary)"
"23","10","weka.core.pmml.Expression.getExpression(String,Node,FieldMetaInfo.Optype,Attribute,TransformationDictionary)"
"30","14","weka.core.pmml.NormContinuous.NormContinuous(Element,FieldMetaInfo.Optype,Attribute)"
"9","6","weka.core.pmml.NormContinuous.setUpField()"
"38","11","weka.core.pmml.NormContinuous.computeNorm(double[],double[][],double[][][])"
"56","23","weka.core.pmml.MiningSchema.MiningSchema(Element,Instances,TransformationDictionary)"
"18","6","weka.core.pmml.MiningSchema.convertStringAttsToNominal()"
"19","7","weka.core.pmml.MiningSchema.convertNumericAttToNominal(int,String)"
"13","5","weka.core.pmml.MiningSchema.toString()"
"5","8","weka.core.pmml.Array.isArray(Element)"
"25","14","weka.core.pmml.Array.create(Object,Integer)"
"6","5","weka.core.pmml.Array.create(Element)"
"30","9","weka.core.pmml.Array.initialize(Element)"
"63","44","weka.core.pmml.TargetMetaInfo.TargetMetaInfo(Element)"
"13","7","weka.core.pmml.TargetMetaInfo.getPriorProbability(String)"
"21","12","weka.core.pmml.TargetMetaInfo.applyMinMaxRescaleCast(double)"
"9","6","weka.core.pmml.TargetMetaInfo.getFieldAsAttribute()"
"7","6","weka.core.pmml.BuiltInArithmetic.getResult(double[])"
"11","7","weka.core.pmml.FieldMetaInfo.Value.Value(Element)"
"16","10","weka.core.pmml.FieldMetaInfo.Interval.Interval(Element)"
"23","13","weka.core.pmml.FieldMetaInfo.Interval.containsValue(double)"
"8","5","weka.core.pmml.FieldMetaInfo.FieldMetaInfo(Element)"
"13","5","weka.core.pmml.TransformationDictionary.TransformationDictionary(Element,Instances)"
"13","5","weka.core.pmml.TransformationDictionary.toString()"
"66","22","weka.core.pmml.Function.getFunction(String)"
"7","5","weka.core.pmml.Function.getFunction(String,TransformationDictionary)"
"13","8","weka.core.pmml.VectorInstance.VectorInstance(Element,FieldRef)"
"20","7","weka.core.pmml.VectorInstance.dotProduct(VectorInstance)"
"5","5","weka.core.pmml.jaxbbindings.CATSCORINGMETHOD.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.COMPAREFUNCTION.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.LINKFUNCTION.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.CONTSCORINGMETHOD.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.TIMEANCHOR2.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.SVMCLASSIFICATIONMETHOD.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.NOTRUECHILDSTRATEGY.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.TIMESERIESALGORITHM.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.DATATYPE.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.GAP.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.TIMESERIESUSAGE.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.INVALIDVALUETREATMENTMETHOD.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.MISSINGVALUESTRATEGY.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.FIELDUSAGETYPE.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.BASELINETESTSTATISTIC.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.OPTYPE.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.SVMREPRESENTATION.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.OUTLIERTREATMENTMETHOD.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.INTERPOLATIONMETHOD.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.TIMEEXCEPTIONTYPE.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.REGRESSIONNORMALIZATIONMETHOD.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.RESULTFEATURE.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.RULEFEATURE.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.MULTIPLEMODELMETHOD.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.MISSINGVALUETREATMENTMETHOD.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.VALIDTIMESPEC.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.MININGFUNCTION.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.DELIMITER2.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.NNNORMALIZATIONMETHOD.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.ACTIVATIONFUNCTION.fromValue(String)"
"5","5","weka.core.pmml.jaxbbindings.CUMULATIVELINKFUNCTION.fromValue(String)"
"17","10","weka.core.SparseInstance.locateIndex(int)"
"20","7","weka.core.SparseInstance.replaceMissingValues(Override[])"
"29","5","weka.core.SparseInstance.setValue(int,double)"
"39","15","weka.core.SparseInstance.toStringNoWeight(int)"
"23","5","weka.core.SparseInstance.forceDeleteAttributeAt(int)"
"27","5","weka.core.SparseInstance.forceInsertAttributeAt(int)"
"107","11","weka.core.SparseInstance.main(String[])"
"23","9","weka.core.TechnicalInformationHandlerJavadoc.generateJavadoc(int)"
"215","88","weka.core.json.Parser.CUP$Parser$actions.CUP$Parser$do_action_part00000000(int,java_cup.runtime.lr_parser,java.util.Stack,int)"
"8","5","weka.core.json.JSONNode.getValue(Object)"
"23","9","weka.core.json.JSONNode.addArrayElement(Object)"
"34","16","weka.core.json.JSONNode.escape(String)"
"25","6","weka.core.json.JSONNode.unescape(String)"
"39","9","weka.core.json.JSONNode.toString(StringBuffer)"
"23","7","weka.core.json.JSONNode.toString()"
"33","11","weka.core.json.Scanner.zzRefill()"
"148","69","weka.core.json.Scanner.next_token()"
"38","8","weka.core.json.JSONInstances.toAttribute(JSONNode,JSONNode[])"
"58","22","weka.core.json.JSONInstances.toInstance(JSONNode,Instances)"
"44","16","weka.core.json.JSONInstances.toInstances(JSONNode,boolean)"
"19","5","weka.core.json.JSONInstances.toJSON(Instances,Attribute)"
"29","8","weka.core.json.JSONInstances.toJSON(Instance)"
"15","7","weka.core.AlgVector.AlgVector(Instance)"
"16","8","weka.core.AlgVector.getAsInstance(Instances,Random)"
"7","5","weka.core.RelationalLocator.copyRelationalValues(Instance,Instances,AttributeLocator)"
"28","15","weka.core.RelationalLocator.copyRelationalValues(Instance,boolean,Instances,AttributeLocator,Instances,AttributeLocator)"
"15","6","weka.core.Memory.isOutOfMemory()"
"8","5","weka.core.Memory.showOutOfMemory()"
"17","9","weka.core.Memory.showMemoryIsLow()"
"17","6","weka.core.Memory.stopThreads()"
"7","5","weka.core.Range.isInRange(int)"
"23","11","weka.core.Range.toString()"
"21","10","weka.core.Range.getSelection()"
"19","6","weka.core.Range.indicesToRangeList(String[])"
"11","6","weka.core.Range.setFlags()"
"11","7","weka.core.Range.rangeSingle(String)"
"18","17","weka.core.Range.isValidRange(String)"
"14","5","weka.core.Range.main(String[])"
"63","24","weka.core.neighboursearch.kdtrees.KMeansInpiredMethod.splitNode(KDTreeNode,int,int[][],int[][][][])"
"17","9","weka.core.neighboursearch.kdtrees.KMeansInpiredMethod.partition(Instances,Instances[],int,int,int)"
"17","9","weka.core.neighboursearch.kdtrees.MedianOfWidestDimension.partition(int,int[],int,int)"
"9","5","weka.core.neighboursearch.kdtrees.MedianOfWidestDimension.select(int,int[],int,int,int)"
"53","22","weka.core.neighboursearch.kdtrees.SlidingMidPointOfWidestSide.splitNode(KDTreeNode,int,int[][],int[][][][])"
"12","9","weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter.correctlyInitialized()"
"20","8","weka.core.neighboursearch.kdtrees.KDTreeNodeSplitter.widestDim(int[][],int[][][][])"
"14","6","weka.core.neighboursearch.kdtrees.MidPointOfWidestDimension.splitNode(KDTreeNode,int,int[][],int[][][][])"
"13","5","weka.core.neighboursearch.NearestNeighbourSearch.MyHeap.putBySubstitute(int,double)"
"20","7","weka.core.neighboursearch.NearestNeighbourSearch.MyHeap.downheap()"
"19","9","weka.core.neighboursearch.NearestNeighbourSearch.NeighborList.insertSorted(double,Instance)"
"15","7","weka.core.neighboursearch.NearestNeighbourSearch.NeighborList.pruneToK(int)"
"29","8","weka.core.neighboursearch.NearestNeighbourSearch.combSort11(double[],int[])"
"20","9","weka.core.neighboursearch.NearestNeighbourSearch.partition(int[],int[][],int,int)"
"14","5","weka.core.neighboursearch.TreePerformanceStats.searchFinish()"
"32","21","weka.core.neighboursearch.TreePerformanceStats.getMeasure(String)"
"26","6","weka.core.neighboursearch.BallTree.kNearestNeighbours(Instance,int)"
"50","23","weka.core.neighboursearch.BallTree.nearestNeighbours(MyHeap,BallNode,Instance,int)"
"14","10","weka.core.neighboursearch.BallTree.getMeasure(String)"
"53","19","weka.core.neighboursearch.LinearNNSearch.kNearestNeighbours(Instance,int)"
"21","7","weka.core.neighboursearch.FilteredNeighbourSearch.setOptions(String[])"
"14","7","weka.core.neighboursearch.balltrees.TopDownConstructor.splitNodes(BallNode,int,double)"
"29","9","weka.core.neighboursearch.balltrees.TopDownConstructor.addInstance(BallNode,Instance)"
"17","9","weka.core.neighboursearch.balltrees.MedianOfWidestDimension.partition(int,int[],int,int)"
"9","5","weka.core.neighboursearch.balltrees.MedianOfWidestDimension.select(int,int[],int,int,int)"
"20","8","weka.core.neighboursearch.balltrees.MedianOfWidestDimension.widestDim(int[][],int[][][][])"
"20","7","weka.core.neighboursearch.balltrees.MiddleOutConstructor.buildTreeMiddleOut(int,int)"
"23","6","weka.core.neighboursearch.balltrees.MiddleOutConstructor.createAnchorsHierarchy(TempNode,int,int,int)"
"16","11","weka.core.neighboursearch.balltrees.MiddleOutConstructor.buildLeavesMiddleOut(BallNode)"
"38","9","weka.core.neighboursearch.balltrees.MiddleOutConstructor.mergeNodes(TempNode,int,int)"
"28","8","weka.core.neighboursearch.balltrees.MiddleOutConstructor.stealPoints(TempNode,TempNode,Vector[])"
"15","5","weka.core.neighboursearch.balltrees.MiddleOutConstructor.calcPivot(TempNode,TempNode,Instances)"
"20","8","weka.core.neighboursearch.balltrees.MiddleOutConstructor.calcPivot(MyIdxList,MyIdxList,Instances)"
"11","5","weka.core.neighboursearch.balltrees.MiddleOutConstructor.calcRadius(MyIdxList,MyIdxList,Instance,Instances)"
"12","6","weka.core.neighboursearch.balltrees.MiddleOutConstructor.checkIndicesList(MyIdxList,int,int)"
"14","7","weka.core.neighboursearch.balltrees.MiddleOutConstructor.printList(MyIdxList)"
"15","7","weka.core.neighboursearch.balltrees.MiddleOutConstructor.TempNode.toString()"
"10","5","weka.core.neighboursearch.balltrees.MiddleOutConstructor.MyIdxList.checkSorting(MyIdxList)"
"38","10","weka.core.neighboursearch.balltrees.PointsClosestToFurthestChildren.splitNode(BallNode,int)"
"44","7","weka.core.neighboursearch.balltrees.BottomUpConstructor.mergeNodes(TempNode,int,int,int[])"
"15","7","weka.core.neighboursearch.balltrees.BottomUpConstructor.makeBallTree(TempNode,int,int,int[],int,double)"
"15","5","weka.core.neighboursearch.balltrees.BottomUpConstructor.calcPivot(TempNode,TempNode,Instances)"
"12","9","weka.core.neighboursearch.balltrees.BallSplitter.correctlyInitialized()"
"17","9","weka.core.neighboursearch.balltrees.MedianDistanceFromArbitraryPoint.partition(int[],int[][],int,int,int)"
"9","5","weka.core.neighboursearch.balltrees.MedianDistanceFromArbitraryPoint.select(int[],int[][],int,int,int,int)"
"72","12","weka.core.neighboursearch.CoverTree.batch_insert(Integer,int,int,DistanceNode,DistanceNode)"
"25","6","weka.core.neighboursearch.CoverTree.buildCoverTree(Instances)"
"13","5","weka.core.neighboursearch.CoverTree.MyHeap.putBySubstitute(double)"
"20","7","weka.core.neighboursearch.CoverTree.MyHeap.downheap()"
"17","7","weka.core.neighboursearch.CoverTree.copy_zero_set(CoverTreeNode,MyHeap,d_node,d_node)"
"19","8","weka.core.neighboursearch.CoverTree.copy_cover_sets(CoverTreeNode,MyHeap,d_node,d_node,int,int)"
"40","15","weka.core.neighboursearch.CoverTree.halfsort(d_node)"
"51","21","weka.core.neighboursearch.CoverTree.descend(CoverTreeNode,MyHeap,int,int,d_node,d_node)"
"19","5","weka.core.neighboursearch.CoverTree.brute_nearest(int,CoverTreeNode,d_node,MyHeap,NeighborList)"
"26","5","weka.core.neighboursearch.CoverTree.internal_batch_nearest_neighbor(int,CoverTreeNode,d_node,d_node,int,int,MyHeap,NeighborList)"
"57","21","weka.core.neighboursearch.CoverTree.findKNearest(Instance,int)"
"7","6","weka.core.neighboursearch.CoverTree.checkMissing(Instances)"
"8","5","weka.core.neighboursearch.CoverTree.addInstanceInfo(Instance)"
"14","10","weka.core.neighboursearch.CoverTree.getMeasure(String)"
"12","5","weka.core.neighboursearch.KDTree.splitNodes(KDTreeNode,KDTreeNode[][],int)"
"40","13","weka.core.neighboursearch.KDTree.findNearestNeighbours(Instance,KDTreeNode,int,MyHeap,double)"
"27","6","weka.core.neighboursearch.KDTree.kNearestNeighbours(Instance,int)"
"26","8","weka.core.neighboursearch.KDTree.addInstanceToTree(Instance,KDTreeNode)"
"7","6","weka.core.neighboursearch.KDTree.checkMissing(Instances)"
"5","5","weka.core.neighboursearch.KDTree.checkMissing(Instance)"
"20","8","weka.core.neighboursearch.KDTree.widestDim(int[][],int[][][][])"
"14","10","weka.core.neighboursearch.KDTree.getMeasure(String)"
"27","8","weka.core.neighboursearch.KDTree.refineOwners(KDTreeNode,Instances,Instances[])"
"24","6","weka.core.neighboursearch.KDTree.setOptions(String[])"
"15","5","weka.core.neighboursearch.PerformanceStats.searchFinish()"
"32","22","weka.core.neighboursearch.PerformanceStats.getMeasure(String)"
"24","16","weka.core.ResourceUtils.forName(Class,String,String[])"
"12","8","weka.core.ResourceUtils.forNameNoSchemeMatch(Class,String,String[])"
"33","12","weka.core.ResourceUtils.readProperties(String,ClassLoader)"
"14","8","weka.core.ListOptions.run(Object,String[])"
"17","7","weka.core.AttributeLocator.find(boolean)"
"27","8","weka.core.AttributeLocator.compareTo(AttributeLocator)"
"38","7","weka.core.Debug.Clock.toString()"
"14","5","weka.core.Debug.Log.getLogger()"
"31","10","weka.core.Debug.Log.stringToLevel(String)"
"24","11","weka.core.OptionHandlerJavadoc.generateJavadoc(int)"
"20","20","weka.core.Attribute.equalsMsg(Object)"
"21","6","weka.core.Attribute.typeToString(int)"
"21","6","weka.core.Attribute.typeToStringShort(int)"
"13","8","weka.core.Attribute.indexOfValue(String)"
"5","5","weka.core.Attribute.numValues()"
"39","14","weka.core.Attribute.toString()"
"8","5","weka.core.Attribute.value(int)"
"16","7","weka.core.Attribute.addStringValue(String)"
"12","5","weka.core.Attribute.addStringValue(Attribute,int)"
"13","7","weka.core.Attribute.addRelation(Instances)"
"19","9","weka.core.Attribute.delete(int)"
"17","6","weka.core.Attribute.setValue(int,String)"
"8","5","weka.core.Attribute.setValue(int,Instances)"
"23","20","weka.core.Attribute.isInRange(double)"
"58","9","weka.core.Attribute.main(String[])"
"135","51","weka.core.FindWithCapabilities.setOptions(String[])"
"99","41","weka.core.FindWithCapabilities.getOptions()"
"43","14","weka.core.FindWithCapabilities.find()"
"64","15","weka.core.FindWithCapabilities.run(Object,String[])"
"47","16","weka.core.NormalizableDistance.distance(Instance,Instance,double,PerformanceStats)"
"33","27","weka.core.NormalizableDistance.difference(int,double,double)"
"16","6","weka.core.NormalizableDistance.initializeRanges()"
"14","5","weka.core.NormalizableDistance.updateRangesFirst(Instance,int,int[][])"
"22","8","weka.core.NormalizableDistance.updateRanges(Instance,int,int[][])"
"13","6","weka.core.NormalizableDistance.initializeRanges(instList.length[][][],int,int)"
"9","5","weka.core.NormalizableDistance.inRanges(Instance,Instance[][])"
"17","9","weka.core.Capabilities.and(Capabilities)"
"13","7","weka.core.Capabilities.or(Capabilities)"
"8","8","weka.core.Capabilities.supports(Capabilities)"
"8","9","weka.core.Capabilities.supportsMaybe(Capabilities)"
"13","5","weka.core.Capabilities.enable(Capability)"
"13","5","weka.core.Capabilities.enableDependency(Capability)"
"19","7","weka.core.Capabilities.disable(Capability)"
"19","7","weka.core.Capabilities.disableDependency(Capability)"
"93","31","weka.core.Capabilities.test(Attribute,boolean)"
"115","74","weka.core.Capabilities.test(Instances,int,int)"
"32","6","weka.core.Capabilities.addCapabilities(String)"
"42","19","weka.core.Capabilities.toSource(String,int)"
"103","38","weka.core.Capabilities.forInstances(Instances,boolean)"
"42","12","weka.core.Capabilities.main(String[])"
"50","32","weka.core.AttributeMetaInfo.setMetadata(ProtectedProperties,Attribute)"
"70","31","weka.core.AttributeMetaInfo.setNumericRange(String)"
"115","42","weka.core.WekaPackageManager.establishWekaHome()"
"22","9","weka.core.WekaPackageManager.establishMirror()"
"19","5","weka.core.WekaPackageManager.removeExplorerProps(String)"
"21","5","weka.core.WekaPackageManager.processGenericPropertiesCreatorProps(File)"
"32","10","weka.core.WekaPackageManager.processExplorerProps(File)"
"23","18","weka.core.WekaPackageManager.processPackageDirectory(File,boolean,File,boolean)"
"69","44","weka.core.WekaPackageManager.loadCheck(Package,File,PrintStream)"
"46","19","weka.core.WekaPackageManager.vmVersionCheck(Package,PrintStream)"
"34","19","weka.core.WekaPackageManager.osAndArchCheck(Package,PrintStream)"
"23","11","weka.core.WekaPackageManager.checkForMissingFiles(Package,File,PrintStream)"
"18","8","weka.core.WekaPackageManager.getDoNotLoadList()"
"24","7","weka.core.WekaPackageManager.toggleLoadStatus(String)"
"48","22","weka.core.WekaPackageManager.loadPackages(boolean,boolean,boolean)"
"14","5","weka.core.WekaPackageManager.checkForInjectDependencies(Package,String)"
"13","6","weka.core.WekaPackageManager.injectPackageDependencies(String)"
"22","6","weka.core.WekaPackageManager.numRepositoryPackages()"
"23","6","weka.core.WekaPackageManager.getPackageList(boolean)"
"10","5","weka.core.WekaPackageManager.establishCacheIfNeeded(PrintStream)"
"20","7","weka.core.WekaPackageManager.getForcedRefreshCount(boolean)"
"37","17","weka.core.WekaPackageManager.checkForNewPackages(PrintStream)"
"13","7","weka.core.WekaPackageManager.cleanRepCacheDir()"
"32","11","weka.core.WekaPackageManager.refreshCache(PrintStream)"
"10","6","weka.core.WekaPackageManager.useCacheOrOnlineRepository()"
"12","6","weka.core.WekaPackageManager.mostRecentVersionWithRespectToConstraint(PackageConstraint)"
"28","7","weka.core.WekaPackageManager.installPackages(Package,PrintStream)"
"19","6","weka.core.WekaPackageManager.getAvailableCompatiblePackages()"
"23","7","weka.core.WekaPackageManager.installPackageFromRepository(String,String,PrintStream)"
"13","5","weka.core.WekaPackageManager.installPackageFromArchive(String,PrintStream)"
"13","8","weka.core.WekaPackageManager.uninstallPackage(String,boolean,PrintStream)"
"24","12","weka.core.WekaPackageManager.removeInstalledPackage(String,boolean,PrintStream)"
"156","70","weka.core.WekaPackageManager.installPackageFromRepository(String,String,boolean)"
"48","16","weka.core.WekaPackageManager.listPackages(String)"
"43","16","weka.core.WekaPackageManager.startupCheck(boolean,PrintStream)"
"85","38","weka.core.WekaPackageManager.main(String[])"
"31","8","weka.core.ClassDiscovery.getURL(String,String)"
"31","11","weka.core.ClassDiscovery.find(Class,String)"
"19","7","weka.core.ClassDiscovery.getSubDirectories(String,File,String)"
"28","7","weka.core.ClassDiscovery.main(String[])"
"9","5","weka.core.ClassDiscovery.StringCompare.charGroup(char)"
"30","6","weka.core.ClassDiscovery.StringCompare.compare(String,String)"
"26","9","weka.core.Settings.loadSettings()"
"10","6","weka.core.Settings.applyDefaults(Defaults)"
"18","11","weka.core.Settings.getSetting(String,SettingKey,T,Environment)"
"22","7","weka.core.Settings.saveSettings()"
"14","13","weka.core.Settings.stringToT(String,T)"
"37","7","weka.core.RepositoryIndexGenerator.parseVersion(String)"
"24","7","weka.core.RepositoryIndexGenerator.compare(String,String)"
"9","5","weka.core.RepositoryIndexGenerator.Comparator$1.compare(File,File)"
"104","20","weka.core.RepositoryIndexGenerator.processPackage(File)"
"58","6","weka.core.RepositoryIndexGenerator.writeRepoZipFile(File,StringBuffer)"
"14","5","weka.core.RepositoryIndexGenerator.main(String[])"
"136","45","weka.core.TestInstances.setOptions(String[])"
"59","6","weka.core.TestInstances.getOptions()"
"75","18","weka.core.TestInstances.generateAttribute(int,int,String)"
"39","10","weka.core.TestInstances.generateClassValue(Instances)"
"34","12","weka.core.TestInstances.generateAttributeValue(Instances,int,double)"
"65","17","weka.core.TestInstances.generate(String)"
"64","17","weka.core.TestInstances.forCapabilities(Capabilities)"
"15","7","weka.core.GlobalInfoJavadoc.generateJavadoc(int)"
"54","19","weka.core.InstanceComparator.compare(Instance,Instance)"
"7","6","weka.core.DenseInstance.replaceMissingValues(Override[])"
"262","93","weka.core.matrix.SingularValueDecomposition.SingularValueDecomposition(Matrix)"
"18","10","weka.core.matrix.FloatingPointFormat.format(double,StringBuffer,FieldPosition)"
"11","5","weka.core.matrix.LinearRegression.LinearRegression(Matrix,Matrix,Matrix[],double)"
"20","7","weka.core.matrix.LinearRegression.calculate(Matrix,Matrix,double)"
"17","6","weka.core.matrix.LinearRegression.aTa(Matrix)"
"19","8","weka.core.matrix.DoubleVector.sortWithIndex(int,int,IntVector)"
"7","6","weka.core.matrix.DoubleVector.unsorted()"
"10","7","weka.core.matrix.DoubleVector.max()"
"19","6","weka.core.matrix.DoubleVector.toString(int,boolean)"
"9","6","weka.core.matrix.Matrix.Matrix(double[],int)"
"33","16","weka.core.matrix.Matrix.Matrix(Reader)"
"11","5","weka.core.matrix.Matrix.constructWithCopy(Matrix[][])"
"9","5","weka.core.matrix.Matrix.getMatrix(int,int,int,int)"
"9","5","weka.core.matrix.Matrix.getMatrix(Matrix[],Matrix[][])"
"9","5","weka.core.matrix.Matrix.getMatrix(int,int,int[])"
"9","5","weka.core.matrix.Matrix.getMatrix(Matrix[],int,int)"
"6","5","weka.core.matrix.Matrix.setMatrix(int,int,int,int,Matrix)"
"6","5","weka.core.matrix.Matrix.setMatrix(ArrayIndexOutOfBoundsException[],ArrayIndexOutOfBoundsException[][],Matrix)"
"6","5","weka.core.matrix.Matrix.setMatrix(ArrayIndexOutOfBoundsException[],int,int,Matrix)"
"6","5","weka.core.matrix.Matrix.setMatrix(int,int,int[],Matrix)"
"9","7","weka.core.matrix.Matrix.isSymmetric()"
"16","7","weka.core.matrix.Matrix.times(Matrix)"
"31","12","weka.core.matrix.Matrix.read(BufferedReader)"
"20","11","weka.core.matrix.Matrix.toString()"
"15","5","weka.core.matrix.Matrix.toMatlab()"
"13","6","weka.core.matrix.FlexibleDecimalFormat.update(double)"
"21","10","weka.core.matrix.FlexibleDecimalFormat.decimalDigits(double,boolean)"
"8","6","weka.core.matrix.FlexibleDecimalFormat.needExponentialFormat(double)"
"9","6","weka.core.matrix.FlexibleDecimalFormat.setFormat()"
"70","23","weka.core.matrix.EigenvalueDecomposition.tred2()"
"72","16","weka.core.matrix.EigenvalueDecomposition.tql2()"
"47","21","weka.core.matrix.EigenvalueDecomposition.orthes()"
"273","71","weka.core.matrix.EigenvalueDecomposition.hqr2()"
"24","8","weka.core.matrix.EigenvalueDecomposition.EigenvalueDecomposition(Matrix)"
"13","5","weka.core.matrix.EigenvalueDecomposition.getD()"
"36","12","weka.core.matrix.LUDecomposition.LUDecomposition(Matrix)"
"13","5","weka.core.matrix.LUDecomposition.getL()"
"19","12","weka.core.matrix.LUDecomposition.solve(Matrix)"
"21","5","weka.core.matrix.CholeskyDecomposition.CholeskyDecomposition(Matrix)"
"18","11","weka.core.matrix.CholeskyDecomposition.solve(Matrix)"
"23","9","weka.core.matrix.QRDecomposition.QRDecomposition(Matrix)"
"13","5","weka.core.matrix.QRDecomposition.getR()"
"16","7","weka.core.matrix.QRDecomposition.getQ()"
"22","13","weka.core.matrix.QRDecomposition.solve(Matrix)"
"7","5","weka.core.matrix.ExponentialFormat.width()"
"10","5","weka.core.matrix.IntVector.shift(int,int)"
"19","6","weka.core.matrix.IntVector.toString(int,boolean)"
"9","6","weka.core.matrix.Maths.rnorm(int,double,double,Random)"
"18","7","weka.core.logging.Logger.log(Level,String)"
"50","10","weka.core.Version.parseVersion(String,String[],String[][],String[][][],String[][][][])"
"41","9","weka.core.Version.compareTo(String)"
"18","5","weka.core.Trie.TrieNode.equals(Object)"
"20","5","weka.core.Trie.toString(TrieNode)"
"12","5","weka.core.Javadoc.indent(String,int,String)"
"32","7","weka.core.Javadoc.updateJavadoc(String,int)"
"20","5","weka.core.Javadoc.updateJavadoc()"
"13","8","weka.core.Javadoc.runJavadoc(Javadoc,String[])"
"19","11","weka.core.metastore.XMLFileBasedMetaStore.establishStoreHome()"
"17","8","weka.core.metastore.XMLFileBasedMetaStore.getEntry(String,String,Class)"
"9","5","weka.core.metastore.XMLFileBasedMetaStore.createStore(String)"
"12","8","weka.core.metastore.XMLFileBasedMetaStore.lockStore()"
"23","10","weka.core.WekaPackageClassLoaderManager.injectMTJCoreClasses()"
"14","8","weka.core.WekaPackageClassLoaderManager.getWekaClassloaderClasspathEntries()"
"18","6","weka.core.WekaPackageClassLoaderManager.getParts(String,String)"
"12","7","weka.core.WekaPackageClassLoaderManager.findClass(String)"
"11","6","weka.core.WekaPackageClassLoaderManager.findResources(String)"
"56","20","weka.core.WekaPackageClassLoaderManager.injectClasses(InputStream,String,String,boolean)"
"18","8","weka.core.WekaPackageClassLoaderManager.performIntegrityCheck()"
"96","42","weka.core.RandomVariates.nextGamma(double)"
"32","9","weka.core.RandomVariates.main(String[])"
"9","7","weka.core.AbstractInstance.hasMissingValue()"
"6","6","weka.core.AbstractInstance.insertAttributeAt(int)"
"14","9","weka.core.AbstractInstance.setValue(int,String)"
"11","7","weka.core.AbstractInstance.setValue(Attribute,String)"
"8","6","weka.core.AbstractInstance.relationalValue(Attribute)"
"14","11","weka.core.AbstractInstance.stringValue(Attribute)"
"21","9","weka.core.AbstractInstance.toString(int,int)"
"19","8","weka.core.RandomSample.drawSortedDenseSample(int,int,Random)"
"5","5","weka.core.RandomSample.drawSortedSparseSample(int,int,Random)"
"18","5","weka.core.RandomSample.radixSortOfPositiveIntegers(unsorted[][])"
"16","10","weka.core.RandomSample.drawSparseSample(int,int,Random)"
"11","5","weka.knowledgeflow.LegacyFlowLoader.makeFlow(String)"
"15","8","weka.knowledgeflow.LegacyFlowLoader.handleConnection(Flow,BeanConnection)"
"24","7","weka.knowledgeflow.LegacyFlowLoader.handleStep(BeanInstance)"
"10","5","weka.knowledgeflow.LegacyFlowLoader.copySettingsWrapper(WekaWrapper,WekaAlgorithmWrapper)"
"87","39","weka.knowledgeflow.LegacyFlowLoader.copySettingsNonWrapper(Object,Step)"
"50","22","weka.knowledgeflow.LegacyFlowLoader.configurePluginStep(Object,Step)"
"19","10","weka.knowledgeflow.LegacyFlowLoader.findStepMatch(String)"
"15","5","weka.knowledgeflow.StepInjectorFlowRunner.injectWithExecutionFinishedCallback(Data,ExecutionFinishedCallback,Step)"
"12","10","weka.knowledgeflow.StepInjectorFlowRunner.findStep(String,Class)"
"19","7","weka.knowledgeflow.StepInjectorFlowRunner.injectStreaming(Data,Step,boolean)"
"13","7","weka.knowledgeflow.BaseExecutionEnvironment.submitTask(T)"
"8","5","weka.knowledgeflow.BaseExecutionEnvironment.startClientExecutionService(int,int)"
"10","5","weka.knowledgeflow.BaseExecutionEnvironment.stopClientExecutionService()"
"20","5","weka.knowledgeflow.BaseExecutionEnvironment.launchStartPoint(StepManagerImpl)"
"23","8","weka.knowledgeflow.BaseExecutionEnvironment.sendDataToStep(StepManagerImpl,Data)"
"12","6","weka.knowledgeflow.LogManager.LogManager(Step)"
"11","8","weka.knowledgeflow.LogManager.log(String,LoggingLevel,Throwable)"
"26","10","weka.knowledgeflow.FlowRunner.initializeFlow()"
"28","9","weka.knowledgeflow.FlowRunner.runSequentially(StepManagerImpl)"
"14","7","weka.knowledgeflow.Flow.getFlowLoader(String,Logger)"
"21","9","weka.knowledgeflow.Flow.addStep(StepManagerImpl)"
"15","8","weka.knowledgeflow.Flow.initFlow(FlowExecutor)"
"11","5","weka.knowledgeflow.StepManagerImpl.disconnectStepWithConnection(Step,String)"
"17","7","weka.knowledgeflow.StepManagerImpl.disconnectStep(Step)"
"15","8","weka.knowledgeflow.StepManagerImpl.outputData(String,Data)"
"24","14","weka.knowledgeflow.StepManagerImpl.outputData(Data)"
"13","6","weka.knowledgeflow.StepManagerImpl.outputData(String,String,Data)"
"12","5","weka.knowledgeflow.StepManagerImpl.numIncomingConnectionsOfType(String)"
"8","5","weka.knowledgeflow.StepManagerImpl.stepStatusMessagePrefix()"
"16","9","weka.knowledgeflow.steps.Join.establishFirstAndSecondConnectedInputs()"
"55","34","weka.knowledgeflow.steps.Join.processStreaming(Data)"
"11","6","weka.knowledgeflow.steps.Join.addToFirstBuffer(Instance)"
"11","6","weka.knowledgeflow.steps.Join.addToSecondBuffer(Instance)"
"9","5","weka.knowledgeflow.steps.Join.clearBuffers()"
"35","17","weka.knowledgeflow.steps.Join.processBatch(Data)"
"26","12","weka.knowledgeflow.steps.Join.processBuffers()"
"31","23","weka.knowledgeflow.steps.Join.compare(Instance,Instance,Sorter.InstanceHolder,Sorter.InstanceHolder)"
"23","11","weka.knowledgeflow.steps.Join.generateMergedInstance(Sorter.InstanceHolder,Sorter.InstanceHolder)"
"59","30","weka.knowledgeflow.steps.Join.generateMergedHeader()"
"8","5","weka.knowledgeflow.steps.Join.getIncomingConnectionTypes()"
"111","37","weka.knowledgeflow.steps.IncrementalClassifierEvaluator.processIncoming(Data)"
"56","18","weka.knowledgeflow.steps.DataGrid.start()"
"8","9","weka.knowledgeflow.steps.DataGrid.outputStructureForConnectionType(String)"
"6","5","weka.knowledgeflow.steps.ImageViewer.restoreData(Object)"
"52","15","weka.knowledgeflow.steps.AttributeSummarizer.createOffscreenPlot(Data)"
"18","9","weka.knowledgeflow.steps.AttributeSummarizer.setupOffscreenRenderer()"
"15","7","weka.knowledgeflow.steps.SendToPerspective.processIncoming(Data)"
"39","18","weka.knowledgeflow.steps.StripChart.processIncoming(Data)"
"7","5","weka.knowledgeflow.steps.Appender.getIncomingConnectionTypes()"
"21","7","weka.knowledgeflow.steps.Appender.processIncoming(Data)"
"34","13","weka.knowledgeflow.steps.Appender.processBatch(Data)"
"51","22","weka.knowledgeflow.steps.Appender.processStreaming(Data)"
"25","8","weka.knowledgeflow.steps.Appender.makeOutputInstance(Instances,Instance)"
"46","17","weka.knowledgeflow.steps.Appender.makeOutputHeader(Instances)"
"14","9","weka.knowledgeflow.steps.Appender.outputStructureForConnectionType(String)"
"24","14","weka.knowledgeflow.steps.TextViewer.processIncoming(Data)"
"19","11","weka.knowledgeflow.steps.SetVariables.stepInit()"
"38","16","weka.knowledgeflow.steps.SetVariables.processIncoming(Data)"
"35","12","weka.knowledgeflow.steps.SetVariables.processInstance(Instance,Data)"
"12","6","weka.knowledgeflow.steps.SetVariables.checkStructure(Instances)"
"4","8","weka.knowledgeflow.steps.SetVariables.outputStructureForConnectionType(String)"
"18","6","weka.knowledgeflow.steps.SetVariables.internalDynamicToMap(String)"
"9","5","weka.knowledgeflow.steps.SetVariables.internalToMap(String)"
"18","8","weka.knowledgeflow.steps.ClassValuePicker.processIncoming(Data)"
"31","16","weka.knowledgeflow.steps.ClassValuePicker.assignClassValue(Instances)"
"17","15","weka.knowledgeflow.steps.ClassValuePicker.outputStructureForConnectionType(String)"
"12","8","weka.knowledgeflow.steps.Loader.stepInit()"
"64","22","weka.knowledgeflow.steps.Loader.start()"
"12","7","weka.knowledgeflow.steps.Loader.outputStructureForConnectionType(String,Environment)"
"14","5","weka.knowledgeflow.steps.Loader.getOutgoingConnectionTypes()"
"17","6","weka.knowledgeflow.steps.Job.FlowRunner.SimpleLogger$1.logMessage(String)"
"41","7","weka.knowledgeflow.steps.Job.stepInit()"
"13","5","weka.knowledgeflow.steps.Job.processIncoming(Data)"
"35","12","weka.knowledgeflow.steps.Job.runFlow(String,String,Data)"
"13","7","weka.knowledgeflow.steps.Saver.stepInit()"
"30","9","weka.knowledgeflow.steps.Saver.saveBatch(Instances,Integer,Integer,String)"
"41","20","weka.knowledgeflow.steps.Saver.processIncoming(Data)"
"18","5","weka.knowledgeflow.steps.Saver.sanitizeFilename(String)"
"12","6","weka.knowledgeflow.steps.StorePropertiesInEnvironment.stepInit()"
"38","16","weka.knowledgeflow.steps.StorePropertiesInEnvironment.processIncoming(Data)"
"40","13","weka.knowledgeflow.steps.StorePropertiesInEnvironment.processInstance(Instance,Data)"
"12","6","weka.knowledgeflow.steps.StorePropertiesInEnvironment.checkStructure(Instances)"
"18","7","weka.knowledgeflow.steps.StorePropertiesInEnvironment.internalDynamicToMap(String)"
"25","5","weka.knowledgeflow.steps.TrainTestSplitMaker.processIncoming(Data)"
"13","11","weka.knowledgeflow.steps.TrainTestSplitMaker.outputStructureForConnectionType(String)"
"15","5","weka.knowledgeflow.steps.WriteWekaLog.processIncoming(Data)"
"31","11","weka.knowledgeflow.steps.CrossValidationFoldMaker.processIncoming(Data)"
"13","11","weka.knowledgeflow.steps.CrossValidationFoldMaker.outputStructureForConnectionType(String)"
"20","10","weka.knowledgeflow.steps.PairedDataHelper.process(Data)"
"21","8","weka.knowledgeflow.steps.PairedDataHelper.processPrimary(Data)"
"13","5","weka.knowledgeflow.steps.PairedDataHelper.processSecondary(Data)"
"4","5","weka.knowledgeflow.steps.PairedDataHelper.reset()"
"34","15","weka.knowledgeflow.steps.ClassAssigner.processIncoming(Data)"
"24","11","weka.knowledgeflow.steps.ClassAssigner.assignClass(Instances)"
"14","5","weka.knowledgeflow.steps.ClassAssigner.getOutgoingConnectionTypes()"
"21","15","weka.knowledgeflow.steps.ClassAssigner.outputStructureForConnectionType(String)"
"18","9","weka.knowledgeflow.steps.ModelPerformanceChart.setupOffscreenRenderer()"
"35","12","weka.knowledgeflow.steps.ModelPerformanceChart.addOffscreenThresholdPlot(PlotData2D)"
"77","18","weka.knowledgeflow.steps.ModelPerformanceChart.addOffscreenErrorPlot(PlotData2D)"
"36","11","weka.knowledgeflow.steps.ModelPerformanceChart.processIncoming(Data)"
"44","18","weka.knowledgeflow.steps.ClustererPerformanceEvaluator.processIncoming(Data)"
"34","12","weka.knowledgeflow.steps.InstanceStreamToBatchMaker.processIncoming(Data)"
"54","26","weka.knowledgeflow.steps.SerializedModelSaver.processIncoming(Data)"
"8","5","weka.knowledgeflow.steps.SubstringReplacer.outputStructureForConnectionType(String)"
"14","8","weka.knowledgeflow.steps.SetPropertiesFromEnvironment.stepInit()"
"30","10","weka.knowledgeflow.steps.SetPropertiesFromEnvironment.setProperties(WekaAlgorithmWrapper,String)"
"67","31","weka.knowledgeflow.steps.SetPropertiesFromEnvironment.stringToVal(String,Object,String)"
"9","5","weka.knowledgeflow.steps.SetPropertiesFromEnvironment.setValue(Object,String,String,Object)"
"33","17","weka.knowledgeflow.steps.SetPropertiesFromEnvironment.drillToProperty(Object,String)"
"10","8","weka.knowledgeflow.steps.TestSetMaker.outputStructureForConnectionType(String)"
"23","14","weka.knowledgeflow.steps.ASEvaluator.stepInit()"
"42","20","weka.knowledgeflow.steps.ASEvaluator.processIncoming(Data)"
"15","6","weka.knowledgeflow.steps.ASEvaluator.outputTextData(String,Integer)"
"37","18","weka.knowledgeflow.steps.ASEvaluator.processNonXVal(Instances,Instances,Integer,Integer)"
"38","15","weka.knowledgeflow.steps.ASEvaluator.processXVal(Instances,Instances,Integer,Integer)"
"49","24","weka.knowledgeflow.steps.ASEvaluator.applyFiltering(String,String[],Instances,Integer,Integer)"
"9","5","weka.knowledgeflow.steps.ASEvaluator.getIncomingConnectionTypes()"
"9","7","weka.knowledgeflow.steps.ASEvaluator.getOutgoingConnectionTypes()"
"4","6","weka.knowledgeflow.steps.AlterRelationName.stepInit()"
"19","5","weka.knowledgeflow.steps.AlterRelationName.processIncoming(Data)"
"19","6","weka.knowledgeflow.steps.AlterRelationName.applyRelationNameChange(Instances)"
"10","6","weka.knowledgeflow.steps.ImageSaver.stepInit()"
"23","9","weka.knowledgeflow.steps.ImageSaver.processIncoming(Data)"
"6","5","weka.knowledgeflow.steps.Associator.stepInit()"
"17","5","weka.knowledgeflow.steps.Associator.processIncoming(Data)"
"11","6","weka.knowledgeflow.steps.Associator.outputAssociatorData(weka.associations.Associator,Integer,Integer)"
"16","7","weka.knowledgeflow.steps.Associator.outputGraphData(weka.associations.Associator,Instances,Integer)"
"18","7","weka.knowledgeflow.steps.Associator.outputStructureForConnectionType(String)"
"50","28","weka.knowledgeflow.steps.PredictionAppender.processIncrementalClassifier(Data,Instance)"
"52","26","weka.knowledgeflow.steps.PredictionAppender.processBatchClustererCase(Data,Instances,Instances)"
"51","24","weka.knowledgeflow.steps.PredictionAppender.processBatchClassifierCase(Data,Instances,Instances)"
"27","6","weka.knowledgeflow.steps.PredictionAppender.makeOutputDataClassifier(Instances,weka.classifiers.Classifier,boolean,String)"
"10","5","weka.knowledgeflow.steps.WekaAlgorithmWrapper.setWrappedAlgorithm(Object)"
"19","9","weka.knowledgeflow.steps.DataVisualizer.setupOffscreenRenderer()"
"32","10","weka.knowledgeflow.steps.DataVisualizer.processIncoming(Data)"
"46","17","weka.knowledgeflow.steps.DataVisualizer.createOffscreenPlot(PlotData2D)"
"10","8","weka.knowledgeflow.steps.TrainingSetMaker.outputStructureForConnectionType(String)"
"22","19","weka.knowledgeflow.steps.ExecuteProcess.stepInit()"
"22","8","weka.knowledgeflow.steps.ExecuteProcess.makeDynamicProcess(Instance)"
"26","7","weka.knowledgeflow.steps.ExecuteProcess.runProcess(ProcessBuilder,String,String,Data)"
"19","7","weka.knowledgeflow.steps.ExecuteProcess.handleOutputSuccess(String,String,Data,String)"
"19","7","weka.knowledgeflow.steps.ExecuteProcess.handleOutputFailure(int,String,String,Data,String)"
"59","28","weka.knowledgeflow.steps.ExecuteProcess.processIncoming(Data)"
"15","11","weka.knowledgeflow.steps.ExecuteProcess.checkStructure(Instances)"
"4","5","weka.knowledgeflow.steps.ExecuteProcess.outputStructureForConnectionType(String)"
"6","5","weka.knowledgeflow.steps.FlowByExpression.getIncomingConnectionTypes()"
"13","6","weka.knowledgeflow.steps.FlowByExpression.getOutgoingConnectionTypes()"
"29","9","weka.knowledgeflow.steps.FlowByExpression.processIncoming(Data)"
"16","6","weka.knowledgeflow.steps.FlowByExpression.processStreaming(Data)"
"31","10","weka.knowledgeflow.steps.FlowByExpression.processBatch(Data)"
"8","7","weka.knowledgeflow.steps.FlowByExpression.BracketNode.evaluate(Instance,boolean)"
"20","9","weka.knowledgeflow.steps.FlowByExpression.BracketNode.toString(StringBuffer,boolean)"
"24","10","weka.knowledgeflow.steps.FlowByExpression.BracketNode.parseFromInternal(String)"
"10","11","weka.knowledgeflow.steps.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"8","8","weka.knowledgeflow.steps.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"8","8","weka.knowledgeflow.steps.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"15","11","weka.knowledgeflow.steps.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"15","11","weka.knowledgeflow.steps.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"15","11","weka.knowledgeflow.steps.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"10","7","weka.knowledgeflow.steps.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"52","26","weka.knowledgeflow.steps.FlowByExpression.ExpressionClause.init(Instances,Environment)"
"5","5","weka.knowledgeflow.steps.FlowByExpression.ExpressionClause.evaluate(Instance,boolean)"
"25","11","weka.knowledgeflow.steps.FlowByExpression.ExpressionClause.toString(StringBuffer,boolean)"
"27","11","weka.knowledgeflow.steps.FlowByExpression.ExpressionClause.parseFromInternal(String)"
"33","17","weka.knowledgeflow.steps.BoundaryPlotter.stepInit()"
"43","18","weka.knowledgeflow.steps.BoundaryPlotter.computeMinMaxAtts(Instances)"
"19","9","weka.knowledgeflow.steps.BoundaryPlotter.getAttIndex(String,Instances)"
"23","8","weka.knowledgeflow.steps.BoundaryPlotter.processIncoming(Data)"
"87","22","weka.knowledgeflow.steps.BoundaryPlotter.doScheme(Classifier,DensityBasedClusterer,Instances,int,int)"
"21","8","weka.knowledgeflow.steps.BoundaryPlotter.plotPoint(BufferedImage,int,int,int[],boolean)"
"23","7","weka.knowledgeflow.steps.BoundaryPlotter.plotTrainingData(Instances)"
"6","5","weka.knowledgeflow.steps.BoundaryPlotter.restoreData(Object)"
"27","12","weka.knowledgeflow.steps.BoundaryPlotter.SchemeRowTask.process()"
"45","14","weka.knowledgeflow.steps.BoundaryPlotter.SchemeRowTask.calculateRegionProbs(int,int)"
"36","16","weka.knowledgeflow.steps.TextSaver.processIncoming(Data)"
"14","6","weka.knowledgeflow.steps.GetDataFromResult.outputDataFromResult(Data)"
"47","18","weka.knowledgeflow.steps.DataGenerator.start()"
"7","6","weka.knowledgeflow.steps.DataGenerator.outputStructureForConnectionType(String)"
"14","5","weka.knowledgeflow.steps.DataGenerator.getOutgoingConnectionTypes()"
"11","5","weka.knowledgeflow.steps.Sorter.getOutgoingConnectionTypes()"
"21","8","weka.knowledgeflow.steps.Sorter.init(Instances)"
"21","6","weka.knowledgeflow.steps.Sorter.processIncoming(Data)"
"18","8","weka.knowledgeflow.steps.Sorter.processIncremental(Data)"
"117","49","weka.knowledgeflow.steps.Sorter.emitBufferedInstances()"
"31","11","weka.knowledgeflow.steps.Sorter.sortBuffer(boolean)"
"16","7","weka.knowledgeflow.steps.Sorter.SortRule.init(Environment,Instances)"
"22","14","weka.knowledgeflow.steps.Sorter.SortRule.compare(InstanceHolder,InstanceHolder)"
"26","15","weka.knowledgeflow.steps.Classifier.stepInit()"
"47","23","weka.knowledgeflow.steps.Classifier.processIncoming(Data)"
"36","12","weka.knowledgeflow.steps.Classifier.processPrimary(Integer,Integer,Data,weka.classifiers.Classifier)"
"16","5","weka.knowledgeflow.steps.Classifier.processSecondary(Integer,Integer,Data,weka.classifiers.Classifier)"
"26","14","weka.knowledgeflow.steps.Classifier.processStreaming(Data)"
"16","6","weka.knowledgeflow.steps.Classifier.outputGraphData(weka.classifiers.Classifier,int)"
"14","8","weka.knowledgeflow.steps.Classifier.getIncomingConnectionTypes()"
"16","7","weka.knowledgeflow.steps.Classifier.getOutgoingConnectionTypes()"
"12","5","weka.knowledgeflow.steps.Classifier.loadModel(String)"
"9","6","weka.knowledgeflow.steps.ClassifierPerformanceEvaluator.stepInit()"
"48","16","weka.knowledgeflow.steps.ClassifierPerformanceEvaluator.processIncoming(Data)"
"83","30","weka.knowledgeflow.steps.ClassifierPerformanceEvaluator.aggregateEvalTask(Evaluation,weka.classifiers.Classifier,Instances,ClassifierErrorsPlotInstances,int,String)"
"16","5","weka.knowledgeflow.steps.ClassifierPerformanceEvaluator.adjustForInputMappedClassifier(Evaluation,weka.classifiers.Classifier,Instances,ClassifierErrorsPlotInstances,CostMatrix)"
"6","5","weka.knowledgeflow.steps.ClassifierPerformanceEvaluator.AggregateableClassifierErrorsPlotInstances.finishUp()"
"52","13","weka.knowledgeflow.steps.ClassifierPerformanceEvaluator.EvaluationTask.process()"
"8","7","weka.knowledgeflow.steps.Block.stepInit()"
"21","7","weka.knowledgeflow.steps.Block.processIncoming(Data)"
"18","13","weka.knowledgeflow.steps.Clusterer.stepInit()"
"28","14","weka.knowledgeflow.steps.Clusterer.processIncoming(Data)"
"12","5","weka.knowledgeflow.steps.Clusterer.getIncomingConnectionTypes()"
"11","5","weka.knowledgeflow.steps.Clusterer.getOutgoingConnectionTypes()"
"16","6","weka.knowledgeflow.steps.Clusterer.outputGraphData(weka.clusterers.Clusterer,int)"
"24","9","weka.knowledgeflow.steps.Clusterer.processPrimary(Integer,Integer,Data,weka.clusterers.Clusterer)"
"29","10","weka.knowledgeflow.steps.SubstringLabeler.processIncoming(Data)"
"18","8","weka.knowledgeflow.steps.SubstringLabeler.processBatch(Data)"
"14","9","weka.knowledgeflow.steps.SubstringLabeler.outputStructureForConnectionType(String)"
"14","10","weka.knowledgeflow.steps.Filter.getIncomingConnectionTypes()"
"16","5","weka.knowledgeflow.steps.Filter.getOutgoingConnectionTypes()"
"14","6","weka.knowledgeflow.steps.Filter.stepInit()"
"41","15","weka.knowledgeflow.steps.Filter.processIncoming(Data)"
"23","9","weka.knowledgeflow.steps.Filter.processFirstBatch(Instances,String,Integer,Integer)"
"15","7","weka.knowledgeflow.steps.Filter.processSubsequentBatch(Instances,String,Integer,Integer)"
"11","5","weka.knowledgeflow.steps.Filter.processBatch(Instances,String,weka.filters.Filter,Integer,Integer)"
"17","9","weka.knowledgeflow.steps.Filter.processStreaming(Data)"
"19","9","weka.knowledgeflow.steps.Filter.checkPendingStreaming()"
"23","11","weka.knowledgeflow.steps.Filter.outputStructureForConnectionType(String)"
"22","5","weka.knowledgeflow.JSONFlowUtils.addSaver(String,weka.core.converters.Saver,JSONNode)"
"23","12","weka.knowledgeflow.JSONFlowUtils.addLoader(String,weka.core.converters.Loader,JSONNode)"
"68","25","weka.knowledgeflow.JSONFlowUtils.addStepJSONtoFlowArray(JSONNode,StepManagerImpl)"
"17","10","weka.knowledgeflow.JSONFlowUtils.readStepPropertyLoader(JSONNode)"
"19","11","weka.knowledgeflow.JSONFlowUtils.readStepPropertySaver(JSONNode)"
"10","6","weka.knowledgeflow.JSONFlowUtils.readStepPropertyOptionHandler(JSONNode)"
"15","10","weka.knowledgeflow.JSONFlowUtils.readStepObjectProperty(JSONNode)"
"10","6","weka.knowledgeflow.JSONFlowUtils.checkForFileProp(Object,PropertyDescriptor)"
"42","13","weka.knowledgeflow.JSONFlowUtils.readStep(JSONNode,Flow)"
"17","9","weka.knowledgeflow.JSONFlowUtils.readConnectionsForStep(JSONNode,Flow,boolean)"
"20","8","weka.knowledgeflow.JSONFlowUtils.readFlow(Reader,boolean)"
"18","5","weka.attributeSelection.ReliefFAttributeEval.setOptions(String[])"
"68","23","weka.attributeSelection.ReliefFAttributeEval.buildEvaluator(Instances)"
"15","8","weka.attributeSelection.ReliefFAttributeEval.updateMinMax(Instance)"
"27","18","weka.attributeSelection.ReliefFAttributeEval.difference(int,double,double)"
"32","9","weka.attributeSelection.ReliefFAttributeEval.distance(Instance,Instance)"
"67","16","weka.attributeSelection.ReliefFAttributeEval.updateWeightsNumericClass(int)"
"112","34","weka.attributeSelection.ReliefFAttributeEval.updateWeightsDiscreteClass(int)"
"34","11","weka.attributeSelection.ReliefFAttributeEval.findKHitMiss(int)"
"22","5","weka.attributeSelection.GreedyStepwise.setOptions(String[])"
"21","6","weka.attributeSelection.GreedyStepwise.getOptions()"
"16","9","weka.attributeSelection.GreedyStepwise.startSetToString()"
"20","8","weka.attributeSelection.GreedyStepwise.toString()"
"132","44","weka.attributeSelection.GreedyStepwise.search(ASEvaluation,Instances)"
"19","9","weka.attributeSelection.GreedyStepwise.rankedAttributes()"
"11","5","weka.attributeSelection.GreedyStepwise.attributeList(BitSet)"
"75","26","weka.attributeSelection.SymmetricalUncertAttributeEval.evaluateAttribute(int)"
"8","7","weka.attributeSelection.BestFirst.LinkedList2.getLinkAt(int)"
"27","11","weka.attributeSelection.BestFirst.LinkedList2.addToList(Object[],double)"
"19","5","weka.attributeSelection.BestFirst.setOptions(String[])"
"16","9","weka.attributeSelection.BestFirst.startSetToString()"
"132","32","weka.attributeSelection.BestFirst.search(ASEvaluation,Instances)"
"11","5","weka.attributeSelection.BestFirst.attributeList(BitSet)"
"9","6","weka.attributeSelection.AttributeSelection.reduceDimensionality(Instances)"
"22","9","weka.attributeSelection.AttributeSelection.SelectAttributes(ASEvaluation,String[])"
"42","18","weka.attributeSelection.AttributeSelection.CVResultsString()"
"17","8","weka.attributeSelection.AttributeSelection.updateStatsForModelCVSplit(Instances,ASEvaluation,ASSearch,ASSearch[],boolean)"
"12","5","weka.attributeSelection.AttributeSelection.CrossValidateAttributes()"
"108","48","weka.attributeSelection.AttributeSelection.SelectAttributes(Instances)"
"74","29","weka.attributeSelection.AttributeSelection.SelectAttributes(ASEvaluation,String[],Instances)"
"21","5","weka.attributeSelection.AttributeSelection.printSelectionResults()"
"34","7","weka.attributeSelection.AttributeSelection.makeOptionString(ASEvaluation,ASSearch)"
"28","9","weka.attributeSelection.WrapperSubsetEval.setOptions(String[])"
"21","6","weka.attributeSelection.WrapperSubsetEval.getOptions()"
"23","11","weka.attributeSelection.WrapperSubsetEval.getCapabilities()"
"97","33","weka.attributeSelection.WrapperSubsetEval.evaluateSubset(BitSet)"
"57","21","weka.attributeSelection.WrapperSubsetEval.toString()"
"19","10","weka.attributeSelection.WrapperSubsetEval.repeat(boolean[],int)"
"13","5","weka.attributeSelection.CheckAttributeSelection.listOptions()"
"27","12","weka.attributeSelection.CheckAttributeSelection.testsPerClassType(int,boolean,boolean)"
"65","23","weka.attributeSelection.CheckAttributeSelection.correctSearchInitialisation(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"20","5","weka.attributeSelection.CheckAttributeSelection.canHandleMissing(boolean,boolean,boolean,boolean,boolean,boolean,int,boolean,boolean,int)"
"55","17","weka.attributeSelection.CheckAttributeSelection.instanceWeights(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"33","11","weka.attributeSelection.CheckAttributeSelection.datasetIntegrity(boolean,boolean,boolean,boolean,boolean,boolean,int,boolean,boolean)"
"44","20","weka.attributeSelection.CheckAttributeSelection.runBasicTest(boolean,boolean,boolean,boolean,boolean,boolean,int,int,int,boolean,boolean,int,int,String)"
"38","15","weka.attributeSelection.CheckAttributeSelection.printAttributeSummary(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"16","5","weka.attributeSelection.CfsSubsetEval.getOptions()"
"11","8","weka.attributeSelection.CfsSubsetEval.Callable$1.call()"
"64","16","weka.attributeSelection.CfsSubsetEval.buildEvaluator(Instances)"
"40","16","weka.attributeSelection.CfsSubsetEval.evaluateSubset(BitSet)"
"15","10","weka.attributeSelection.CfsSubsetEval.correlate(int,int)"
"85","32","weka.attributeSelection.CfsSubsetEval.symmUncertCorr(int,int)"
"27","14","weka.attributeSelection.CfsSubsetEval.num_num(int,int)"
"60","26","weka.attributeSelection.CfsSubsetEval.num_nom2(int,int)"
"98","46","weka.attributeSelection.CfsSubsetEval.nom_nom(int,int)"
"46","15","weka.attributeSelection.CfsSubsetEval.addLocallyPredictive(BitSet)"
"19","9","weka.attributeSelection.CfsSubsetEval.postProcess(Override[][])"
"11","5","weka.attributeSelection.ASEvaluation.runEvaluator(ASEvaluation,String[])"
"28","9","weka.attributeSelection.ClassifierSubsetEval.setOptions(String[])"
"27","9","weka.attributeSelection.ClassifierSubsetEval.getOptions()"
"26","10","weka.attributeSelection.ClassifierSubsetEval.buildEvaluator(Instances)"
"106","39","weka.attributeSelection.ClassifierSubsetEval.evaluateSubset(BitSet)"
"98","33","weka.attributeSelection.ClassifierSubsetEval.evaluateSubset(BitSet,Instances)"
"41","12","weka.attributeSelection.ClassifierSubsetEval.evaluateSubset(BitSet,Instance,boolean)"
"67","24","weka.attributeSelection.ClassifierSubsetEval.toString()"
"16","9","weka.attributeSelection.Ranker.startSetToString()"
"48","20","weka.attributeSelection.Ranker.search(ASEvaluation,Instances)"
"18","8","weka.attributeSelection.Ranker.rankedAttributes()"
"9","9","weka.attributeSelection.Ranker.inStarting(int)"
"80","32","weka.attributeSelection.InfoGainAttributeEval.buildEvaluator(Instances)"
"37","7","weka.attributeSelection.ClassifierAttributeEval.buildEvaluator(Instances)"
"35","6","weka.attributeSelection.PrincipalComponents.initializeAndComputeMatrix(Instances)"
"24","9","weka.attributeSelection.PrincipalComponents.buildAttributeConstructor(Instances)"
"7","5","weka.attributeSelection.PrincipalComponents.transformedHeader()"
"12","5","weka.attributeSelection.PrincipalComponents.transformedData(Instances)"
"9","6","weka.attributeSelection.PrincipalComponents.evaluateAttribute(int)"
"22","6","weka.attributeSelection.PrincipalComponents.fillCovariance()"
"25","9","weka.attributeSelection.PrincipalComponents.principalComponentsSummary()"
"20","8","weka.attributeSelection.PrincipalComponents.convertInstanceToOriginal(Instance)"
"46","17","weka.attributeSelection.PrincipalComponents.convertInstance(Instance)"
"36","15","weka.attributeSelection.PrincipalComponents.setOutputFormat()"
"75","26","weka.attributeSelection.GainRatioAttributeEval.evaluateAttribute(int)"
"109","45","weka.attributeSelection.CorrelationAttributeEval.buildEvaluator(Instances)"
"35","10","weka.estimators.MultivariateGaussianEstimator.estimatePooled(logDeterminant[][][][][],logDeterminant[][][][][][][])"
"13","6","weka.estimators.MultivariateGaussianEstimator.weightedCovariance(UpperSPDDenseMatrix[][],DenseVector,Vector)"
"162","19","weka.estimators.MultivariateGaussianEstimator.main(String[])"
"22","9","weka.estimators.KKConditionalEstimator.findNearestPair(double,double)"
"40","6","weka.estimators.KKConditionalEstimator.addValue(double,double,double)"
"19","5","weka.estimators.KKConditionalEstimator.getEstimator(double)"
"25","7","weka.estimators.KKConditionalEstimator.main(String[])"
"22","9","weka.estimators.NNConditionalEstimator.findNearestPair(double,double)"
"13","5","weka.estimators.NNConditionalEstimator.addValue(double,double,double)"
"25","7","weka.estimators.NNConditionalEstimator.main(String[])"
"14","6","weka.estimators.UnivariateEqualFrequencyHistogramEstimator.updateBoundariesAndOrWeights()"
"13","6","weka.estimators.UnivariateEqualFrequencyHistogramEstimator.updateWeightsOnly()"
"55","9","weka.estimators.UnivariateEqualFrequencyHistogramEstimator.updateBoundariesAndWeights()"
"38","9","weka.estimators.UnivariateEqualFrequencyHistogramEstimator.predictIntervals(double)"
"23","11","weka.estimators.UnivariateEqualFrequencyHistogramEstimator.logDensity(double)"
"98","30","weka.estimators.UnivariateEqualFrequencyHistogramEstimator.main(String[])"
"24","8","weka.estimators.DKConditionalEstimator.main(String[])"
"47","13","weka.estimators.UnivariateNormalEstimator.main(String[])"
"24","8","weka.estimators.DNConditionalEstimator.main(String[])"
"38","9","weka.estimators.UnivariateKernelEstimator.predictIntervals(double)"
"9","7","weka.estimators.UnivariateKernelEstimator.logOfSum(double,double)"
"96","30","weka.estimators.UnivariateKernelEstimator.main(String[])"
"21","11","weka.estimators.EstimatorUtils.findMinDistance(Instances,int)"
"27","12","weka.estimators.EstimatorUtils.getMinMax(Instances,int,int[])"
"19","6","weka.estimators.EstimatorUtils.writeCurve(String,Estimator,double,double,int)"
"19","6","weka.estimators.EstimatorUtils.writeCurve(String,Estimator,Estimator,double,double,double,int)"
"24","8","weka.estimators.DDConditionalEstimator.main(String[])"
"15","6","weka.estimators.KernelEstimator.findNearestValue(double)"
"35","8","weka.estimators.KernelEstimator.addValue(double,double)"
"29","7","weka.estimators.KernelEstimator.getProbability(double)"
"13","5","weka.estimators.KernelEstimator.toString()"
"15","6","weka.estimators.KernelEstimator.main(String[])"
"24","8","weka.estimators.KDConditionalEstimator.main(String[])"
"26","8","weka.estimators.MahalanobisEstimator.MahalanobisEstimator(Matrix,double,double)"
"35","11","weka.estimators.MahalanobisEstimator.main(String[])"
"28","8","weka.estimators.UnivariateMixtureEstimator.MM.initializeModel(int,int[],int[][],Random)"
"32","10","weka.estimators.UnivariateMixtureEstimator.MM.estimateParameters(probs[],probs[][],probs[][][][])"
"44","12","weka.estimators.UnivariateMixtureEstimator.MM.predictIntervals(double)"
"22","7","weka.estimators.UnivariateMixtureEstimator.MM.predictQuantile(double)"
"40","12","weka.estimators.UnivariateMixtureEstimator.buildModel(int,int[],int[][])"
"52","16","weka.estimators.UnivariateMixtureEstimator.resampleWithWeights(Random,Random[])"
"29","11","weka.estimators.UnivariateMixtureEstimator.findNumComponentsUsingBootStrap()"
"23","10","weka.estimators.UnivariateMixtureEstimator.findModelUsingNormalizedEntropy()"
"16","6","weka.estimators.UnivariateMixtureEstimator.updateModel()"
"23","5","weka.estimators.UnivariateMixtureEstimator.setOptions(String[])"
"51","13","weka.estimators.UnivariateMixtureEstimator.main(String[])"
"13","5","weka.estimators.NormalEstimator.main(String[])"
"24","8","weka.estimators.NDConditionalEstimator.main(String[])"
"12","5","weka.estimators.PoissonEstimator.main(String[])"
"11","6","weka.estimators.CheckEstimator.AttrTypes.AttrTypes(int)"
"23","10","weka.estimators.CheckEstimator.AttrTypes.getSetType()"
"2","5","weka.estimators.CheckEstimator.AttrTypes.oneIsSet()"
"13","6","weka.estimators.CheckEstimator.AttrTypes.getVectorOfAttrTypes()"
"17","7","weka.estimators.CheckEstimator.getOptions()"
"32","8","weka.estimators.CheckEstimator.testsPerClassType(int,EstTypes)"
"58","15","weka.estimators.CheckEstimator.canSplitUpClass(int,int)"
"79","15","weka.estimators.CheckEstimator.correctBuildInitialisation(AttrTypes,int)"
"20","5","weka.estimators.CheckEstimator.canHandleMissing(AttrTypes,int,boolean,boolean,int)"
"47","9","weka.estimators.CheckEstimator.incrementingEquality(AttrTypes,int)"
"63","13","weka.estimators.CheckEstimator.instanceWeights(AttrTypes,int)"
"39","7","weka.estimators.CheckEstimator.datasetIntegrity(AttrTypes,int,boolean,boolean)"
"57","17","weka.estimators.CheckEstimator.runBasicTest(AttrTypes,int,int,int,int,int,boolean,boolean,int,int,int,String)"
"17","14","weka.estimators.CheckEstimator.compareDatasets(Instances,Instances)"
"9","8","weka.estimators.CheckEstimator.addMissing(Instances,int,boolean,boolean,int)"
"13","6","weka.estimators.CheckEstimator.makeTestDataset(int,int,int,AttrTypes,int,int,int)"
"16","5","weka.estimators.CheckEstimator.makeTestValueList(int,int,Instances,int,int)"
"13","5","weka.estimators.CheckEstimator.makeTestValueList(int,int,double,double,int)"
"27","12","weka.estimators.CheckEstimator.getMinMax(Instances,int,int[])"
"38","15","weka.estimators.CheckEstimator.printAttributeSummary(AttrTypes,int)"
"36","11","weka.estimators.CheckEstimator.printAttributeSummary(int,int)"
"14","5","weka.estimators.CheckEstimator.main(String[])"
"19","6","weka.estimators.Estimator.buildEstimator(Estimator,String[],boolean)"
"54","19","weka.estimators.Estimator.setGeneralOptions(Builder,Estimator,String[])"
"11","10","weka.estimators.Estimator.equals(Object)"
"19","7","weka.estimators.DiscreteEstimator.main(String[])"
"9","6","weka.gui.SelectedTagEditor.setAsText(String)"
"16","6","weka.gui.ETable.paintEmptyRows(Graphics)"
"25","10","weka.gui.ETable.prepareRenderer(TableCellRenderer,int,int)"
"15","7","weka.gui.ETable.fixMacOsCellRendererBorder(JComponent,boolean,boolean)"
"8","6","weka.gui.ETable.getToolTipLocation(MouseEvent)"
"16","8","weka.gui.ETable.configureEnclosingScrollPane()"
"10","7","weka.gui.SplashWindow.splash(Image,String)"
"8","6","weka.gui.InteractiveTableModel.hasEmptyRow()"
"16","6","weka.gui.filters.AddUserFieldsCustomizer.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"10","5","weka.gui.filters.AddUserFieldsCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"21","9","weka.gui.filters.AddUserFieldsCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"41","15","weka.gui.PropertySelectorDialog.createNodes(DefaultMutableTreeNode)"
"18","5","weka.gui.PropertyPanel.MouseAdapter$1.ActionListener$1.actionPerformed(ActionEvent)"
"19","6","weka.gui.PropertyPanel.MouseAdapter$1.ActionListener$1.actionPerformed(ActionEvent)"
"77","12","weka.gui.PropertyPanel.MouseAdapter$1.mouseClicked(MouseEvent)"
"15","5","weka.gui.PropertyPanel.showPropertyDialog()"
"8","5","weka.gui.WekaTaskMonitor.updateMonitor()"
"61","8","weka.gui.MemoryUsagePanel.MemoryUsagePanel()"
"24","5","weka.gui.GenericObjectEditorHistory.customizePopupMenu(JPopupMenu,Object,HistorySelectionListener)"
"25","6","weka.gui.DocumentPrinting.print(Graphics,PageFormat,int)"
"25","11","weka.gui.DocumentPrinting.printView(Graphics2D,Shape,View)"
"34","10","weka.gui.GenericPropertiesCreator.loadInputProperties()"
"38","21","weka.gui.GenericPropertiesCreator.isValidClassname(String,String)"
"40","11","weka.gui.GenericPropertiesCreator.generateOutputProperties()"
"8","6","weka.gui.scripting.SyntaxDocument.insertString(int,String,AttributeSet)"
"12","6","weka.gui.scripting.SyntaxDocument.commentLinesBefore(String,int)"
"10","6","weka.gui.scripting.SyntaxDocument.commentLinesAfter(String,int)"
"21","8","weka.gui.scripting.SyntaxDocument.highlightLinesAfter(String,int)"
"17","9","weka.gui.scripting.SyntaxDocument.applyHighlighting(String,int)"
"9","6","weka.gui.scripting.SyntaxDocument.startingMultiLineComment(String,int,int)"
"9","6","weka.gui.scripting.SyntaxDocument.endingMultiLineComment(String,int,int)"
"11","6","weka.gui.scripting.SyntaxDocument.checkForTokens(String,int,int)"
"16","5","weka.gui.scripting.SyntaxDocument.getQuoteToken(String,int,int)"
"24","5","weka.gui.scripting.SyntaxDocument.addMatchingBlockEnd(int)"
"8","6","weka.gui.scripting.FileScriptingPanel.BasicAction.BasicAction(String,String,String,Character)"
"13","6","weka.gui.scripting.FileScriptingPanel.OpenAction.actionPerformed(ActionEvent)"
"18","7","weka.gui.scripting.FileScriptingPanel.SaveAction.actionPerformed(ActionEvent)"
"36","11","weka.gui.scripting.FileScriptingPanel.ExitAction.actionPerformed(ActionEvent)"
"9","6","weka.gui.scripting.FileScriptingPanel.StartAction.actionPerformed(ActionEvent)"
"15","10","weka.gui.scripting.FileScriptingPanel.updateAction(Action,String,String,String,Character)"
"29","6","weka.gui.scripting.FileScriptingPanel.scriptFinished(ScriptExecutionEvent)"
"16","5","weka.gui.scripting.FileScriptingPanel.checkModified()"
"17","5","weka.gui.scripting.Script.checkExtension(File)"
"22","8","weka.gui.scripting.Script.open(File)"
"19","7","weka.gui.scripting.Script.saveAs(File)"
"7","7","weka.gui.scripting.Script.preCheck(String[])"
"19","7","weka.gui.scripting.Script.runScript(Script,String[])"
"28","8","weka.gui.scripting.ScriptUtils.copyOrMove(File,File,boolean)"
"20","6","weka.gui.scripting.ScriptUtils.load(File)"
"28","8","weka.gui.SettingsEditor.setupPerspectiveSettings()"
"31","9","weka.gui.SettingsEditor.showSingleSettingsEditor(Settings,String,String,JComponent,int,int)"
"28","8","weka.gui.SettingsEditor.showApplicationSettingsEditor(Settings,GUIApplication)"
"128","36","weka.gui.SettingsEditor.SingleSettingsEditor.SingleSettingsEditor(Object)"
"29","7","weka.gui.JListHelper.moveItems(JList,int,int)"
"10","7","weka.gui.AttributeSelectionPanel.AttributeTableModel.getValueAt(int,int)"
"10","7","weka.gui.AttributeSelectionPanel.AttributeTableModel.getColumnName(int)"
"50","9","weka.gui.AttributeSelectionPanel.AttributeSelectionPanel(boolean,boolean,boolean,boolean)"
"41","12","weka.gui.AttributeSelectionPanel.ActionListener$1.actionPerformed(ActionEvent)"
"25","7","weka.gui.HierarchyPropertyParser.buildBranch(TreeNode,String[],int)"
"14","7","weka.gui.HierarchyPropertyParser.isContained(TreeNode,String[],int)"
"7","6","weka.gui.HierarchyPropertyParser.search(TreeNode,String)"
"20","10","weka.gui.HierarchyPropertyParser.goTo(String)"
"18","8","weka.gui.HierarchyPropertyParser.goDown(String)"
"8","5","weka.gui.HierarchyPropertyParser.goToChild(String)"
"4","5","weka.gui.HierarchyPropertyParser.goToChild(int)"
"23","9","weka.gui.HierarchyPropertyParser.showNode(TreeNode,TreeNode[])"
"29","12","weka.gui.BrowserHelper.openURL(Component,String,boolean)"
"7","5","weka.gui.InstancesSummaryPanel.setInstances(Instances)"
"67","7","weka.gui.LogPanel.LogPanel(WekaTaskMonitor,boolean,boolean,boolean)"
"14","5","weka.gui.ComponentHelper.getImageIcon(String,String)"
"19","5","weka.gui.ComponentHelper.showMessageBox(Component,String,String,int,int)"
"19","5","weka.gui.ComponentHelper.showInformationBox(Component,String,String,int)"
"11","5","weka.gui.ListSelectorDialog.selectPattern()"
"34","8","weka.gui.ConverterFileChooser.initFilters(boolean,String)"
"32","8","weka.gui.ConverterFileChooser.initGUI(int)"
"34","14","weka.gui.ConverterFileChooser.showOpenDialog(Component)"
"47","12","weka.gui.ConverterFileChooser.showSaveDialog(Component)"
"21","8","weka.gui.ConverterFileChooser.updateCurrentConverter()"
"21","13","weka.gui.ConverterFileChooser.configureCurrentConverter(int)"
"18","5","weka.gui.AttributeSummaryPanel.setInstances(Instances)"
"31","6","weka.gui.AttributeSummaryPanel.setTable(AttributeStats,int)"
"32","7","weka.gui.AttributeSummaryPanel.setHeader(int)"
"28","8","weka.gui.streams.InstanceLoader.LoadThread.run()"
"11","5","weka.gui.streams.InstanceLoader.notifyInstanceProduced(InstanceEvent)"
"8","5","weka.gui.streams.InstanceJoiner.input(Instance)"
"6","5","weka.gui.streams.InstanceJoiner.outputPeek()"
"13","6","weka.gui.streams.InstanceJoiner.notifyInstanceProduced(InstanceEvent)"
"28","9","weka.gui.streams.InstanceJoiner.instanceProduced(InstanceEvent)"
"30","13","weka.gui.streams.InstanceJoiner.secondInstanceProduced(InstanceEvent)"
"21","6","weka.gui.streams.InstanceSavePanel.instanceProduced(InstanceEvent)"
"21","6","weka.gui.streams.InstanceTable.instanceProduced(InstanceEvent)"
"22","7","weka.gui.streams.InstanceCounter.instanceProduced(InstanceEvent)"
"21","6","weka.gui.streams.InstanceViewer.instanceProduced(InstanceEvent)"
"7","5","weka.gui.InteractiveTablePanel.InteractiveRenderer.getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int)"
"9","6","weka.gui.boundaryvisualizer.BoundaryPanel.PlotPanel.getToolTipText(MouseEvent)"
"43","18","weka.gui.boundaryvisualizer.BoundaryPanel.computeMinMaxAtts()"
"13","10","weka.gui.boundaryvisualizer.BoundaryPanel.start()"
"63","17","weka.gui.boundaryvisualizer.BoundaryPanel.PlotThread.run()"
"46","13","weka.gui.boundaryvisualizer.BoundaryPanel.PlotThread.calculateRegionProbs(int,int)"
"23","6","weka.gui.boundaryvisualizer.BoundaryPanel.plotTrainingData()"
"23","7","weka.gui.boundaryvisualizer.BoundaryPanel.plotPoint(int,int,int,int,int[],boolean)"
"8","8","weka.gui.boundaryvisualizer.BoundaryPanel.setXAttribute(int)"
"8","8","weka.gui.boundaryvisualizer.BoundaryPanel.setYAttribute(int)"
"31","16","weka.gui.boundaryvisualizer.BoundaryPanel.Thread$1.run()"
"16","5","weka.gui.boundaryvisualizer.BoundaryPanel.addTrainingInstanceFromMouseLocation(int,int,int,double)"
"17","6","weka.gui.boundaryvisualizer.BoundaryPanel.removeTrainingInstanceFromMouseLocation(int,int)"
"57","6","weka.gui.boundaryvisualizer.BoundaryPanel.main(String[])"
"57","17","weka.gui.boundaryvisualizer.BoundaryVisualizer.AxisPanel.paintComponent(Graphics)"
"8","5","weka.gui.boundaryvisualizer.BoundaryVisualizer.ActionListener$1.actionPerformed(ActionEvent)"
"6","5","weka.gui.boundaryvisualizer.BoundaryVisualizer.PropertyChangeListener$1.propertyChange(PropertyChangeEvent)"
"10","5","weka.gui.boundaryvisualizer.BoundaryVisualizer.ActionListener$1.actionPerformed(ActionEvent)"
"19","7","weka.gui.boundaryvisualizer.BoundaryVisualizer.ActionListener$1.actionPerformed(ActionEvent)"
"26","10","weka.gui.boundaryvisualizer.BoundaryVisualizer.MouseAdapter$1.mouseClicked(MouseEvent)"
"8","5","weka.gui.boundaryvisualizer.BoundaryVisualizer.setClassifier(Classifier)"
"23","6","weka.gui.boundaryvisualizer.BoundaryVisualizer.computeBounds()"
"59","12","weka.gui.boundaryvisualizer.BoundaryVisualizer.setInstances(Instances)"
"16","7","weka.gui.boundaryvisualizer.BoundaryVisualizer.configureForClassAttribute()"
"31","6","weka.gui.boundaryvisualizer.BoundaryVisualizer.setUpBoundaryPanel()"
"17","5","weka.gui.boundaryvisualizer.BoundaryVisualizer.main(String[])"
"30","6","weka.gui.boundaryvisualizer.BoundaryPanelDistributed.initialize()"
"16","11","weka.gui.boundaryvisualizer.BoundaryPanelDistributed.start()"
"28","17","weka.gui.boundaryvisualizer.BoundaryPanelDistributed.availableHost(int)"
"104","21","weka.gui.boundaryvisualizer.BoundaryPanelDistributed.Thread$1.run()"
"72","8","weka.gui.boundaryvisualizer.BoundaryPanelDistributed.main(String[])"
"16","5","weka.gui.boundaryvisualizer.KDDataGenerator.getWeights()"
"34","11","weka.gui.boundaryvisualizer.KDDataGenerator.generateInstances(Override[][][])"
"20","6","weka.gui.boundaryvisualizer.KDDataGenerator.distance(Instance,Instance)"
"12","6","weka.gui.boundaryvisualizer.KDDataGenerator.updateMinMax(Instance)"
"25","12","weka.gui.boundaryvisualizer.KDDataGenerator.computeParams()"
"34","13","weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask.execute()"
"40","9","weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask.calculateRegionProbs(int,int)"
"15","5","weka.gui.PackageManager.Comparator$1.compare(Package,Package)"
"36","16","weka.gui.PackageManager.CheckForNewPackages.doInBackground()"
"20","6","weka.gui.PackageManager.RefreshCache.done()"
"55","13","weka.gui.PackageManager.UninstallTask.doInBackground()"
"30","7","weka.gui.PackageManager.UninstallTask.done()"
"50","14","weka.gui.PackageManager.UnofficialInstallTask.doInBackground()"
"265","71","weka.gui.PackageManager.InstallTask.doInBackground()"
"21","5","weka.gui.PackageManager.InstallTask.done()"
"28","10","weka.gui.PackageManager.ActionListener$1.actionPerformed(ActionEvent)"
"25","8","weka.gui.PackageManager.ActionListener$1.actionPerformed(ActionEvent)"
"11","6","weka.gui.PackageManager.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"11","5","weka.gui.PackageManager.MouseAdapter$1.mouseClicked(MouseEvent)"
"9","6","weka.gui.PackageManager.HyperlinkListener$1.hyperlinkUpdate(HyperlinkEvent)"
"18","9","weka.gui.PackageManager.ActionListener$1.actionPerformed(ActionEvent)"
"368","8","weka.gui.PackageManager.PackageManager()"
"25","9","weka.gui.PackageManager.updateInstallUninstallButtonEnablement()"
"38","10","weka.gui.PackageManager.updateTableForPackageList(Package)"
"34","18","weka.gui.PackageManager.updateTable()"
"33","11","weka.gui.PackageManager.displayPackageInfo(int)"
"33","12","weka.gui.PackageManager.getPackagesAndEstablishLookup()"
"14","5","weka.gui.JTableHelper.calcColumnWidth(JTable,int)"
"21","9","weka.gui.JTableHelper.calcHeaderWidth(JTable,int)"
"16","7","weka.gui.ReaderToTextPane.Thread$1.run()"
"31","7","weka.gui.ReaderToTextPane.run()"
"42","9","weka.gui.WorkbenchApp.main(String[])"
"19","5","weka.gui.AttributeVisualizationPanel.setInstances(Instances)"
"91","30","weka.gui.AttributeVisualizationPanel.BarCalc.run()"
"96","30","weka.gui.AttributeVisualizationPanel.HistCalc.run()"
"52","35","weka.gui.AttributeVisualizationPanel.getToolTipText(MouseEvent)"
"128","61","weka.gui.AttributeVisualizationPanel.paintComponent(Graphics)"
"40","16","weka.gui.SaveBuffer.save(StringBuffer)"
"18","7","weka.gui.SaveBuffer.saveOverwriteAppend(StringBuffer,File,boolean)"
"8","7","weka.gui.explorer.ClassifierErrorsPlotInstances.check()"
"31","9","weka.gui.explorer.ClassifierErrorsPlotInstances.determineFormat()"
"66","25","weka.gui.explorer.ClassifierErrorsPlotInstances.process(Instances,Instances[][],Evaluation)"
"78","27","weka.gui.explorer.ClassifierErrorsPlotInstances.process(Instance,Classifier,Evaluation)"
"32","9","weka.gui.explorer.ClassifierErrorsPlotInstances.scaleNumericPredictions()"
"44","8","weka.gui.explorer.ClassifierErrorsPlotInstances.addPredictionIntervals()"
"9","7","weka.gui.explorer.ClassifierErrorsPlotInstances.finishUp()"
"29","13","weka.gui.explorer.AttributeSelectionPanel.PropertyChangeListener$1.propertyChange(PropertyChangeEvent)"
"20","8","weka.gui.explorer.AttributeSelectionPanel.PropertyChangeListener$1.propertyChange(PropertyChangeEvent)"
"167","34","weka.gui.explorer.AttributeSelectionPanel.Thread$1.run()"
"86","24","weka.gui.explorer.AttributeSelectionPanel.visualize(String,int,int)"
"27","11","weka.gui.explorer.AttributeSelectionPanel.updateCapabilitiesFilter(Capabilities)"
"34","7","weka.gui.explorer.DataGeneratorPanel.execute(boolean)"
"45","9","weka.gui.explorer.Explorer.Explorer()"
"10","6","weka.gui.explorer.AssociationsPanel.PropertyChangeListener$1.propertyChange(PropertyChangeEvent)"
"79","21","weka.gui.explorer.AssociationsPanel.Thread$1.run()"
"83","26","weka.gui.explorer.AssociationsPanel.historyRightClickPopup(String,int,int)"
"23","10","weka.gui.explorer.AssociationsPanel.updateCapabilitiesFilter(Capabilities)"
"6","5","weka.gui.explorer.ClustererAssignmentsPlotInstances.check()"
"28","9","weka.gui.explorer.ClustererAssignmentsPlotInstances.process()"
"11","7","weka.gui.explorer.PreprocessPanel.PropertyChangeListener$1.propertyChange(PropertyChangeEvent)"
"20","7","weka.gui.explorer.PreprocessPanel.ActionListener$1.actionPerformed(ActionEvent)"
"31","7","weka.gui.explorer.PreprocessPanel.instantiationComplete()"
"61","19","weka.gui.explorer.PreprocessPanel.Runnable$1.run()"
"37","13","weka.gui.explorer.PreprocessPanel.Thread$1.run()"
"13","5","weka.gui.explorer.PreprocessPanel.setInstancesFromFileQ()"
"18","5","weka.gui.explorer.PreprocessPanel.setInstancesFromDBQ(String,String,String,String,boolean)"
"14","5","weka.gui.explorer.PreprocessPanel.setInstancesFromURLQ()"
"44","16","weka.gui.explorer.PreprocessPanel.addUndoPoint()"
"16","5","weka.gui.explorer.PreprocessPanel.undo()"
"25","11","weka.gui.explorer.PreprocessPanel.updateCapabilitiesFilter(Capabilities)"
"23","12","weka.gui.explorer.PreprocessPanel.updateSettings()"
"10","6","weka.gui.explorer.ClustererPanel.PropertyChangeListener$1.propertyChange(PropertyChangeEvent)"
"267","11","weka.gui.explorer.ClustererPanel.ClustererPanel()"
"216","58","weka.gui.explorer.ClustererPanel.Thread$1.run()"
"139","35","weka.gui.explorer.ClustererPanel.visualizeClusterer(String,int,int)"
"28","8","weka.gui.explorer.ClustererPanel.saveClusterer(String,Clusterer,Instances,Instances[])"
"73","22","weka.gui.explorer.ClustererPanel.loadClusterer()"
"76","20","weka.gui.explorer.ClustererPanel.Thread$1.run()"
"35","13","weka.gui.explorer.ClustererPanel.updateCapabilitiesFilter(Capabilities)"
"10","6","weka.gui.explorer.ClassifierPanel.PropertyChangeListener$1.propertyChange(PropertyChangeEvent)"
"22","5","weka.gui.explorer.ClassifierPanel.ActionListener$1.actionPerformed(ActionEvent)"
"420","11","weka.gui.explorer.ClassifierPanel.ClassifierPanel()"
"35","8","weka.gui.explorer.ClassifierPanel.setTestSet()"
"40","13","weka.gui.explorer.ClassifierPanel.setupEval(Evaluation,Classifier,Instances,CostMatrix,ClassifierErrorsPlotInstances,AbstractOutput,boolean,boolean)"
"455","150","weka.gui.explorer.ClassifierPanel.Thread$1.run()"
"29","8","weka.gui.explorer.ClassifierPanel.ActionListener$1.actionPerformed(ActionEvent)"
"329","73","weka.gui.explorer.ClassifierPanel.visualize(String,int,int)"
"27","7","weka.gui.explorer.ClassifierPanel.saveClassifier(String,Classifier,Instances)"
"74","20","weka.gui.explorer.ClassifierPanel.loadClassifier()"
"30","6","weka.gui.explorer.ClassifierPanel.Thread$1.run()"
"48","5","weka.gui.explorer.ClassifierPanel.continueIterating(String,Classifier)"
"210","78","weka.gui.explorer.ClassifierPanel.Thread$1.run()"
"23","10","weka.gui.explorer.ClassifierPanel.updateCapabilitiesFilter(Capabilities)"
"113","19","weka.gui.visualize.ThresholdVisualizePanel.main(String[])"
"30","7","weka.gui.visualize.PrintableComponent.getToolTipText(PrintableComponent)"
"93","6","weka.gui.visualize.PrintableComponent.initFileChooser()"
"26","16","weka.gui.visualize.PrintableComponent.updateDimensions(JTextField)"
"28","7","weka.gui.visualize.PrintableComponent.saveComponent()"
"56","23","weka.gui.visualize.PlotData2D.determineBounds()"
"87","20","weka.gui.visualize.VisualizePanel.PlotPanel.MouseAdapter$1.mouseClicked(MouseEvent)"
"23","8","weka.gui.visualize.VisualizePanel.PlotPanel.MouseAdapter$1.mouseReleased(MouseEvent)"
"68","22","weka.gui.visualize.VisualizePanel.PlotPanel.ActionListener$1.actionPerformed(ActionEvent)"
"4","6","weka.gui.visualize.VisualizePanel.PlotPanel.checkPoints(double,double)"
"22","15","weka.gui.visualize.VisualizePanel.PlotPanel.inSplit(Instance)"
"48","31","weka.gui.visualize.VisualizePanel.PlotPanel.inPolyline(Double,double,double)"
"22","10","weka.gui.visualize.VisualizePanel.PlotPanel.inPoly(Double,double,double)"
"48","15","weka.gui.visualize.VisualizePanel.PlotPanel.addPlot(PlotData2D)"
"17","6","weka.gui.visualize.VisualizePanel.PlotPanel.switchToLegend()"
"24","9","weka.gui.visualize.VisualizePanel.PlotPanel.switchToBars()"
"17","5","weka.gui.visualize.VisualizePanel.PlotPanel.plotReset(Instances,int)"
"46","9","weka.gui.visualize.VisualizePanel.PlotPanel.drawShapes(Graphics)"
"28","15","weka.gui.visualize.VisualizePanel.PlotPanel.lineIntersect(double,double,double,double,double,double,double)"
"98","20","weka.gui.visualize.VisualizePanel.PlotPanel.makePolygon(Double)"
"16","5","weka.gui.visualize.VisualizePanel.setShowAttBars(boolean)"
"8","5","weka.gui.visualize.VisualizePanel.setShowClassPanel(boolean)"
"20","7","weka.gui.visualize.VisualizePanel.setProperties(String)"
"196","9","weka.gui.visualize.VisualizePanel.VisualizePanel()"
"21","7","weka.gui.visualize.VisualizePanel.saveVisibleInstances()"
"41","14","weka.gui.visualize.VisualizePanel.setUpComboBoxes(Instances)"
"33","7","weka.gui.visualize.VisualizePanel.main(String[])"
"17","5","weka.gui.visualize.Plot2D.setProperties()"
"13","6","weka.gui.visualize.Plot2D.addPlot(PlotData2D)"
"59","24","weka.gui.visualize.Plot2D.searchPoints(int,int,boolean)"
"29","8","weka.gui.visualize.Plot2D.determineBounds()"
"31","11","weka.gui.visualize.Plot2D.drawDataPoint(double,double,int,int,Graphics)"
"13","6","weka.gui.visualize.Plot2D.updatePturb()"
"13","7","weka.gui.visualize.Plot2D.fillLookup()"
"76","29","weka.gui.visualize.Plot2D.paintData(Graphics)"
"152","51","weka.gui.visualize.Plot2D.paintAxis(Graphics)"
"19","9","weka.gui.visualize.Plot2D.paintComponent(Graphics)"
"12","7","weka.gui.visualize.Plot2D.checkAgainstBackground(Color,Color)"
"41","7","weka.gui.visualize.Plot2D.main(String[])"
"25","5","weka.gui.visualize.PostscriptGraphics.drawImage(Image,int,int,int,int,Color,ImageObserver)"
"11","6","weka.gui.visualize.PostscriptGraphics.setFont(Font)"
"13","7","weka.gui.visualize.ClassPanel.NomLabel.MouseAdapter$1.mouseClicked(MouseEvent)"
"11","5","weka.gui.visualize.ClassPanel.extendColourMap()"
"38","15","weka.gui.visualize.ClassPanel.setNumeric()"
"87","15","weka.gui.visualize.ClassPanel.paintNominal(Graphics)"
"50","14","weka.gui.visualize.ClassPanel.paintNumeric(Graphics)"
"13","7","weka.gui.visualize.ClassPanel.paintComponent(Graphics)"
"27","5","weka.gui.visualize.ClassPanel.main(String[])"
"56","16","weka.gui.visualize.VisualizeUtils.processColour(String,Color)"
"14","7","weka.gui.visualize.AttributePanel.AttributeSpacing.MouseAdapter$1.mouseClicked(MouseEvent)"
"41","7","weka.gui.visualize.AttributePanel.AttributeSpacing.AttributeSpacing(Attribute,int)"
"40","16","weka.gui.visualize.AttributePanel.AttributeSpacing.paintComponent(Graphics)"
"10","6","weka.gui.visualize.AttributePanel.setCindex(int,double,double)"
"20","9","weka.gui.visualize.AttributePanel.setCindex(int)"
"11","5","weka.gui.visualize.AttributePanel.extendColourMap()"
"64","8","weka.gui.visualize.AttributePanel.setInstances(Instances)"
"33","5","weka.gui.visualize.AttributePanel.main(String[])"
"97","36","weka.gui.visualize.MatrixPanel.initInternalFields()"
"23","5","weka.gui.visualize.MatrixPanel.Plot.JPanel$1.paint(Graphics)"
"23","14","weka.gui.visualize.MatrixPanel.Plot.mouseMoved(MouseEvent)"
"36","12","weka.gui.visualize.MatrixPanel.Plot.mouseClicked(MouseEvent)"
"11","8","weka.gui.visualize.MatrixPanel.Plot.getToolTipText(MouseEvent)"
"34","14","weka.gui.visualize.MatrixPanel.Plot.paintGraph(Graphics,int,int,int,int)"
"38","13","weka.gui.visualize.MatrixPanel.Plot.paintME(Graphics)"
"14","7","weka.gui.visualize.JComponentWriter.toOutput()"
"10","5","weka.gui.visualize.LegendPanel.LegendEntry.MouseAdapter$1.mouseClicked(MouseEvent)"
"29","5","weka.gui.visualize.LegendPanel.main(String[])"
"14","6","weka.gui.FileEnvironmentField.ActionListener$1.actionPerformed(ActionEvent)"
"15","6","weka.gui.FileEnvironmentField.setCurrentDirectory(File)"
"9","6","weka.gui.FileEnvironmentField.getValue()"
"7","5","weka.gui.AbstractPerspective.getPerspectiveID()"
"7","5","weka.gui.AbstractPerspective.getPerspectiveTitle()"
"7","5","weka.gui.AbstractPerspective.getPerspectiveTipText()"
"7","6","weka.gui.AbstractPerspective.getPerspectiveIcon()"
"41","9","weka.gui.GUIChooserApp.ActionListener$1.actionPerformed(ActionEvent)"
"35","7","weka.gui.GUIChooserApp.ActionListener$1.actionPerformed(ActionEvent)"
"25","5","weka.gui.GUIChooserApp.ActionListener$1.actionPerformed(ActionEvent)"
"26","7","weka.gui.GUIChooserApp.ActionListener$1.actionPerformed(ActionEvent)"
"615","20","weka.gui.GUIChooserApp.GUIChooserApp()"
"19","5","weka.gui.GUIChooserApp.insertMenuItem(JMenu,JMenuItem,int)"
"20","6","weka.gui.GUIChooserApp.createFrame(GUIChooserApp,String,Component,LayoutManager,Object,int,int,JMenuBar,boolean,boolean)"
"12","7","weka.gui.GUIChooserApp.SecurityManager$1.checkExit(int)"
"20","5","weka.gui.GUIChooserApp.Thread$1.run()"
"59","5","weka.gui.GUIChooserApp.main(String[])"
"10","8","weka.gui.SortedTableModel.SortContainer.compareTo(SortContainer)"
"32","10","weka.gui.SortedTableModel.sort(int,boolean)"
"8","5","weka.gui.SortedTableModel.MouseAdapter$1.mouseClicked(MouseEvent)"
"33","8","weka.gui.knowledgeflow.AttributeSummaryPerspective.setup(Settings)"
"33","5","weka.gui.knowledgeflow.AttributeSummaryPerspective.makePanel(Settings)"
"19","9","weka.gui.knowledgeflow.SendToPerspectiveGraphicalCommand.performCommand(Object)"
"16","10","weka.gui.knowledgeflow.InvisibleNode.getChildAt(int,boolean)"
"12","7","weka.gui.knowledgeflow.InvisibleNode.getChildCount(boolean)"
"20","9","weka.gui.knowledgeflow.StepTree.MouseAdapter$1.mouseClicked(MouseEvent)"
"19","5","weka.gui.knowledgeflow.StepTree.populateTree(DefaultMutableTreeNode)"
"17","7","weka.gui.knowledgeflow.StepTree.populateTree(String,DefaultMutableTreeNode,Properties)"
"21","6","weka.gui.knowledgeflow.StepTree.processPackage(HierarchyPropertyParser,DefaultMutableTreeNode,WekaAlgorithmWrapper)"
"13","5","weka.gui.knowledgeflow.StepTree.getCategoryFolder(DefaultMutableTreeNode,String)"
"10","6","weka.gui.knowledgeflow.StepTree.getToolTipText(MouseEvent)"
"19","5","weka.gui.knowledgeflow.VisibleLayout.pasteFromClipboard(int,int)"
"35","7","weka.gui.knowledgeflow.VisibleLayout.executeFlow(boolean)"
"30","10","weka.gui.knowledgeflow.VisibleLayout.findClosestConnections(Point,int)"
"14","6","weka.gui.knowledgeflow.VisibleLayout.previousConn(StepManager,StepManagerImpl,int)"
"22","8","weka.gui.knowledgeflow.VisibleLayout.saveLayout(boolean)"
"18","5","weka.gui.knowledgeflow.VisibleLayout.loadLayout(File,boolean)"
"10","5","weka.gui.knowledgeflow.VisibleLayout.serializeStepsToJSON(StepVisual,String)"
"26","12","weka.gui.knowledgeflow.DesignPanel.KeyAdapter$1.keyReleased(KeyEvent)"
"4","5","weka.gui.knowledgeflow.MainKFPerspective.getTabTitle(int)"
"22","13","weka.gui.knowledgeflow.MainKFPerspective.setActiveTab(int)"
"16","9","weka.gui.knowledgeflow.MainKFPerspective.removeTab(int)"
"4","5","weka.gui.knowledgeflow.MainKFPerspective.getLayoutAt(int)"
"24","6","weka.gui.knowledgeflow.LayoutPanel.MouseAdapter$1.mousePressed(MouseEvent)"
"23","5","weka.gui.knowledgeflow.LayoutPanel.MouseAdapter$1.mouseReleased(MouseEvent)"
"72","27","weka.gui.knowledgeflow.LayoutPanel.MouseAdapter$1.mouseClicked(MouseEvent)"
"23","6","weka.gui.knowledgeflow.LayoutPanel.MouseMotionAdapter$1.mouseDragged(MouseEvent)"
"32","10","weka.gui.knowledgeflow.LayoutPanel.paintComponent(Graphics)"
"34","10","weka.gui.knowledgeflow.LayoutPanel.paintStepLabels(Graphics)"
"51","13","weka.gui.knowledgeflow.LayoutPanel.paintConnections(Graphics)"
"86","8","weka.gui.knowledgeflow.LayoutPanel.canvasContextualMenu(int,int)"
"132","22","weka.gui.knowledgeflow.LayoutPanel.stepContextualMenu(StepVisual,int,int)"
"22","7","weka.gui.knowledgeflow.LayoutPanel.Thread$1.run()"
"23","8","weka.gui.knowledgeflow.LayoutPanel.popupStepInteractiveViewer(StepVisual,String,StepInteractiveViewer)"
"32","6","weka.gui.knowledgeflow.LayoutPanel.popupStepEditorDialog(StepVisual)"
"15","5","weka.gui.knowledgeflow.GOEStepEditorDialog.addPrimaryEditorPanel(String)"
"20","5","weka.gui.knowledgeflow.steps.ModelPerformanceChartInteractiveView.init()"
"33","9","weka.gui.knowledgeflow.steps.SorterStepEditorDialog.setStepToEdit(Step)"
"12","5","weka.gui.knowledgeflow.steps.SorterStepEditorDialog.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"23","9","weka.gui.knowledgeflow.steps.DataVisualizerInteractiveView.ResultHistoryPanel.RMouseAdapter$1.mouseClicked(MouseEvent)"
"27","13","weka.gui.knowledgeflow.steps.DataVisualizerInteractiveView.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"99","8","weka.gui.knowledgeflow.steps.DataVisualizerInteractiveView.init()"
"18","6","weka.gui.knowledgeflow.steps.StorePropertiesInEnvironmentStepEditorDialog.DynamicPropertiesPanel.DynamicPropertiesPanel(String)"
"18","7","weka.gui.knowledgeflow.steps.StorePropertiesInEnvironmentStepEditorDialog.DynamicPropertiesPanel.getPropertiesInternal()"
"52","13","weka.gui.knowledgeflow.steps.BoundaryPlotterStepEditorDialog.layoutEditor()"
"21","8","weka.gui.knowledgeflow.steps.DataGridStepEditorDialog.initialize()"
"10","5","weka.gui.knowledgeflow.steps.DataGridStepEditorDialog.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"59","24","weka.gui.knowledgeflow.steps.DataGridStepEditorDialog.handleTabChange()"
"16","11","weka.gui.knowledgeflow.steps.DataGridStepEditorDialog.AttDef.attStringToType(String)"
"12","5","weka.gui.knowledgeflow.steps.FlowByExpressionStepEditorDialog.ActionListener$1.actionPerformed(ActionEvent)"
"23","8","weka.gui.knowledgeflow.steps.FlowByExpressionStepEditorDialog.ActionListener$1.actionPerformed(ActionEvent)"
"14","6","weka.gui.knowledgeflow.steps.FlowByExpressionStepEditorDialog.ActionListener$1.actionPerformed(ActionEvent)"
"18","7","weka.gui.knowledgeflow.steps.FlowByExpressionStepEditorDialog.KeyAdapter$1.keyReleased(KeyEvent)"
"14","6","weka.gui.knowledgeflow.steps.FlowByExpressionStepEditorDialog.ActionListener$1.actionPerformed(ActionEvent)"
"19","8","weka.gui.knowledgeflow.steps.FlowByExpressionStepEditorDialog.KeyAdapter$1.keyReleased(KeyEvent)"
"195","12","weka.gui.knowledgeflow.steps.FlowByExpressionStepEditorDialog.layoutEditor()"
"10","6","weka.gui.knowledgeflow.steps.FlowByExpressionStepEditorDialog.okPressed()"
"23","9","weka.gui.knowledgeflow.steps.GraphViewerInteractiveView.ResultHistoryPanel.RMouseAdapter$1.mouseClicked(MouseEvent)"
"27","13","weka.gui.knowledgeflow.steps.GraphViewerInteractiveView.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"99","6","weka.gui.knowledgeflow.steps.GraphViewerInteractiveView.init()"
"12","7","weka.gui.knowledgeflow.steps.ImageViewerInteractiveView.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"12","7","weka.gui.knowledgeflow.steps.BoundaryPlotterInteractiveView.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"16","8","weka.gui.knowledgeflow.steps.CostBenefitAnalysisInteractiveView.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"17","7","weka.gui.knowledgeflow.steps.JoinStepEditorDialog.initialize()"
"130","8","weka.gui.knowledgeflow.steps.JoinStepEditorDialog.layoutEditor()"
"12","5","weka.gui.knowledgeflow.steps.JoinStepEditorDialog.okPressed()"
"14","5","weka.gui.knowledgeflow.steps.StripChartInteractiveView.preProcessDataPoint(m_legendPanel.repaint[][])"
"68","16","weka.gui.knowledgeflow.steps.StripChartInteractiveView.acceptDataPoint(Override[])"
"13","5","weka.gui.knowledgeflow.steps.SubstringReplacerStepEditorDialog.initialize()"
"16","5","weka.gui.knowledgeflow.steps.SubstringReplacerStepEditorDialog.ActionListener$1.actionPerformed(ActionEvent)"
"16","6","weka.gui.knowledgeflow.steps.SetVariablesStepEditorDialog.DynamicVariablesPanel.DynamicVariablesPanel(String)"
"15","6","weka.gui.knowledgeflow.steps.SetVariablesStepEditorDialog.DynamicVariablesPanel.getVariablesInternal()"
"12","5","weka.gui.knowledgeflow.steps.SetVariablesStepEditorDialog.VariablesPanel.getVariablesInternal()"
"14","7","weka.gui.knowledgeflow.steps.AttributeSummarizerInteractiveView.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"35","11","weka.gui.knowledgeflow.steps.ClassValuePickerStepEditorDialog.setStepToEdit(Step)"
"27","7","weka.gui.knowledgeflow.steps.ClassAssignerStepEditorDialog.setStepToEdit(Step)"
"20","9","weka.gui.knowledgeflow.steps.ClassAssignerStepEditorDialog.setComboToClass(Instances)"
"53","8","weka.gui.knowledgeflow.steps.ClassifierPerformanceEvaluatorStepEditorDialog.setStepToEdit(Step)"
"13","5","weka.gui.knowledgeflow.steps.SubstringLabelerStepEditorDialog.initialize()"
"16","5","weka.gui.knowledgeflow.steps.SubstringLabelerStepEditorDialog.ActionListener$1.actionPerformed(ActionEvent)"
"40","5","weka.gui.knowledgeflow.steps.TextViewerInteractiveView.visualize(String,int,int)"
"14","8","weka.gui.knowledgeflow.steps.ScatterPlotMatrixInteractiveView.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"19","7","weka.gui.knowledgeflow.steps.ExecuteProcessStepEditorDialog.StaticProcessPanel.StaticProcessPanel(ExecuteProcess,Environment)"
"33","12","weka.gui.knowledgeflow.steps.ExecuteProcessStepEditorDialog.DynamicProcessPanel.DynamicProcessPanel(ExecuteProcess)"
"15","6","weka.gui.knowledgeflow.steps.ModelPerformanceChartStepEditorDialog.setupRendererOptsTipText(JLabel)"
"9","5","weka.gui.knowledgeflow.TemplateManager.getTemplateFlow(String)"
"12","9","weka.gui.knowledgeflow.StepVisual.iconForStep(Step)"
"11","5","weka.gui.knowledgeflow.StepVisual.loadIcon(ClassLoader,String)"
"13","9","weka.gui.knowledgeflow.StepVisual.getStepInteractiveViewComponent(String)"
"14","5","weka.gui.knowledgeflow.StepVisual.getClosestConnectorPoint(Point)"
"9","5","weka.gui.knowledgeflow.MainKFPerspectiveToolBar.AbstractAction$1.actionPerformed(ActionEvent)"
"18","8","weka.gui.knowledgeflow.MainKFPerspectiveToolBar.AbstractAction$1.actionPerformed(ActionEvent)"
"28","5","weka.gui.knowledgeflow.MainKFPerspectiveToolBar.ActionListener$1.actionPerformed(ActionEvent)"
"16","5","weka.gui.knowledgeflow.MainKFPerspectiveToolBar.AbstractAction$1.actionPerformed(ActionEvent)"
"17","5","weka.gui.knowledgeflow.MainKFPerspectiveToolBar.addMenuItemToMenu(String,String,Action,KeyStroke)"
"9","5","weka.gui.knowledgeflow.GetPerspectiveNamesGraphicalCommand.performCommand(Object)"
"13","5","weka.gui.knowledgeflow.KnowledgeFlowApp.getApplicationSettings()"
"41","11","weka.gui.knowledgeflow.KnowledgeFlowApp.main(String[])"
"42","5","weka.gui.knowledgeflow.ShadowBorder.paintBorder(Component,Graphics,int,int,int,int)"
"18","8","weka.gui.knowledgeflow.StepTreeLeafDetails.StepTreeLeafDetails(Object,boolean)"
"29","8","weka.gui.CostBenefitAnalysisPanel.findMaxMinCB(boolean)"
"38","7","weka.gui.CostBenefitAnalysisPanel.updateCBRandomGainInfo(int)"
"47","13","weka.gui.CostBenefitAnalysisPanel.findIndexForValue(double,Instances,int)"
"50","16","weka.gui.CostBenefitAnalysisPanel.constructCostBenefitData()"
"21","6","weka.gui.PropertyDialog.initialize(PropertyEditor,int,int)"
"15","5","weka.gui.EnvironmentField.processSelected(String)"
"18","7","weka.gui.arffviewer.ArffTable.setModel(TableModel)"
"22","6","weka.gui.arffviewer.ArffTable.setLayout()"
"18","9","weka.gui.arffviewer.ArffTable.getPlainColumnName(int)"
"29","10","weka.gui.arffviewer.ArffTable.getStringSelection()"
"53","15","weka.gui.arffviewer.ArffTableCellRenderer.getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int)"
"11","5","weka.gui.arffviewer.ArffTableModel.ArffTableModel(Instances)"
"13","5","weka.gui.arffviewer.ArffTableModel.loadFile(String,AbstractFileLoader)"
"14","5","weka.gui.arffviewer.ArffTableModel.setInstances(Instances)"
"5","5","weka.gui.arffviewer.ArffTableModel.isAttribute(int)"
"9","6","weka.gui.arffviewer.ArffTableModel.getType(int,int)"
"13","5","weka.gui.arffviewer.ArffTableModel.setAttributeWeightAt(int,double)"
"26","7","weka.gui.arffviewer.ArffTableModel.attributeAsClassAt(int)"
"7","5","weka.gui.arffviewer.ArffTableModel.deleteInstanceAt(int,boolean)"
"11","5","weka.gui.arffviewer.ArffTableModel.setInstanceWeight(int,double,boolean)"
"14","7","weka.gui.arffviewer.ArffTableModel.insertInstance(int,boolean)"
"32","15","weka.gui.arffviewer.ArffTableModel.sortInstances(int,boolean)"
"12","7","weka.gui.arffviewer.ArffTableModel.getColumnClass(int)"
"47","19","weka.gui.arffviewer.ArffTableModel.getColumnName(int)"
"50","22","weka.gui.arffviewer.ArffTableModel.getValueAt(int,int)"
"56","22","weka.gui.arffviewer.ArffTableModel.setValueAt(Object,int,int,boolean)"
"16","5","weka.gui.arffviewer.ArffTableModel.addUndoPoint()"
"29","9","weka.gui.arffviewer.ArffPanel.setMenu()"
"14","5","weka.gui.arffviewer.ArffPanel.createTitle()"
"14","6","weka.gui.arffviewer.ArffPanel.calcMean()"
"54","21","weka.gui.arffviewer.ArffPanel.setValues(Object)"
"15","9","weka.gui.arffviewer.ArffPanel.deleteAttribute()"
"28","8","weka.gui.arffviewer.ArffPanel.deleteAttributes()"
"10","5","weka.gui.arffviewer.ArffPanel.attributeAsClass()"
"14","7","weka.gui.arffviewer.ArffPanel.renameAttribute()"
"15","8","weka.gui.arffviewer.ArffPanel.setAttributeWeight()"
"12","7","weka.gui.arffviewer.ArffPanel.setInstanceWeight()"
"62","21","weka.gui.arffviewer.ArffPanel.actionPerformed(ActionEvent)"
"22","16","weka.gui.arffviewer.ArffPanel.mouseClicked(MouseEvent)"
"9","5","weka.gui.arffviewer.ArffViewerMainPanel.setTabTitle(JComponent)"
"25","9","weka.gui.arffviewer.ArffViewerMainPanel.saveChanges(boolean)"
"19","5","weka.gui.arffviewer.ArffViewerMainPanel.saveFile()"
"24","9","weka.gui.arffviewer.ArffViewerMainPanel.saveFileAs()"
"8","5","weka.gui.arffviewer.ArffViewerMainPanel.closeFile(boolean)"
"22","6","weka.gui.arffviewer.ArffViewerMainPanel.showProperties()"
"21","5","weka.gui.arffviewer.ArffViewerMainPanel.showAttributes()"
"34","11","weka.gui.arffviewer.ArffViewerMainPanel.showValues()"
"66","22","weka.gui.arffviewer.ArffViewerMainPanel.actionPerformed(ActionEvent)"
"12","5","weka.gui.arffviewer.ArffViewer.windowClosing(WindowEvent)"
"20","6","weka.gui.arffviewer.ArffViewer.Thread$1.run()"
"9","7","weka.gui.ResultHistoryPanel.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"9","5","weka.gui.ResultHistoryPanel.updateResult(String)"
"8","5","weka.gui.AttributeListPanel.AttributeTableModel.getValueAt(int,int)"
"8","5","weka.gui.AttributeListPanel.AttributeTableModel.getColumnName(int)"
"44","14","weka.gui.Main.createFrame(Main,String,Component,LayoutManager,Object,int,int,JMenuBar,boolean,boolean)"
"19","5","weka.gui.Main.insertMenuItem(JMenu,JMenuItem,int)"
"25","7","weka.gui.Main.ActionListener$1.actionPerformed(ActionEvent)"
"15","5","weka.gui.Main.ActionListener$1.actionPerformed(ActionEvent)"
"30","9","weka.gui.Main.ActionListener$1.actionPerformed(ActionEvent)"
"24","7","weka.gui.Main.ActionListener$1.actionPerformed(ActionEvent)"
"14","5","weka.gui.Main.ActionListener$1.actionPerformed(ActionEvent)"
"15","7","weka.gui.Main.ActionListener$1.actionPerformed(ActionEvent)"
"489","16","weka.gui.Main.initGUI()"
"22","5","weka.gui.Main.showWindow(Container)"
"19","5","weka.gui.Main.getWindow(String)"
"13","5","weka.gui.Main.minimizeWindows()"
"13","5","weka.gui.Main.restoreWindows()"
"8","10","weka.gui.beans.Join.eventGeneratable(String)"
"100","37","weka.gui.beans.Join.generateMergedHeader()"
"23","11","weka.gui.beans.Join.generateMergedInstance(InstanceHolder,InstanceHolder)"
"68","46","weka.gui.beans.Join.acceptInstance(InstanceEvent)"
"14","8","weka.gui.beans.Join.addToFirstBuffer(Instance)"
"14","8","weka.gui.beans.Join.addToSecondBuffer(Instance)"
"22","5","weka.gui.beans.Join.clearBuffers()"
"28","16","weka.gui.beans.Join.processBuffers()"
"31","23","weka.gui.beans.Join.compare(Instance,Instance,InstanceHolder,InstanceHolder)"
"45","24","weka.gui.beans.Join.acceptDataSet(DataSetEvent)"
"20","9","weka.gui.beans.Join.stop()"
"21","23","weka.gui.beans.Join.connectionAllowed(String)"
"16","9","weka.gui.beans.Join.connectionNotification(String,Object)"
"16","9","weka.gui.beans.Join.disconnectionNotification(String,Object)"
"10","11","weka.gui.beans.Join.getStructure(String)"
"129","36","weka.gui.beans.IncrementalClassifierEvaluator.acceptClassifier(IncrementalClassifierEvent)"
"7","6","weka.gui.beans.IncrementalClassifierEvaluator.eventGeneratable(String)"
"12","7","weka.gui.beans.ImageViewer.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"39","9","weka.gui.beans.WekaOffscreenChartRenderer.renderXYLineChart(int,int,Instances,String,String,String)"
"59","19","weka.gui.beans.WekaOffscreenChartRenderer.renderXYScatterPlot(int,int,Instances,String,String,String)"
"23","5","weka.gui.beans.WekaOffscreenChartRenderer.renderHistogram(int,int,Instances,String,String)"
"35","10","weka.gui.beans.AttributeSummarizer.setUpFinal()"
"31","5","weka.gui.beans.AttributeSummarizer.makePanel()"
"25","7","weka.gui.beans.AttributeSummarizer.performRequest(String)"
"51","20","weka.gui.beans.AttributeSummarizer.renderOffscreenImage(DataSetEvent)"
"75","35","weka.gui.beans.BeansProperties.loadProperties()"
"11","7","weka.gui.beans.StripChart.Thread$1.run()"
"61","12","weka.gui.beans.StripChart.updateChart(temp[])"
"23","7","weka.gui.beans.StripChart.acceptInstance(InstanceEvent)"
"22","7","weka.gui.beans.StripChart.acceptDataPoint(ChartEvent)"
"20","7","weka.gui.beans.StripChart.acceptDataPoint(m_xCount[])"
"15","5","weka.gui.beans.LogPanel.JTable$1.prepareRenderer(TableCellRenderer,int,int)"
"9","6","weka.gui.beans.LogPanel.Runnable$1.run()"
"103","38","weka.gui.beans.LogPanel.statusMessage(String)"
"15","21","weka.gui.beans.Appender.eventGeneratable(String)"
"114","35","weka.gui.beans.Appender.acceptInstance(InstanceEvent)"
"58","15","weka.gui.beans.Appender.acceptDataSet(DataSetEvent)"
"25","8","weka.gui.beans.Appender.makeOutputInstance(Instances,Instance)"
"47","17","weka.gui.beans.Appender.makeOutputHeader()"
"6","5","weka.gui.beans.Appender.stop()"
"10","14","weka.gui.beans.Appender.connectionAllowed(String)"
"15","8","weka.gui.beans.BeanInstance.removeAllBeansFromContainer(JComponent,Integer)"
"15","8","weka.gui.beans.BeanInstance.addAllBeansToContainer(JComponent,Integer)"
"14","6","weka.gui.beans.BeanInstance.setBeanInstances(Object,JComponent,Integer)"
"42","14","weka.gui.beans.BeanInstance.paintLabels(Graphics,Integer)"
"13","6","weka.gui.beans.BeanInstance.getStartPoints(Integer)"
"16","7","weka.gui.beans.BeanInstance.findInstance(String,Integer)"
"15","7","weka.gui.beans.BeanInstance.findInstance(Point,Integer)"
"47","13","weka.gui.beans.BeanInstance.findInstances(Rectangle,Integer)"
"15","7","weka.gui.beans.BeanInstance.removeBean(JComponent,Integer)"
"12","7","weka.gui.beans.BeanInstance.appendBeans(JComponent,Object,int)"
"24","9","weka.gui.beans.BeanInstance.addBean(JComponent,Integer)"
"40","5","weka.gui.beans.TextViewer.visualize(String,int,int)"
"18","5","weka.gui.beans.TextViewer.acceptText(TextEvent)"
"17","7","weka.gui.beans.SerializedModelSaverCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"193","6","weka.gui.beans.SerializedModelSaverCustomizer.setUpFile()"
"14","6","weka.gui.beans.DataVisualizerCustomizer.setupRendererOptsTipText(JLabel)"
"8","7","weka.gui.beans.ClassValuePicker.getStructure(String)"
"14","6","weka.gui.beans.ClassValuePicker.acceptDataSet(DataSetEvent)"
"62","32","weka.gui.beans.ClassValuePicker.assignClassValue(Instances)"
"15","9","weka.gui.beans.ClassValuePicker.eventGeneratable(String)"
"12","5","weka.gui.beans.SorterCustomizer.ListSelectionListener$1.valueChanged(ListSelectionEvent)"
"21","13","weka.gui.beans.SorterCustomizer.closingOK()"
"22","11","weka.gui.beans.SorterCustomizer.initialize()"
"96","24","weka.gui.beans.Loader.LoadThread.run()"
"15","5","weka.gui.beans.Loader.setLoader(weka.core.converters.Loader)"
"16","8","weka.gui.beans.Loader.newStructure(boolean)"
"12","11","weka.gui.beans.Loader.getStructure(String)"
"8","5","weka.gui.beans.Loader.notifyStructureAvailable(Instances)"
"16","8","weka.gui.beans.Loader.getStartMessage()"
"7","5","weka.gui.beans.Loader.block(boolean)"
"12","11","weka.gui.beans.Loader.eventGeneratable(String)"
"8","7","weka.gui.beans.Loader.addDataSourceListener(DataSourceListener)"
"9","7","weka.gui.beans.Loader.addInstanceListener(InstanceListener)"
"21","9","weka.gui.beans.FlowRunner.waitUntilFinished()"
"8","6","weka.gui.beans.FlowRunner.load(String)"
"12","5","weka.gui.beans.FlowRunner.loadBinary(String)"
"15","5","weka.gui.beans.FlowRunner.loadXML(String)"
"82","34","weka.gui.beans.FlowRunner.run()"
"22","5","weka.gui.beans.FlowRunner.main(String[])"
"15","5","weka.gui.beans.SubstringLabelerCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"13","5","weka.gui.beans.SubstringLabelerCustomizer.initialize()"
"11","5","weka.gui.beans.ClassifierCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"29","8","weka.gui.beans.ClassifierCustomizer.checkOnClassifierType()"
"18","6","weka.gui.beans.MetaBean.getBeans(Object,int)"
"19","7","weka.gui.beans.MetaBean.getBeanInfos(Object,int)"
"7","5","weka.gui.beans.MetaBean.eventGeneratable(String)"
"10","6","weka.gui.beans.MetaBean.connectionAllowed(EventSetDescriptor)"
"58","23","weka.gui.beans.MetaBean.start()"
"42","12","weka.gui.beans.MetaBean.enumerateRequests()"
"19","10","weka.gui.beans.MetaBean.performRequest(String)"
"22","8","weka.gui.beans.Saver.SaveBatchThread.run()"
"16","5","weka.gui.beans.Saver.setSaverTemplate(weka.core.converters.Saver)"
"18","5","weka.gui.beans.Saver.sanitizeFilename(String)"
"18","9","weka.gui.beans.Saver.acceptDataSet(DataSetEvent)"
"18","7","weka.gui.beans.Saver.acceptDataSet(ThresholdDataEvent)"
"23","9","weka.gui.beans.Saver.acceptTestSet(TestSetEvent)"
"23","9","weka.gui.beans.Saver.acceptTrainingSet(TrainingSetEvent)"
"54","17","weka.gui.beans.Saver.acceptInstance(InstanceEvent)"
"23","5","weka.gui.beans.ScatterPlotMatrix.performRequest(String)"
"9","9","weka.gui.beans.TrainTestSplitMaker.getUpstreamStructure()"
"10","12","weka.gui.beans.TrainTestSplitMaker.getStructure(String)"
"17","5","weka.gui.beans.TrainTestSplitMaker.connectionNotification(String,Object)"
"32","8","weka.gui.beans.TrainTestSplitMaker.Thread$1.run()"
"9","9","weka.gui.beans.TrainTestSplitMaker.eventGeneratable(String)"
"37","13","weka.gui.beans.ClassAssignerCustomizer.setUpColumnSelection(Instances)"
"9","9","weka.gui.beans.CrossValidationFoldMaker.getUpstreamStructure()"
"10","12","weka.gui.beans.CrossValidationFoldMaker.getStructure(String)"
"17","5","weka.gui.beans.CrossValidationFoldMaker.connectionNotification(String,Object)"
"55","21","weka.gui.beans.CrossValidationFoldMaker.Thread$1.run()"
"7","5","weka.gui.beans.CrossValidationFoldMaker.block(boolean)"
"9","9","weka.gui.beans.CrossValidationFoldMaker.eventGeneratable(String)"
"10","13","weka.gui.beans.ClassAssigner.getUpstreamStructure()"
"18","25","weka.gui.beans.ClassAssigner.getStructure(String)"
"21","10","weka.gui.beans.ClassAssigner.assignClass(Instances)"
"8","14","weka.gui.beans.ClassAssigner.connectionAllowed(String)"
"14","6","weka.gui.beans.ClassAssigner.connectionNotification(String,Object)"
"14","9","weka.gui.beans.ClassAssigner.disconnectionNotification(String,Object)"
"9","9","weka.gui.beans.ClassAssigner.stop()"
"40","27","weka.gui.beans.ClassAssigner.eventGeneratable(String)"
"15","5","weka.gui.beans.xml.XMLBeans.addBeanInstances(Object)"
"28","5","weka.gui.beans.xml.XMLBeans.readPreProcess(Document)"
"20","6","weka.gui.beans.xml.XMLBeans.createBeanConnection(int,int,String,boolean)"
"34","11","weka.gui.beans.xml.XMLBeans.rebuildBeanConnections(Vector,Object)"
"32","6","weka.gui.beans.xml.XMLBeans.readColor(Element)"
"28","5","weka.gui.beans.xml.XMLBeans.readDimension(Element)"
"32","6","weka.gui.beans.xml.XMLBeans.readFont(Element)"
"28","5","weka.gui.beans.xml.XMLBeans.readPoint(Element)"
"21","5","weka.gui.beans.xml.XMLBeans.writeBeanInstance(Element,Object,String)"
"59","15","weka.gui.beans.xml.XMLBeans.readBeanInstance(Element)"
"27","6","weka.gui.beans.xml.XMLBeans.writeBeanConnection(Element,Object,String)"
"44","9","weka.gui.beans.xml.XMLBeans.readBeanConnection(Element)"
"36","14","weka.gui.beans.xml.XMLBeans.writeLoader(Element,Object,String)"
"42","12","weka.gui.beans.xml.XMLBeans.readLoader(Element)"
"36","7","weka.gui.beans.xml.XMLBeans.writeSaver(Element,Object,String)"
"45","13","weka.gui.beans.xml.XMLBeans.readSaver(Element)"
"32","7","weka.gui.beans.xml.XMLBeans.readBeanVisual(Element)"
"49","10","weka.gui.beans.xml.XMLBeans.readMetaBean(Element)"
"15","9","weka.gui.beans.ModelPerformanceChart.setupOffscreenRenderer()"
"69","24","weka.gui.beans.ModelPerformanceChart.acceptDataSet(ThresholdDataEvent)"
"101","26","weka.gui.beans.ModelPerformanceChart.acceptDataSet(VisualizableErrorEvent)"
"10","5","weka.gui.beans.ModelPerformanceChart.processHeadlessEvents(EventObject)"
"29","6","weka.gui.beans.ModelPerformanceChart.performRequest(String)"
"10","7","weka.gui.beans.ModelPerformanceChart.eventGeneratable(String)"
"43","14","weka.gui.beans.ClustererPerformanceEvaluator.Thread$1.run()"
"54","5","weka.gui.beans.ClustererPerformanceEvaluator.acceptClusterer(BatchClustererEvent)"
"7","5","weka.gui.beans.ClustererPerformanceEvaluator.block(boolean)"
"7","6","weka.gui.beans.ClustererPerformanceEvaluator.eventGeneratable(String)"
"11","5","weka.gui.beans.ClassifierPerformanceEvaluatorCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"23","7","weka.gui.beans.InstanceStreamToBatchMaker.acceptInstance(InstanceEvent)"
"9","8","weka.gui.beans.InstanceStreamToBatchMaker.eventGeneratable(String)"
"10","5","weka.gui.beans.SaverCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"17","5","weka.gui.beans.SaverCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"170","9","weka.gui.beans.SaverCustomizer.setUpFile()"
"33","12","weka.gui.beans.SerializedModelSaver.acceptClusterer(BatchClustererEvent)"
"35","13","weka.gui.beans.SerializedModelSaver.acceptClassifier(IncrementalClassifierEvent)"
"36","13","weka.gui.beans.SerializedModelSaver.acceptClassifier(BatchClassifierEvent)"
"30","9","weka.gui.beans.SerializedModelSaver.saveModel(String,Instances,Object)"
"9","7","weka.gui.beans.SerializedModelSaver.validateFileFormat(Tag)"
"15","5","weka.gui.beans.SubstringReplacerCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"13","5","weka.gui.beans.SubstringReplacerCustomizer.initialize()"
"9","8","weka.gui.beans.SubstringReplacer.eventGeneratable(String)"
"24","7","weka.gui.beans.SubstringReplacer.acceptInstance(InstanceEvent)"
"6","5","weka.gui.beans.SubstringReplacer.connectionAllowed(String)"
"14","5","weka.gui.beans.BeanVisual.getClosestConnectorPoint(Point)"
"19","9","weka.gui.beans.BeanVisual.getConnectorPoint(int)"
"8","8","weka.gui.beans.TestSetMaker.getStructure(String)"
"13","5","weka.gui.beans.TestSetMaker.notifyTestSetProduced(TestSetEvent)"
"7","6","weka.gui.beans.TestSetMaker.eventGeneratable(String)"
"29","11","weka.gui.beans.ImageSaver.acceptImage(ImageEvent)"
"45","13","weka.gui.beans.Associator.Thread$1.run()"
"61","6","weka.gui.beans.Associator.acceptDataSet(DataSetEvent)"
"14","8","weka.gui.beans.Associator.buildAssociations(Instances)"
"7","5","weka.gui.beans.Associator.block(boolean)"
"19","6","weka.gui.beans.Associator.getStructure(String)"
"20","23","weka.gui.beans.Associator.eventGeneratable(String)"
"12","5","weka.gui.beans.FlowByExpressionCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"23","8","weka.gui.beans.FlowByExpressionCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"14","6","weka.gui.beans.FlowByExpressionCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"18","7","weka.gui.beans.FlowByExpressionCustomizer.KeyAdapter$1.keyReleased(KeyEvent)"
"14","6","weka.gui.beans.FlowByExpressionCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"19","8","weka.gui.beans.FlowByExpressionCustomizer.KeyAdapter$1.keyReleased(KeyEvent)"
"199","12","weka.gui.beans.FlowByExpressionCustomizer.setup()"
"10","6","weka.gui.beans.FlowByExpressionCustomizer.closingOK()"
"14","6","weka.gui.beans.ModelPerformanceChartCustomizer.setupRendererOptsTipText(JLabel)"
"67","26","weka.gui.beans.PredictionAppender.acceptClassifier(IncrementalClassifierEvent)"
"103","45","weka.gui.beans.PredictionAppender.acceptClassifier(BatchClassifierEvent)"
"59","28","weka.gui.beans.PredictionAppender.acceptClusterer(BatchClustererEvent)"
"14","15","weka.gui.beans.PredictionAppender.eventGeneratable(String)"
"16","7","weka.gui.beans.DataVisualizer.acceptDataSet(DataSetEvent)"
"54","21","weka.gui.beans.DataVisualizer.renderOffscreenImage(DataSetEvent)"
"37","8","weka.gui.beans.DataVisualizer.performRequest(String)"
"15","9","weka.gui.beans.DataVisualizer.setupOffscreenRenderer()"
"10","8","weka.gui.beans.DataVisualizer.eventGeneratable(String)"
"32","14","weka.gui.beans.ClassValuePickerCustomizer.setUpValueSelection(Instances)"
"8","8","weka.gui.beans.TrainingSetMaker.getStructure(String)"
"14","5","weka.gui.beans.TrainingSetMaker.notifyTrainingSetProduced(TrainingSetEvent)"
"7","6","weka.gui.beans.TrainingSetMaker.eventGeneratable(String)"
"30","12","weka.gui.beans.SubstringLabelerRules.makeOutputStructure()"
"48","17","weka.gui.beans.SubstringLabelerRules.makeOutputInstance(Instance,boolean)"
"12","8","weka.gui.beans.SubstringLabelerRules.SubstringLabelerMatchRule.parseFromInternal(String)"
"54","16","weka.gui.beans.SubstringLabelerRules.SubstringLabelerMatchRule.init(Environment,Instances)"
"8","5","weka.gui.beans.SubstringLabelerRules.SubstringLabelerMatchRule.apply(Instance)"
"14","7","weka.gui.beans.SubstringLabelerRules.SubstringLabelerMatchRule.apply(String)"
"9","5","weka.gui.beans.SubstringLabelerRules.SubstringLabelerMatchRule.toString()"
"29","8","weka.gui.beans.CostBenefitAnalysis.AnalysisPanel.findMaxMinCB(boolean)"
"38","7","weka.gui.beans.CostBenefitAnalysis.AnalysisPanel.updateCBRandomGainInfo(int)"
"47","13","weka.gui.beans.CostBenefitAnalysis.AnalysisPanel.findIndexForValue(double,Instances,int)"
"50","16","weka.gui.beans.CostBenefitAnalysis.AnalysisPanel.constructCostBenefitData()"
"21","5","weka.gui.beans.CostBenefitAnalysis.performRequest(String)"
"8","7","weka.gui.beans.FlowByExpression.BracketNode.evaluate(Instance,boolean)"
"20","9","weka.gui.beans.FlowByExpression.BracketNode.toString(StringBuffer,boolean)"
"24","10","weka.gui.beans.FlowByExpression.BracketNode.parseFromInternal(String)"
"10","11","weka.gui.beans.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"8","8","weka.gui.beans.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"8","8","weka.gui.beans.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"15","11","weka.gui.beans.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"15","11","weka.gui.beans.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"15","11","weka.gui.beans.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"10","7","weka.gui.beans.FlowByExpression.ExpressionClause.ExpressionType.evaluate(Instance,int,String,double,Pattern,boolean,int)"
"52","26","weka.gui.beans.FlowByExpression.ExpressionClause.init(Instances,Environment)"
"5","5","weka.gui.beans.FlowByExpression.ExpressionClause.evaluate(Instance,boolean)"
"25","11","weka.gui.beans.FlowByExpression.ExpressionClause.toString(StringBuffer,boolean)"
"27","11","weka.gui.beans.FlowByExpression.ExpressionClause.parseFromInternal(String)"
"14","12","weka.gui.beans.FlowByExpression.addDataSourceListener(DataSourceListener)"
"14","12","weka.gui.beans.FlowByExpression.addInstanceListener(InstanceListener)"
"8","9","weka.gui.beans.FlowByExpression.eventGeneratable(String)"
"25","16","weka.gui.beans.FlowByExpression.init(Instances)"
"30","13","weka.gui.beans.FlowByExpression.acceptDataSet(DataSetEvent)"
"54","21","weka.gui.beans.FlowByExpression.acceptInstance(InstanceEvent)"
"10","13","weka.gui.beans.FlowByExpression.getStructure(String)"
"69","17","weka.gui.beans.KnowledgeFlowApp.init()"
"16","10","weka.gui.beans.KnowledgeFlowApp.InvisibleNode.getChildAt(int,boolean)"
"12","7","weka.gui.beans.KnowledgeFlowApp.InvisibleNode.getChildCount(boolean)"
"15","6","weka.gui.beans.KnowledgeFlowApp.BeanLayout.paintComponent(Graphics)"
"33","15","weka.gui.beans.KnowledgeFlowApp.MainKFPerspective.setActiveTab(int)"
"22","13","weka.gui.beans.KnowledgeFlowApp.MainKFPerspective.setExecuting(int,boolean)"
"13","8","weka.gui.beans.KnowledgeFlowApp.MainKFPerspective.setSelectedBeans(Object)"
"17","9","weka.gui.beans.KnowledgeFlowApp.MainKFPerspective.setSelectedBeans(int,Object)"
"8","5","weka.gui.beans.KnowledgeFlowApp.MainKFPerspective.ActionListener$1.actionPerformed(ActionEvent)"
"17","8","weka.gui.beans.KnowledgeFlowApp.MainKFPerspective.ActionListener$1.actionPerformed(ActionEvent)"
"22","6","weka.gui.beans.KnowledgeFlowApp.MainKFPerspective.AbstractAction$1.actionPerformed(ActionEvent)"
"10","6","weka.gui.beans.KnowledgeFlowApp.MainKFPerspective.JTree$1.getToolTipText(MouseEvent)"
"29","12","weka.gui.beans.KnowledgeFlowApp.MainKFPerspective.MouseAdapter$1.mouseClicked(MouseEvent)"
"627","61","weka.gui.beans.KnowledgeFlowApp.MainKFPerspective.setUpToolsAndJTree()"
"26","12","weka.gui.beans.KnowledgeFlowApp.MainKFPerspective.KeyAdapter$1.keyReleased(KeyEvent)"
"27","9","weka.gui.beans.KnowledgeFlowApp.MainKFPerspective.removeTab(int)"
"95","18","weka.gui.beans.KnowledgeFlowApp.KnowledgeFlowApp(boolean)"
"18","6","weka.gui.beans.KnowledgeFlowApp.ActionListener$1.actionPerformed(ActionEvent)"
"65","9","weka.gui.beans.KnowledgeFlowApp.popupPerspectiveConfigurer()"
"34","6","weka.gui.beans.KnowledgeFlowApp.setupUserPerspectives()"
"28","7","weka.gui.beans.KnowledgeFlowApp.MouseAdapter$1.mousePressed(MouseEvent)"
"22","5","weka.gui.beans.KnowledgeFlowApp.MouseAdapter$1.mouseReleased(MouseEvent)"
"102","35","weka.gui.beans.KnowledgeFlowApp.MouseAdapter$1.mouseClicked(MouseEvent)"
"24","7","weka.gui.beans.KnowledgeFlowApp.MouseMotionAdapter$1.mouseDragged(MouseEvent)"
"31","9","weka.gui.beans.KnowledgeFlowApp.RunThread.run()"
"34","14","weka.gui.beans.KnowledgeFlowApp.processPackage(String,weka.gui.HierarchyPropertyParser,DefaultMutableTreeNode,DefaultMutableTreeNode)"
"28","14","weka.gui.beans.KnowledgeFlowApp.instantiateBean(boolean,String,String)"
"229","50","weka.gui.beans.KnowledgeFlowApp.doPopup(Point,BeanInstance,int,int)"
"37","11","weka.gui.beans.KnowledgeFlowApp.Thread$1.run()"
"46","5","weka.gui.beans.KnowledgeFlowApp.insertUserOrStartableMenuItem(JComponent,boolean,String,PopupMenu)"
"22","5","weka.gui.beans.KnowledgeFlowApp.popupCustomizer(Class,JComponent)"
"31","7","weka.gui.beans.KnowledgeFlowApp.addToUserTreeNode(BeanInstance,boolean)"
"14","6","weka.gui.beans.KnowledgeFlowApp.copyToClipboard()"
"46","13","weka.gui.beans.KnowledgeFlowApp.pasteFromBuffer(int,int,StringBuffer,boolean)"
"18","11","weka.gui.beans.KnowledgeFlowApp.groupable(Object,Object,Object)"
"98","13","weka.gui.beans.KnowledgeFlowApp.rightClickCanvasPopup(int,int)"
"46","15","weka.gui.beans.KnowledgeFlowApp.connectComponents(EventSetDescriptor,BeanInstance,int,int)"
"24","12","weka.gui.beans.KnowledgeFlowApp.checkForDuplicateName(BeanInstance)"
"24","8","weka.gui.beans.KnowledgeFlowApp.addComponent(BeanInstance,boolean)"
"51","14","weka.gui.beans.KnowledgeFlowApp.groupSubFlow(Object,Object,Object)"
"31","11","weka.gui.beans.KnowledgeFlowApp.loadLayout()"
"53","12","weka.gui.beans.KnowledgeFlowApp.loadLayout(File,boolean,boolean)"
"26","7","weka.gui.beans.KnowledgeFlowApp.integrateFlow(Object,BeanConnection,boolean,boolean)"
"56","12","weka.gui.beans.KnowledgeFlowApp.saveLayout(File,int,boolean)"
"30","13","weka.gui.beans.KnowledgeFlowApp.saveLayout(int,boolean)"
"23","8","weka.gui.beans.KnowledgeFlowApp.saveLayout(OutputStream,int)"
"27","7","weka.gui.beans.KnowledgeFlowApp.loadUserComponents()"
"33","8","weka.gui.beans.KnowledgeFlowApp.java.awt.event.WindowAdapter$1.windowClosing(java.awt.event.WindowEvent)"
"16","9","weka.gui.beans.KnowledgeFlowApp.createSingleton(String[])"
"15","6","weka.gui.beans.KnowledgeFlowApp.loadInitialLayout(String)"
"30","5","weka.gui.beans.KnowledgeFlowApp.main(String[])"
"32","11","weka.gui.beans.TextSaver.acceptText(TextEvent)"
"14","6","weka.gui.beans.AttributeSummarizerCustomizer.setupRendererOptsTipText(JLabel)"
"10","5","weka.gui.beans.LoaderCustomizer.ActionListener$1.actionPerformed(ActionEvent)"
"23","12","weka.gui.beans.LoaderCustomizer.resetAndUpdateDatabaseLoaderIfChanged()"
"92","9","weka.gui.beans.LoaderCustomizer.setUpFile()"
"12","7","weka.gui.beans.AbstractOffscreenChartRenderer.getOption(String,String)"
"18","14","weka.gui.beans.AbstractOffscreenChartRenderer.getIndexOfAttribute(Instances,String)"
"12","7","weka.gui.beans.BeanConnection.previousLink(BeanInstance,BeanInstance,int,Integer)"
"13","7","weka.gui.beans.BeanConnection.checkTargetConstraint(BeanInstance,Object,Integer)"
"22","8","weka.gui.beans.BeanConnection.associatedConnections(Object,Integer)"
"14","7","weka.gui.beans.BeanConnection.checkForTarget(BeanInstance,Object,Integer)"
"17","8","weka.gui.beans.BeanConnection.checkSourceConstraint(BeanInstance,Object,Integer)"
"12","7","weka.gui.beans.BeanConnection.outputs(Object,Integer)"
"46","14","weka.gui.beans.BeanConnection.paintConnections(Graphics,Integer)"
"29","12","weka.gui.beans.BeanConnection.getClosestConnections(Point,int,Integer)"
"34","10","weka.gui.beans.BeanConnection.removeConnections(BeanInstance,Integer)"
"24","5","weka.gui.beans.BeanConnection.doMetaConnection(BeanInstance,BeanInstance,EventSetDescriptor,JComponent,int)"
"23","5","weka.gui.beans.BeanConnection.BeanConnection(BeanInstance,BeanInstance,EventSetDescriptor,Integer)"
"13","6","weka.gui.beans.BeanConnection.getSourceEventSetDescriptor()"
"42","5","weka.gui.beans.ShadowBorder.paintBorder(Component,Graphics,int,int,int,int)"
"16","8","weka.gui.beans.SubstringReplacerRules.makeOutputInstance(Instance)"
"12","8","weka.gui.beans.SubstringReplacerRules.SubstringReplacerMatchRule.parseFromInternal(String)"
"54","16","weka.gui.beans.SubstringReplacerRules.SubstringReplacerMatchRule.init(Environment,Instances)"
"12","5","weka.gui.beans.SubstringReplacerRules.SubstringReplacerMatchRule.apply(String)"
"138","9","weka.gui.beans.JoinCustomizer.setup()"
"18","8","weka.gui.beans.JoinCustomizer.initialize()"
"12","5","weka.gui.beans.JoinCustomizer.closingOK()"
"16","7","weka.gui.beans.Sorter.SortRule.init(Environment,Instances)"
"22","14","weka.gui.beans.Sorter.SortRule.compare(InstanceHolder,InstanceHolder)"
"24","21","weka.gui.beans.Sorter.eventGeneratable(String)"
"44","17","weka.gui.beans.Sorter.acceptInstance(InstanceEvent)"
"145","53","weka.gui.beans.Sorter.Thread$1.run()"
"37","13","weka.gui.beans.Sorter.sortBuffer(boolean)"
"15","7","weka.gui.beans.Sorter.init(Instances)"
"31","11","weka.gui.beans.Sorter.acceptDataSet(DataSetEvent)"
"6","8","weka.gui.beans.Sorter.connectionAllowed(String)"
"10","11","weka.gui.beans.Sorter.getStructure(String)"
"21","9","weka.gui.beans.Classifier.setClassifierTemplate(weka.classifiers.Classifier)"
"6","5","weka.gui.beans.Classifier.hasIncomingStreamInstances()"
"6","6","weka.gui.beans.Classifier.hasIncomingBatchInstances()"
"116","61","weka.gui.beans.Classifier.handleIncrementalEvent()"
"72","23","weka.gui.beans.Classifier.TrainingTask.execute()"
"36","12","weka.gui.beans.Classifier.acceptTrainingSet(TrainingSetEvent)"
"7","6","weka.gui.beans.Classifier.allMissingClass(Instances)"
"134","69","weka.gui.beans.Classifier.acceptTestSet(TestSetEvent)"
"34","13","weka.gui.beans.Classifier.checkCompletedRun(int,int,int)"
"22","8","weka.gui.beans.Classifier.notifyBatchClassifierListeners(BatchClassifierEvent)"
"9","5","weka.gui.beans.Classifier.notifyIncrementalClassifierListeners(IncrementalClassifierEvent)"
"24","13","weka.gui.beans.Classifier.connectionNotification(String,Object)"
"15","6","weka.gui.beans.Classifier.stop()"
"23","11","weka.gui.beans.Classifier.loadModel()"
"25","9","weka.gui.beans.Classifier.loadFromFile(File)"
"39","19","weka.gui.beans.Classifier.saveModel()"
"9","11","weka.gui.beans.Classifier.enumerateRequests()"
"11","5","weka.gui.beans.Classifier.performRequest(String)"
"4","7","weka.gui.beans.Classifier.generatableEvent(String)"
"40","39","weka.gui.beans.Classifier.eventGeneratable(String)"
"4","6","weka.gui.beans.Classifier.isBusy()"
"44","14","weka.gui.beans.ClassifierPerformanceEvaluator.EvaluationTask.execute()"
"6","5","weka.gui.beans.ClassifierPerformanceEvaluator.AggregateableClassifierErrorsPlotInstances.finishUp()"
"85","26","weka.gui.beans.ClassifierPerformanceEvaluator.aggregateEvalTask(Evaluation,Classifier,Instances,ClassifierErrorsPlotInstances,int,int,String)"
"54","15","weka.gui.beans.ClassifierPerformanceEvaluator.acceptClassifier(BatchClassifierEvent)"
"4","6","weka.gui.beans.ClassifierPerformanceEvaluator.isBusy()"
"13","5","weka.gui.beans.ClassifierPerformanceEvaluator.stop()"
"7","6","weka.gui.beans.ClassifierPerformanceEvaluator.eventGeneratable(String)"
"6","7","weka.gui.beans.Clusterer.hasIncomingBatchInstances()"
"44","13","weka.gui.beans.Clusterer.Thread$1.run()"
"62","6","weka.gui.beans.Clusterer.acceptTrainingSet(TrainingSetEvent)"
"16","6","weka.gui.beans.Clusterer.acceptTestSet(TestSetEvent)"
"7","5","weka.gui.beans.Clusterer.block(boolean)"
"24","8","weka.gui.beans.Clusterer.saveModel()"
"20","7","weka.gui.beans.Clusterer.loadModel()"
"9","5","weka.gui.beans.Clusterer.enumerateRequests()"
"11","5","weka.gui.beans.Clusterer.performRequest(String)"
"29","27","weka.gui.beans.Clusterer.eventGeneratable(String)"
"24","21","weka.gui.beans.SubstringLabeler.eventGeneratable(String)"
"6","8","weka.gui.beans.SubstringLabeler.connectionAllowed(String)"
"37","14","weka.gui.beans.SubstringLabeler.acceptInstance(InstanceEvent)"
"28","9","weka.gui.beans.SubstringLabeler.acceptDataSet(DataSetEvent)"
"21","10","weka.gui.beans.Filter.setFilter(weka.filters.Filter)"
"127","54","weka.gui.beans.Filter.acceptInstance(InstanceEvent)"
"35","9","weka.gui.beans.Filter.Thread$1.run()"
"60","12","weka.gui.beans.Filter.processTrainingOrDataSourceEvents(EventObject)"
"30","8","weka.gui.beans.Filter.Thread$1.run()"
"45","7","weka.gui.beans.Filter.acceptTestSet(TestSetEvent)"
"10","5","weka.gui.beans.Filter.notifyDataOrTrainingListeners(EventObject)"
"12","21","weka.gui.beans.Filter.connectionAllowed(String)"
"7","5","weka.gui.beans.Filter.block(boolean)"
"13","12","weka.gui.beans.Filter.eventGeneratable(String)"
"5","6","weka.gui.treevisualizer.TreeDisplayEvent.TreeDisplayEvent(int,String)"
"30","12","weka.gui.treevisualizer.TreeVisualizer.getScreenFit(Dimension,Dimension)"
"83","23","weka.gui.treevisualizer.TreeVisualizer.actionPerformed(ActionEvent)"
"42","15","weka.gui.treevisualizer.TreeVisualizer.itemStateChanged(ItemEvent)"
"15","10","weka.gui.treevisualizer.TreeVisualizer.mouseClicked(MouseEvent)"
"35","17","weka.gui.treevisualizer.TreeVisualizer.mousePressed(MouseEvent)"
"64","24","weka.gui.treevisualizer.TreeVisualizer.mouseReleased(MouseEvent)"
"4","6","weka.gui.treevisualizer.TreeVisualizer.mouseInBounds(MouseEvent)"
"24","5","weka.gui.treevisualizer.TreeVisualizer.mouseDragged(MouseEvent)"
"60","23","weka.gui.treevisualizer.TreeVisualizer.painter(Graphics)"
"32","6","weka.gui.treevisualizer.TreeVisualizer.drawLine(int,Graphics)"
"17","5","weka.gui.treevisualizer.TreeVisualizer.drawText(int,int,int,boolean,Graphics)"
"61","18","weka.gui.treevisualizer.TreeVisualizer.autoScale()"
"21","5","weka.gui.treevisualizer.TreeVisualizer.changeFontSize(int)"
"29","6","weka.gui.treevisualizer.TreeVisualizer.arrayFill(Node,NodeInfo[],EdgeInfo[])"
"16","5","weka.gui.treevisualizer.PlaceNode2.xPlacer(int)"
"19","8","weka.gui.treevisualizer.PlaceNode2.scaleByMax()"
"60","14","weka.gui.treevisualizer.PlaceNode2.untangle2()"
"11","5","weka.gui.treevisualizer.PlaceNode2.moveSubtree(int,double)"
"11","5","weka.gui.treevisualizer.PlaceNode2.overlap(int)"
"13","6","weka.gui.treevisualizer.PlaceNode2.groupFind(Node,int)"
"127","40","weka.gui.treevisualizer.TreeBuild.generateStructures()"
"11","8","weka.gui.treevisualizer.TreeBuild.getShape(String)"
"12","6","weka.gui.treevisualizer.TreeBuild.stmtList()"
"24","7","weka.gui.treevisualizer.TreeBuild.attrStmt()"
"27","9","weka.gui.treevisualizer.TreeBuild.nodeId(String,int)"
"95","30","weka.gui.treevisualizer.TreeBuild.attrList(InfoObject)"
"6","7","weka.gui.LookAndFeel.KeyEventDispatcher$1.dispatchKeyEvent(KeyEvent)"
"20","5","weka.gui.LookAndFeel.setLookAndFeel(String)"
"25","5","weka.gui.LogWindow.LogWindow()"
"19","6","weka.gui.LogWindow.trim()"
"8","6","weka.gui.ExtensionFileFilter.accept(File)"
"21","6","weka.gui.PerspectiveManager.ActionListener$1.actionPerformed(ActionEvent)"
"58","6","weka.gui.PerspectiveManager.PerspectiveManager(GUIApplication,String[],String[])"
"12","5","weka.gui.PerspectiveManager.terminate()"
"38","8","weka.gui.PerspectiveManager.setupUserPerspectives()"
"31","12","weka.gui.PerspectiveManager.setActivePerspective(int)"
"30","14","weka.gui.PerspectiveManager.initPerspectivesCache(Settings)"
"15","5","weka.gui.PerspectiveManager.initVisiblePerspectives(Settings)"
"16","6","weka.gui.experiment.OutputFormatDialog.getData()"
"24","7","weka.gui.experiment.GeneratorPropertyIteratorPanel.actionPerformed(ActionEvent)"
"250","6","weka.gui.experiment.SimpleSetupPanel.SimpleSetupPanel()"
"15","6","weka.gui.experiment.SimpleSetupPanel.terminate()"
"129","27","weka.gui.experiment.SimpleSetupPanel.setExperiment(Experiment)"
"24","12","weka.gui.experiment.SimpleSetupPanel.openExperiment()"
"21","10","weka.gui.experiment.SimpleSetupPanel.saveExperiment()"
"51","18","weka.gui.experiment.SimpleSetupPanel.destinationTypeChanged()"
"30","13","weka.gui.experiment.SimpleSetupPanel.destinationAddressChanged()"
"52","9","weka.gui.experiment.SimpleSetupPanel.expTypeChanged()"
"25","13","weka.gui.experiment.SimpleSetupPanel.expParamChanged()"
"9","6","weka.gui.experiment.SimpleSetupPanel.numRepetitionsChanged()"
"17","7","weka.gui.experiment.HostListPanel.actionPerformed(ActionEvent)"
"10","5","weka.gui.experiment.SetupPanel.ActionListener$1.actionPerformed(ActionEvent)"
"12","5","weka.gui.experiment.SetupPanel.terminate()"
"22","10","weka.gui.experiment.SetupPanel.openExperiment()"
"21","10","weka.gui.experiment.SetupPanel.saveExperiment()"
"41","7","weka.gui.experiment.SetupPanel.main(String[])"
"73","15","weka.gui.experiment.RunPanel.ExperimentRunner.run()"
"21","8","weka.gui.experiment.RunPanel.actionPerformed(ActionEvent)"
"32","7","weka.gui.experiment.RunPanel.main(String[])"
"55","13","weka.gui.experiment.ResultsPanel.setInstancesFromDBaseQuery()"
"20","6","weka.gui.experiment.ResultsPanel.setInstancesFromExp(Experiment)"
"20","6","weka.gui.experiment.ResultsPanel.setInstancesFromFile(File)"
"23","6","weka.gui.experiment.ResultsPanel.determineColumnNames(String,String,Instances)"
"72","16","weka.gui.experiment.ResultsPanel.setInstances(Instances)"
"32","6","weka.gui.experiment.ResultsPanel.performTest()"
"16","5","weka.gui.experiment.ResultsPanel.setResultKeyFromDialog()"
"16","5","weka.gui.experiment.ResultsPanel.setDatasetKeyFromDialog()"
"21","7","weka.gui.experiment.ResultsPanel.setTester()"
"30","8","weka.gui.experiment.SetupModePanel.SetupModePanel()"
"13","5","weka.gui.experiment.SetupModePanel.switchTo(AbstractSetupPanel,Experiment)"
"12","5","weka.gui.experiment.DatasetListPanel.getFilesRecursively(File,File)"
"86","29","weka.gui.experiment.DatasetListPanel.actionPerformed(ActionEvent)"
"19","6","weka.gui.experiment.AlgorithmListPanel.MouseAdapter$1.ActionListener$1.actionPerformed(ActionEvent)"
"23","6","weka.gui.experiment.AlgorithmListPanel.MouseAdapter$1.ActionListener$1.actionPerformed(ActionEvent)"
"15","6","weka.gui.experiment.AlgorithmListPanel.MouseAdapter$1.ActionListener$1.actionPerformed(ActionEvent)"
"87","10","weka.gui.experiment.AlgorithmListPanel.MouseAdapter$1.mouseClicked(MouseEvent)"
"88","27","weka.gui.experiment.AlgorithmListPanel.actionPerformed(ActionEvent)"
"30","9","weka.gui.simplecli.Help.doExecute(String[])"
"31","12","weka.gui.simplecli.AbstractCommand.expandVars(String)"
"14","5","weka.gui.simplecli.Capabilities.doExecute(String[])"
"14","10","weka.gui.simplecli.Script.doExecute(String[])"
"20","9","weka.gui.simplecli.Set.doExecute(String[])"
"14","7","weka.gui.simplecli.Java.doExecute(String[])"
"16","8","weka.gui.simplecli.Exit.doExecute(String[])"
"18","5","weka.gui.hierarchyvisualizer.HierarchyVisualizer.Node.draw(Graphics)"
"41","28","weka.gui.hierarchyvisualizer.HierarchyVisualizer.nextNode(String,int)"
"54","18","weka.gui.hierarchyvisualizer.HierarchyVisualizer.parseNewick2(String)"
"371","96","weka.gui.PropertySheetPanel.setTarget(Object)"
"62","23","weka.gui.PropertySheetPanel.wasModified(PropertyChangeEvent)"
"48","17","weka.gui.graphvisualizer.DotParser.graph(StreamTokenizer)"
"16","7","weka.gui.graphvisualizer.DotParser.stmt(StreamTokenizer)"
"6","10","weka.gui.graphvisualizer.DotParser.nodeID(StreamTokenizer)"
"44","17","weka.gui.graphvisualizer.DotParser.nodeStmt(StreamTokenizer,int)"
"36","15","weka.gui.graphvisualizer.DotParser.edgeStmt(StreamTokenizer,int)"
"43","17","weka.gui.graphvisualizer.DotParser.edgeAttrib(StreamTokenizer,GraphEdge)"
"5","6","weka.gui.graphvisualizer.GraphEdge.equals(Object)"
"19","5","weka.gui.graphvisualizer.GraphVisualizer.ActionListener$1.actionPerformed(ActionEvent)"
"28","8","weka.gui.graphvisualizer.GraphVisualizer.ActionListener$1.actionPerformed(ActionEvent)"
"31","10","weka.gui.graphvisualizer.GraphVisualizer.ActionListener$1.actionPerformed(ActionEvent)"
"28","7","weka.gui.graphvisualizer.GraphVisualizer.ActionListener$1.actionPerformed(ActionEvent)"
"21","6","weka.gui.graphvisualizer.GraphVisualizer.ActionListener$1.actionPerformed(ActionEvent)"
"267","5","weka.gui.graphvisualizer.GraphVisualizer.GraphVisualizer()"
"12","5","weka.gui.graphvisualizer.GraphVisualizer.readBIF(String)"
"13","5","weka.gui.graphvisualizer.GraphVisualizer.readBIF(InputStream)"
"26","10","weka.gui.graphvisualizer.GraphVisualizer.GraphPanel.getToolTipText(MouseEvent)"
"55","18","weka.gui.graphvisualizer.GraphVisualizer.GraphPanel.paintComponent(Graphics)"
"37","6","weka.gui.graphvisualizer.GraphVisualizer.GraphPanel.drawArrow(Graphics,int,int,int,int)"
"88","32","weka.gui.graphvisualizer.GraphVisualizer.GraphPanel.highLight(GraphNode)"
"109","25","weka.gui.graphvisualizer.GraphVisualizer.GraphVisualizerMouseListener.mouseClicked(MouseEvent)"
"26","9","weka.gui.graphvisualizer.GraphVisualizer.GraphVisualizerMouseMotionListener.mouseMoved(MouseEvent)"
"11","5","weka.gui.graphvisualizer.HierarchicalBCEngine.removeLayoutCompleteEventListener(LayoutCompleteEventListener)"
"42","11","weka.gui.graphvisualizer.HierarchicalBCEngine.Thread$1.run()"
"51","20","weka.gui.graphvisualizer.HierarchicalBCEngine.makeProperHierarchy()"
"41","8","weka.gui.graphvisualizer.HierarchicalBCEngine.removeGaps(int[])"
"75","15","weka.gui.graphvisualizer.HierarchicalBCEngine.removeGapsWithEdgeConcentration(int[])"
"5","5","weka.gui.graphvisualizer.HierarchicalBCEngine.indexOfElementInLevel(int,int[])"
"75","26","weka.gui.graphvisualizer.HierarchicalBCEngine.crossings(int[][])"
"18","7","weka.gui.graphvisualizer.HierarchicalBCEngine.removeCycles2(int,int[])"
"14","9","weka.gui.graphvisualizer.HierarchicalBCEngine.assignLevels(int[],int,int,int)"
"55","21","weka.gui.graphvisualizer.HierarchicalBCEngine.minimizeCrossings(boolean,int[][])"
"23","7","weka.gui.graphvisualizer.HierarchicalBCEngine.phaseIID(int,int[][])"
"23","7","weka.gui.graphvisualizer.HierarchicalBCEngine.phaseIIU(int,int[][])"
"15","7","weka.gui.graphvisualizer.HierarchicalBCEngine.calcRowBC(int,int[][])"
"15","7","weka.gui.graphvisualizer.HierarchicalBCEngine.calcColBC(int,int[][])"
"24","8","weka.gui.graphvisualizer.HierarchicalBCEngine.printMatrices(int[][])"
"21","7","weka.gui.graphvisualizer.HierarchicalBCEngine.isort(int[],float[])"
"55","19","weka.gui.graphvisualizer.HierarchicalBCEngine.priorityLayout1()"
"66","26","weka.gui.graphvisualizer.HierarchicalBCEngine.priorityLayout2(int[],int[],int[],int[])"
"10","5","weka.gui.graphvisualizer.HierarchicalBCEngine.MyList.remove(MyListNode)"
"97","36","weka.gui.graphvisualizer.BIFParser.parse()"
"66","14","weka.gui.graphvisualizer.BIFParser.writeXMLBIF03(String,String,GraphNode,GraphEdge)"
"23","7","weka.gui.graphvisualizer.BIFParser.XMLNormalize(String)"
"16","9","weka.gui.CostMatrixEditor.CustomEditor.actionPerformed(ActionEvent)"
"43","8","weka.gui.EvaluationMetricSelectionDialog.init()"
"37","11","weka.gui.WrapLayout.layoutSize(Container,boolean)"
"47","17","weka.gui.GenericArrayEditor.CustomEditor.ActionListener$1.actionPerformed(ActionEvent)"
"81","21","weka.gui.GenericArrayEditor.CustomEditor.updateEditorType(Object)"
"14","6","weka.gui.SetInstancesPanel.setInstancesFromFile(File)"
"14","6","weka.gui.SetInstancesPanel.setInstancesFromURL(URL)"
"25","11","weka.gui.GenericObjectEditor.determineClasses()"
"15","8","weka.gui.GenericObjectEditor.GOETreeNode.initCapabilities()"
"12","6","weka.gui.GenericObjectEditor.GOETreeNode.toString()"
"25","5","weka.gui.GenericObjectEditor.JTreePopupMenu.show(Component,int,int)"
"15","7","weka.gui.GenericObjectEditor.GOEPanel.openObject()"
"19","5","weka.gui.GenericObjectEditor.registerEditors()"
"13","5","weka.gui.GenericObjectEditor.registerEditor(String,String)"
"41","9","weka.gui.GenericObjectEditor.sortClassesByRoot(String)"
"25","7","weka.gui.GenericObjectEditor.getClassesFromProperties()"
"10","5","weka.gui.GenericObjectEditor.updateObjectNames()"
"18","7","weka.gui.GenericObjectEditor.setDefaultValue()"
"18","7","weka.gui.GenericObjectEditor.setValue(Object)"
"22","7","weka.gui.GenericObjectEditor.paintValue(java.awt.Graphics,java.awt.Rectangle)"
"9","6","weka.gui.GenericObjectEditor.JTree$1.getToolTipText(MouseEvent)"
"18","9","weka.gui.GenericObjectEditor.addChildrenToTree(GOETreeNode,HierarchyPropertyParser)"
"16","8","weka.gui.GenericObjectEditor.classSelected(String)"
"31","8","weka.gui.sql.ResultSetTableCellRenderer.getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int)"
"21","7","weka.gui.sql.SqlViewer.queryExecuted(QueryExecuteEvent)"
"44","11","weka.gui.sql.SqlViewer.stringToModel(String)"
"22","8","weka.gui.sql.SqlViewer.modelToString(DefaultListModel)"
"19","6","weka.gui.sql.SqlViewer.loadHistory(boolean)"
"9","5","weka.gui.sql.ResultSetTableModel.getColumnClass(int)"
"9","5","weka.gui.sql.ResultSetTableModel.getColumnName(int)"
"9","6","weka.gui.sql.ResultSetTableModel.getValueAt(int,int)"
"12","5","weka.gui.sql.ResultSetTableModel.isNumericAt(int)"
"12","6","weka.gui.sql.ResultPanel.queryExecuted(QueryExecuteEvent)"
"39","16","weka.gui.sql.ResultSetHelper.initialize()"
"36","10","weka.gui.sql.ResultSetHelper.getCells()"
"69","22","weka.gui.sql.ResultSetHelper.typeToClass(int)"
"69","22","weka.gui.sql.ResultSetHelper.typeIsNumeric(int)"
"19","9","weka.gui.sql.QueryPanel.execute()"
"32","10","weka.clusterers.EM.setOptions(String[])"
"52","14","weka.clusterers.EM.EM_Init(Instances)"
"12","5","weka.clusterers.EM.MTask.call()"
"22","11","weka.clusterers.EM.M_reEstimate(Instances)"
"15","5","weka.clusterers.EM.M(Instances)"
"11","5","weka.clusterers.EM.E(Instances,boolean)"
"96","30","weka.clusterers.EM.toString()"
"19","8","weka.clusterers.EM.toStringOriginal()"
"17","7","weka.clusterers.EM.EM_Report(Instances)"
"67","17","weka.clusterers.EM.CVClusters()"
"16","5","weka.clusterers.EM.logDensityPerClusterForInstance(Instance)"
"24","8","weka.clusterers.EM.doEM()"
"21","7","weka.clusterers.EM.launchESteps(Instances)"
"36","14","weka.clusterers.EM.launchMSteps(Instances)"
"48","14","weka.clusterers.EM.iterate(Instances,boolean)"
"7","5","weka.clusterers.AbstractClusterer.clusterInstance(Instance)"
"13","8","weka.clusterers.AbstractClusterer.runClusterer(Clusterer,String[])"
"8","5","weka.clusterers.FilteredClusterer.distributionForInstance(Instance)"
"7","5","weka.clusterers.HierarchicalClusterer.TupleComparator.compare(Tuple,Tuple)"
"14","7","weka.clusterers.HierarchicalClusterer.Node.toString(int)"
"14","7","weka.clusterers.HierarchicalClusterer.Node.toString2(int)"
"25","8","weka.clusterers.HierarchicalClusterer.buildClusterer(Instances)"
"97","28","weka.clusterers.HierarchicalClusterer.neighborJoining(int,Integer[],Node[])"
"48","19","weka.clusterers.HierarchicalClusterer.doLinkClustering(int,Integer[],Node[])"
"28","6","weka.clusterers.HierarchicalClusterer.merge(int,int,double,double,Integer[],Node[])"
"24","9","weka.clusterers.HierarchicalClusterer.getDistance0(Integer,Integer)"
"90","30","weka.clusterers.HierarchicalClusterer.getDistance(double[][],Integer,Integer)"
"14","5","weka.clusterers.HierarchicalClusterer.calcESS(Integer)"
"11","5","weka.clusterers.HierarchicalClusterer.clusterInstance(Instance)"
"37","13","weka.clusterers.HierarchicalClusterer.setOptions(String[])"
"38","11","weka.clusterers.HierarchicalClusterer.getOptions()"
"21","10","weka.clusterers.HierarchicalClusterer.toString()"
"16","7","weka.clusterers.HierarchicalClusterer.graph()"
"78","24","weka.clusterers.ClusterEvaluation.evaluateClusterer(Instances,String,boolean)"
"46","10","weka.clusterers.ClusterEvaluation.evaluateClustersWithRespectToClass(Instances,String)"
"19","9","weka.clusterers.ClusterEvaluation.toMatrixString(String[][],String[][][],Instances)"
"23","10","weka.clusterers.ClusterEvaluation.mapClasses(int,int,int[][],int[][][],int[][][][],int[][][][][],int)"
"162","68","weka.clusterers.ClusterEvaluation.evaluateClusterer(Clusterer,String[])"
"23","10","weka.clusterers.ClusterEvaluation.crossValidateModel(String,Instances,int,String[],Random)"
"53","19","weka.clusterers.ClusterEvaluation.printClusterStats(Clusterer,String,String[])"
"30","9","weka.clusterers.ClusterEvaluation.printClusterings(Clusterer,String,String,Range)"
"16","6","weka.clusterers.ClusterEvaluation.attributeValuesString(Instance,Range)"
"42","6","weka.clusterers.ClusterEvaluation.makeOptionString(Clusterer,boolean)"
"28","25","weka.clusterers.ClusterEvaluation.equals(Object)"
"6","5","weka.clusterers.MakeDensityBasedClusterer.setNumClusters(int)"
"57","25","weka.clusterers.MakeDensityBasedClusterer.buildClusterer(Instances)"
"16","5","weka.clusterers.MakeDensityBasedClusterer.logDensityPerClusterForInstance(Instance)"
"16","7","weka.clusterers.MakeDensityBasedClusterer.toString()"
"14","5","weka.clusterers.SimpleKMeans.launchMoveCentroids(Instances[])"
"15","8","weka.clusterers.SimpleKMeans.KMeansClusterTask.clusterInstance(Instance,Instance[])"
"15","5","weka.clusterers.SimpleKMeans.launchAssignToClusters(Instances,Instances[])"
"155","47","weka.clusterers.SimpleKMeans.buildClusterer(Instances)"
"43","12","weka.clusterers.SimpleKMeans.kMeansPlusPlusInit(Instances)"
"58","23","weka.clusterers.SimpleKMeans.moveCentroid(int,Instances,boolean,boolean)"
"24","11","weka.clusterers.SimpleKMeans.clusterProcessedInstance(Instance,boolean,boolean,boolean[])"
"44","13","weka.clusterers.SimpleKMeans.setOptions(String[])"
"34","6","weka.clusterers.SimpleKMeans.getOptions()"
"192","58","weka.clusterers.SimpleKMeans.toString()"
"6","5","weka.clusterers.SimpleKMeans.getAssignments()"
"11","5","weka.clusterers.FarthestFirst.updateMinMax(Instance)"
"32","9","weka.clusterers.FarthestFirst.distance(Instance,Instance)"
"24","17","weka.clusterers.FarthestFirst.difference(int,double,double)"
"12","5","weka.clusterers.CheckClusterer.getOptions()"
"21","10","weka.clusterers.CheckClusterer.runTests(boolean,boolean,boolean)"
"85","26","weka.clusterers.CheckClusterer.correctBuildInitialisation(boolean,boolean,boolean,boolean,boolean,boolean)"
"65","20","weka.clusterers.CheckClusterer.instanceWeights(boolean,boolean,boolean,boolean,boolean,boolean)"
"31","13","weka.clusterers.CheckClusterer.datasetIntegrity(boolean,boolean,boolean,boolean,boolean,boolean,boolean)"
"52","14","weka.clusterers.CheckClusterer.updatingEquality(boolean,boolean,boolean,boolean,boolean,boolean)"
"38","20","weka.clusterers.CheckClusterer.runBasicTest(boolean,boolean,boolean,boolean,boolean,boolean,int,boolean,int,String)"
"8","5","weka.clusterers.CheckClusterer.addMissing(Instances,int,boolean)"
"22","10","weka.clusterers.CheckClusterer.printAttributeSummary(boolean,boolean,boolean,boolean,boolean,boolean)"
"21","7","weka.clusterers.Canopy.setOptions(String[])"
"11","9","weka.clusterers.Canopy.nonEmptyCanopySetIntersection(boolean[],boolean[][])"
"20","6","weka.clusterers.Canopy.assignCanopies(Instance)"
"17","8","weka.clusterers.Canopy.updateCanopyCenter(Instance,Instance[][],Instance[][][])"
"29","8","weka.clusterers.Canopy.updateClusterer(Instance)"
"22","11","weka.clusterers.Canopy.pruneCandidateCanopies()"
"12","6","weka.clusterers.Canopy.distributionForInstance(Instance)"
"59","16","weka.clusterers.Canopy.adjustCanopies(ex.printStackTrace[])"
"28","11","weka.clusterers.Canopy.updateFinished()"
"18","8","weka.clusterers.Canopy.setT2T1BasedOnStdDev(Instances)"
"30","12","weka.clusterers.Canopy.buildClusterer(Instances)"
"15","6","weka.clusterers.Canopy.printSingleAssignment(String[])"
"53","10","weka.clusterers.Canopy.aggregateCanopies(Canopy,double,double,NormalizableDistance,Filter,int)"
"24","8","weka.clusterers.Cobweb.CNode.addInstance(Instance)"
"96","29","weka.clusterers.Cobweb.CNode.findHost(Instance,boolean)"
"6","5","weka.clusterers.Cobweb.CNode.getProbability(int,int)"
"8","6","weka.clusterers.Cobweb.CNode.getStandardDev(int)"
"21","11","weka.clusterers.Cobweb.CNode.updateStats(Instance,boolean)"
"9","6","weka.clusterers.Cobweb.CNode.assignClusterNums(updateInstance.weight[])"
"15","6","weka.clusterers.Cobweb.CNode.dumpTree(int,StringBuffer)"
"28","8","weka.clusterers.Cobweb.CNode.dumpData()"
"9","7","weka.clusterers.Cobweb.CNode.graphTree(StringBuffer)"
"10","7","weka.experiment.DatabaseResultProducer.doRunKeys(int)"
"10","7","weka.experiment.DatabaseResultProducer.doRun(int)"
"10","6","weka.experiment.DatabaseResultProducer.acceptResult(ResultProducer,Object[],Object[])"
"11","7","weka.experiment.DatabaseResultProducer.isResultRequired(ResultProducer,Object[])"
"18","6","weka.experiment.DatabaseResultProducer.getOptions()"
"36","22","weka.experiment.Stats.add(double,double)"
"25","16","weka.experiment.Stats.subtract(double,double)"
"9","5","weka.experiment.Stats.calculateDerived()"
"26","9","weka.experiment.Stats.main(String[])"
"24","11","weka.experiment.PairedStatsCorrected.calculateDerived()"
"29","10","weka.experiment.PairedStatsCorrected.main(String[])"
"10","5","weka.experiment.AveragingResultProducer.findKeyIndex()"
"7","7","weka.experiment.AveragingResultProducer.matchesTemplate(Object[],Object[])"
"45","17","weka.experiment.AveragingResultProducer.doAverageResult(Object[])"
"13","7","weka.experiment.AveragingResultProducer.checkForDuplicateKeys(Object[])"
"6","5","weka.experiment.AveragingResultProducer.checkForMultipleDifferences()"
"8","5","weka.experiment.AveragingResultProducer.preProcess()"
"21","7","weka.experiment.AveragingResultProducer.getResultNames()"
"20","7","weka.experiment.AveragingResultProducer.getResultTypes()"
"18","6","weka.experiment.AveragingResultProducer.setOptions(String[])"
"21","6","weka.experiment.AveragingResultProducer.getOptions()"
"70","21","weka.experiment.ResultMatrixLatex.toStringMatrix()"
"38","11","weka.experiment.ResultMatrixLatex.toStringSummary()"
"21","5","weka.experiment.ResultMatrixLatex.toStringRanking()"
"39","5","weka.experiment.ResultMatrixLatex.main(String[])"
"20","6","weka.experiment.ClassifierSplitEvaluator.setOptions(String[])"
"21","6","weka.experiment.ClassifierSplitEvaluator.getOptions()"
"13","7","weka.experiment.ClassifierSplitEvaluator.setAdditionalMeasures(String[])"
"7","6","weka.experiment.ClassifierSplitEvaluator.getMeasure(String)"
"86","10","weka.experiment.ClassifierSplitEvaluator.getResultTypes()"
"87","11","weka.experiment.ClassifierSplitEvaluator.getResultNames()"
"188","43","weka.experiment.ClassifierSplitEvaluator.getResult(Instances,Instances)"
"20","9","weka.experiment.ClassifierSplitEvaluator.getRawResultOutput()"
"55","22","weka.experiment.PairedCorrectedTTester.calculateStatistics(Instance,int,int,int)"
"38","12","weka.experiment.PairedCorrectedTTester.main(String[])"
"95","10","weka.experiment.ResultMatrixGnuPlot.toStringMatrix()"
"39","5","weka.experiment.ResultMatrixGnuPlot.main(String[])"
"24","13","weka.experiment.Experiment.initialize()"
"28","16","weka.experiment.Experiment.determineAdditionalResultMeasures()"
"19","6","weka.experiment.Experiment.nextIteration()"
"32","11","weka.experiment.Experiment.advanceCounters()"
"20","6","weka.experiment.Experiment.runExperiment(boolean)"
"40","14","weka.experiment.Experiment.setOptions(String[])"
"32","9","weka.experiment.Experiment.getOptions()"
"27","12","weka.experiment.Experiment.toString()"
"45","13","weka.experiment.Experiment.main(String[])"
"32","12","weka.experiment.ResultMatrixCSV.toStringSummary()"
"15","5","weka.experiment.ResultMatrixCSV.toStringRanking()"
"39","5","weka.experiment.ResultMatrixCSV.main(String[])"
"15","5","weka.experiment.RegressionSplitEvaluator.getOptions()"
"13","7","weka.experiment.RegressionSplitEvaluator.setAdditionalMeasures(String[])"
"7","6","weka.experiment.RegressionSplitEvaluator.getMeasure(String)"
"39","6","weka.experiment.RegressionSplitEvaluator.getResultTypes()"
"40","7","weka.experiment.RegressionSplitEvaluator.getResultNames()"
"105","25","weka.experiment.RegressionSplitEvaluator.getResult(Instances,Instances)"
"20","9","weka.experiment.RegressionSplitEvaluator.getRawResultOutput()"
"10","6","weka.experiment.PairedTTester.DatasetSpecifiers.add(Instance)"
"44","22","weka.experiment.PairedTTester.prepareData()"
"38","16","weka.experiment.PairedTTester.calculateStatistics(Instance,int,int,int)"
"10","5","weka.experiment.PairedTTester.resultsetKey()"
"22","9","weka.experiment.PairedTTester.multiResultsetWins(int,int[][])"
"67","26","weka.experiment.PairedTTester.multiResultsetFull(int,int)"
"57","16","weka.experiment.PairedTTester.setOptions(String[])"
"20","5","weka.experiment.PairedTTester.getOptions()"
"40","14","weka.experiment.PairedTTester.main(String[])"
"7","7","weka.experiment.PairedStats.add(double[],double[])"
"7","7","weka.experiment.PairedStats.subtract(double[],double[])"
"27","12","weka.experiment.PairedStats.calculateDerived()"
"29","10","weka.experiment.PairedStats.main(String[])"
"23","7","weka.experiment.DatabaseResultListener.determineColumnConstraints(ResultProducer)"
"19","10","weka.experiment.DatabaseResultListener.isResultRequired(ResultProducer,Object[])"
"11","5","weka.experiment.DatabaseResultListener.updateResultsTableName(ResultProducer)"
"9","9","weka.experiment.DatabaseResultListener.isCacheValid(Object[])"
"36","14","weka.experiment.DatabaseResultListener.loadCache(ResultProducer,Object[])"
"6","5","weka.experiment.RandomSplitResultProducer.preProcess()"
"12","6","weka.experiment.RandomSplitResultProducer.doRunKeys(int)"
"68","18","weka.experiment.RandomSplitResultProducer.doRun(int)"
"17","6","weka.experiment.RandomSplitResultProducer.setOptions(String[])"
"23","7","weka.experiment.RandomSplitResultProducer.getOptions()"
"17","8","weka.experiment.CSVResultListener.acceptResult(ResultProducer,Object[],Object[])"
"17","6","weka.experiment.CSVResultListener.printResultNames(ResultProducer)"
"49","14","weka.experiment.ResultMatrixHTML.toStringMatrix()"
"32","10","weka.experiment.ResultMatrixHTML.toStringSummary()"
"17","5","weka.experiment.ResultMatrixHTML.toStringRanking()"
"39","5","weka.experiment.ResultMatrixHTML.main(String[])"
"16","11","weka.experiment.LearningRateResultProducer.doRunKeys(int)"
"18","11","weka.experiment.LearningRateResultProducer.doRun(int)"
"22","7","weka.experiment.LearningRateResultProducer.setOptions(String[])"
"21","5","weka.experiment.LearningRateResultProducer.getOptions()"
"6","5","weka.experiment.CrossValidationResultProducer.preProcess()"
"14","7","weka.experiment.CrossValidationResultProducer.doRunKeys(int)"
"34","11","weka.experiment.CrossValidationResultProducer.doRun(int)"
"16","6","weka.experiment.CrossValidationResultProducer.setOptions(String[])"
"17","6","weka.experiment.CrossValidationResultProducer.getOptions()"
"30","10","weka.experiment.xml.XMLExperiment.writePropertyNode(Element,Object,String)"
"37","9","weka.experiment.xml.XMLExperiment.readPropertyNode(Element)"
"37","12","weka.experiment.DatabaseUtils.initialize(Properties)"
"28","17","weka.experiment.DatabaseUtils.attributeCaseFix(String)"
"9","5","weka.experiment.DatabaseUtils.translateDBColumnType(String)"
"46","43","weka.experiment.DatabaseUtils.typeName(int)"
"10","6","weka.experiment.DatabaseUtils.connectToDatabase()"
"13","6","weka.experiment.DatabaseUtils.connectViaPackageLoadedDriver()"
"16","9","weka.experiment.DatabaseUtils.connectUsingDriverManager()"
"11","6","weka.experiment.DatabaseUtils.getSupportedCursorScrollType()"
"24","10","weka.experiment.DatabaseUtils.tableExists(String)"
"26","10","weka.experiment.DatabaseUtils.isKeyInTable(String,ResultProducer,Object[])"
"49","20","weka.experiment.DatabaseUtils.getResultFromTable(String,ResultProducer,Object[])"
"32","11","weka.experiment.DatabaseUtils.putResultInTable(String,ResultProducer,Object[],Object[])"
"11","6","weka.experiment.DatabaseUtils.safeDoubleToString(Double)"
"31","11","weka.experiment.DatabaseUtils.createExperimentIndexEntry(ResultProducer)"
"16","8","weka.experiment.DatabaseUtils.getResultsTableName(ResultProducer)"
"52","20","weka.experiment.DatabaseUtils.createResultsTable(ResultProducer,String)"
"18","8","weka.experiment.DatabaseUtils.loadProperties(File)"
"18","5","weka.experiment.InstanceQuery.setOptions(String[])"
"18","7","weka.experiment.InstanceQuery.getOptions()"
"205","59","weka.experiment.InstanceQuery.retrieveInstances(InstanceQueryAdapter,ResultSet)"
"18","8","weka.experiment.InstanceQuery.retrieveInstances(String)"
"26","8","weka.experiment.InstanceQuery.main(String[])"
"52","13","weka.experiment.RemoteExperiment.initialize()"
"27","21","weka.experiment.RemoteExperiment.availableHost(int)"
"58","11","weka.experiment.RemoteExperiment.Thread$1.run()"
"73","20","weka.experiment.RemoteExperiment.main(String[])"
"15","5","weka.experiment.RemoteEngine.checkStatus(Object)"
"33","5","weka.experiment.RemoteEngine.Thread$1.run()"
"20","7","weka.experiment.RemoteEngine.purge()"
"34","9","weka.experiment.RemoteEngine.main(String[])"
"49","9","weka.experiment.ResultMatrix.setOptions(String[])"
"34","8","weka.experiment.ResultMatrix.getOptions()"
"55","11","weka.experiment.ResultMatrix.assign(ResultMatrix)"
"23","5","weka.experiment.ResultMatrix.setSize(int,int)"
"12","5","weka.experiment.ResultMatrix.getColName(int)"
"12","5","weka.experiment.ResultMatrix.getRowName(int)"
"3","5","weka.experiment.ResultMatrix.setMean(int,int,double)"
"5","6","weka.experiment.ResultMatrix.getMean(int,int)"
"14","6","weka.experiment.ResultMatrix.getAverage(int)"
"3","5","weka.experiment.ResultMatrix.setStdDev(int,int,double)"
"5","6","weka.experiment.ResultMatrix.getStdDev(int,int)"
"3","5","weka.experiment.ResultMatrix.setSignificance(int,int,int)"
"5","6","weka.experiment.ResultMatrix.getSignificance(int,int)"
"13","7","weka.experiment.ResultMatrix.getSignificanceCount(int,int)"
"8","6","weka.experiment.ResultMatrix.getDisplayRow(int)"
"8","6","weka.experiment.ResultMatrix.getDisplayCol(int)"
"13","7","weka.experiment.ResultMatrix.doubleToString(double,int)"
"12","5","weka.experiment.ResultMatrix.padString(String,int,boolean)"
"13","9","weka.experiment.ResultMatrix.getColSize(String[][],int,boolean,boolean)"
"121","33","weka.experiment.ResultMatrix.toArray()"
"12","7","weka.experiment.ResultMatrix.isMean(int)"
"13","7","weka.experiment.ResultMatrix.isStdDev(int)"
"12","7","weka.experiment.ResultMatrix.isSignificance(int)"
"44","16","weka.experiment.ResultMatrixSignificance.toStringMatrix()"
"39","5","weka.experiment.ResultMatrixSignificance.main(String[])"
"15","5","weka.experiment.DensityBasedClustererSplitEvaluator.getOptions()"
"13","7","weka.experiment.DensityBasedClustererSplitEvaluator.setAdditionalMeasures(String[])"
"20","5","weka.experiment.DensityBasedClustererSplitEvaluator.getResultTypes()"
"19","5","weka.experiment.DensityBasedClustererSplitEvaluator.getResultNames()"
"61","12","weka.experiment.DensityBasedClustererSplitEvaluator.getResult(Instances,Instances)"
"16","8","weka.experiment.DensityBasedClustererSplitEvaluator.getRawResultOutput()"
"38","11","weka.experiment.ExplicitTestsetResultProducer.setOptions(String[])"
"35","11","weka.experiment.ExplicitTestsetResultProducer.getOptions()"
"6","5","weka.experiment.ExplicitTestsetResultProducer.preProcess()"
"12","6","weka.experiment.ExplicitTestsetResultProducer.doRunKeys(int)"
"43","17","weka.experiment.ExplicitTestsetResultProducer.doRun(int)"
"18","6","weka.experiment.ExplicitTestsetResultProducer.getCompatibilityState()"
"43","5","weka.experiment.CostSensitiveClassifierSplitEvaluator.getResultTypes()"
"42","5","weka.experiment.CostSensitiveClassifierSplitEvaluator.getResultNames()"
"104","22","weka.experiment.CostSensitiveClassifierSplitEvaluator.getResult(Instances,Instances)"
"13","6","weka.experiment.CrossValidationSplitResultProducer.doRunKeys(int)"
"37","11","weka.experiment.CrossValidationSplitResultProducer.doRun(int)"
"27","5","weka.experiment.RemoteExperimentSubTask.execute()"
"27","8","weka.experiment.InstancesResultListener.preProcess(ResultProducer)"
"35","14","weka.experiment.InstancesResultListener.postProcess(ResultProducer)"
"30","9","weka.experiment.InstancesResultListener.acceptResult(ResultProducer,Object[],Object[])"
"106","28","weka.experiment.ResultMatrixPlainText.toStringMatrix()"
"29","10","weka.experiment.ResultMatrixPlainText.toStringSummary()"
"19","5","weka.experiment.ResultMatrixPlainText.toStringRanking()"
"39","5","weka.experiment.ResultMatrixPlainText.main(String[])"
"20","14","weka.datagenerators.Test.passesTest(Instance)"
"9","9","weka.datagenerators.Test.testComparisonString()"
"5","5","weka.datagenerators.ClusterGenerator.checkIndices()"
"22","5","weka.datagenerators.clusterers.SubspaceCluster.setOptions(String[])"
"13","6","weka.datagenerators.clusterers.SubspaceCluster.setClusterDefinitions(ClusterDefinition[])"
"28","11","weka.datagenerators.clusterers.SubspaceCluster.checkCoverage()"
"43","10","weka.datagenerators.clusterers.SubspaceCluster.defineDataFormat()"
"26","10","weka.datagenerators.clusterers.SubspaceCluster.generateExamples()"
"35","9","weka.datagenerators.clusterers.SubspaceCluster.generateExample(Instances,Random,SubspaceClusterDefinition,String)"
"25","7","weka.datagenerators.clusterers.SubspaceCluster.generateUniformExamples(Instances,int,SubspaceClusterDefinition,String)"
"50","13","weka.datagenerators.clusterers.SubspaceCluster.generateUniformIntegerExamples(Instances,int,SubspaceClusterDefinition,String)"
"25","7","weka.datagenerators.clusterers.SubspaceCluster.generateGaussianExamples(Instances,int,Random,SubspaceClusterDefinition,String)"
"28","6","weka.datagenerators.clusterers.SubspaceCluster.generateStart()"
"50","17","weka.datagenerators.clusterers.BIRCHCluster.setOptions(String[])"
"25","6","weka.datagenerators.clusterers.BIRCHCluster.defineDataFormat()"
"10","5","weka.datagenerators.clusterers.BIRCHCluster.generateExamples()"
"17","6","weka.datagenerators.clusterers.BIRCHCluster.generateExamples(Random,Instances)"
"29","5","weka.datagenerators.clusterers.BIRCHCluster.generateStart()"
"41","10","weka.datagenerators.clusterers.SubspaceClusterDefinition.setOptions(String[])"
"21","5","weka.datagenerators.clusterers.SubspaceClusterDefinition.getOptions()"
"20","7","weka.datagenerators.clusterers.SubspaceClusterDefinition.setAttrIndexRange(String)"
"24","20","weka.datagenerators.clusterers.SubspaceClusterDefinition.setValuesList(String)"
"17","14","weka.datagenerators.classifiers.classification.Agrawal.ClassFunction$1.determineClass(double,double,int,int,int,int,double,int,double)"
"17","16","weka.datagenerators.classifiers.classification.Agrawal.ClassFunction$1.determineClass(double,double,int,int,int,int,double,int,double)"
"35","34","weka.datagenerators.classifiers.classification.Agrawal.ClassFunction$1.determineClass(double,double,int,int,int,int,double,int,double)"
"35","32","weka.datagenerators.classifiers.classification.Agrawal.ClassFunction$1.determineClass(double,double,int,int,int,int,double,int,double)"
"18","14","weka.datagenerators.classifiers.classification.Agrawal.ClassFunction$1.determineClass(double,double,int,int,int,int,double,int,double)"
"33","5","weka.datagenerators.classifiers.classification.Agrawal.defineDataFormat()"
"69","12","weka.datagenerators.classifiers.classification.Agrawal.generateExample()"
"9","5","weka.datagenerators.classifiers.classification.RDG1.RuleList.classifyInstance(Instance)"
"36","9","weka.datagenerators.classifiers.classification.RDG1.setOptions(String[])"
"9","5","weka.datagenerators.classifiers.classification.RDG1.generateExample()"
"11","5","weka.datagenerators.classifiers.classification.RDG1.generateExamples(int,Random,Instances)"
"25","6","weka.datagenerators.classifiers.classification.RDG1.updateDecisionList(Random,Instance)"
"19","6","weka.datagenerators.classifiers.classification.RDG1.generateTestList(Random,Instance)"
"17","6","weka.datagenerators.classifiers.classification.RDG1.generateExample(Random,Instances)"
"10","5","weka.datagenerators.classifiers.classification.RDG1.classifyExample(Instance)"
"20","8","weka.datagenerators.classifiers.classification.RDG1.votedReclassifyExample(Instance)"
"11","5","weka.datagenerators.classifiers.classification.RDG1.defineIrrelevant(Random)"
"11","5","weka.datagenerators.classifiers.classification.RDG1.defineNumeric(Random)"
"23","7","weka.datagenerators.classifiers.classification.LED24.generateExample()"
"32","5","weka.datagenerators.classifiers.classification.BayesNet.setOptions(String[])"
"14","5","weka.datagenerators.classifiers.classification.BayesNet.setNumArcs(int)"
"28","5","weka.datagenerators.classifiers.classification.RandomRBF.defineDataFormat()"
"32","6","weka.datagenerators.classifiers.classification.RandomRBF.generateExample()"
"23","5","weka.datagenerators.classifiers.regression.MexicanHat.setOptions(String[])"
"20","6","weka.datagenerators.DataGenerator.setOptions(String[])"
"19","6","weka.datagenerators.DataGenerator.removeBlacklist(String[])"
"39","14","weka.datagenerators.DataGenerator.makeData(DataGenerator,String[])"
"14","5","weka.classifiers.CheckClassifier.getOptions()"
"31","13","weka.classifiers.CheckClassifier.testsPerClassType(int,boolean,boolean,boolean)"
"93","41","weka.classifiers.CheckClassifier.correctBuildInitialisation(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"19","5","weka.classifiers.CheckClassifier.canHandleMissing(boolean,boolean,boolean,boolean,boolean,boolean,int,boolean,boolean,int)"
"54","19","weka.classifiers.CheckClassifier.updatingEquality(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"55","25","weka.classifiers.CheckClassifier.doesntUseTestClassVal(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"65","23","weka.classifiers.CheckClassifier.instanceWeights(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"44","17","weka.classifiers.CheckClassifier.datasetIntegrity(boolean,boolean,boolean,boolean,boolean,boolean,int,boolean,boolean)"
"63","29","weka.classifiers.CheckClassifier.runBasicTest(boolean,boolean,boolean,boolean,boolean,boolean,int,int,int,boolean,boolean,int,int,int,String)"
"38","15","weka.classifiers.CheckClassifier.printAttributeSummary(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"18","7","weka.classifiers.misc.InputMappedClassifier.getOptions()"
"14","8","weka.classifiers.misc.InputMappedClassifier.loadModel(String)"
"9","5","weka.classifiers.misc.InputMappedClassifier.buildClassifier(Instances)"
"12","6","weka.classifiers.misc.InputMappedClassifier.getFixedLengthString(String,char,int)"
"62","15","weka.classifiers.misc.InputMappedClassifier.createMappingReport()"
"33","12","weka.classifiers.misc.InputMappedClassifier.regenerateMapping()"
"6","5","weka.classifiers.misc.InputMappedClassifier.getMappedClassIndex()"
"49","14","weka.classifiers.misc.InputMappedClassifier.constructMappedInstance(Instance)"
"17","10","weka.classifiers.misc.InputMappedClassifier.toString()"
"5","5","weka.classifiers.misc.InputMappedClassifier.graph()"
"6","5","weka.classifiers.misc.SerializedClassifier.setModelFile(File)"
"15","7","weka.classifiers.misc.SerializedClassifier.getCapabilities()"
"15","8","weka.classifiers.trees.j48.C45Split.classProb(int,Instance,int)"
"54","18","weka.classifiers.trees.j48.C45Split.handleNumericAttribute(Instances)"
"16","5","weka.classifiers.trees.j48.C45Split.sourceExpression(int,Instances)"
"10","7","weka.classifiers.trees.j48.C45Split.setSplitPoint(Instances)"
"11","7","weka.classifiers.trees.j48.C45Split.whichSubset(Instance)"
"14","8","weka.classifiers.trees.j48.EntropySplitCrit.splitCritValue(Distribution,Distribution)"
"15","9","weka.classifiers.trees.j48.Stats.addErrs(double,double,float)"
"51","25","weka.classifiers.trees.j48.BinC45ModelSelection.selectModel(Instances)"
"48","13","weka.classifiers.trees.j48.NBTreeSplit.handleEnumeratedAttribute(Instances)"
"42","11","weka.classifiers.trees.j48.NBTreeSplit.handleNumericAttribute(Instances)"
"21","5","weka.classifiers.trees.j48.ClassifierTree.buildTree(Instances,boolean)"
"26","5","weka.classifiers.trees.j48.ClassifierTree.buildTree(Instances,Instances,boolean)"
"18","6","weka.classifiers.trees.j48.ClassifierTree.graph()"
"29","5","weka.classifiers.trees.j48.ClassifierTree.toSource(String)"
"16","7","weka.classifiers.trees.j48.ClassifierTree.graphTree(StringBuffer)"
"15","5","weka.classifiers.trees.j48.ClassifierTree.prefixTree(StringBuffer)"
"17","9","weka.classifiers.trees.j48.ClassifierTree.getProbsLaplace(int,Instance,double)"
"17","9","weka.classifiers.trees.j48.ClassifierTree.getProbs(int,Instance,double)"
"22","5","weka.classifiers.trees.j48.ClassifierTree.getMembershipValues(Instance)"
"10","5","weka.classifiers.trees.j48.C45PruneableClassifierTree.buildClassifier(Instances)"
"29","8","weka.classifiers.trees.j48.C45PruneableClassifierTree.prune()"
"10","5","weka.classifiers.trees.j48.GainRatioSplitCrit.splitCritValue(Distribution)"
"15","8","weka.classifiers.trees.j48.BinC45Split.classProb(int,Instance,int)"
"26","8","weka.classifiers.trees.j48.BinC45Split.handleEnumeratedAttribute(Instances)"
"55","18","weka.classifiers.trees.j48.BinC45Split.handleNumericAttribute(Instances)"
"19","6","weka.classifiers.trees.j48.BinC45Split.sourceExpression(int,Instances)"
"10","7","weka.classifiers.trees.j48.BinC45Split.setSplitPoint(Instances)"
"14","9","weka.classifiers.trees.j48.BinC45Split.whichSubset(Instance)"
"57","28","weka.classifiers.trees.j48.C45ModelSelection.selectModel(Instances)"
"17","6","weka.classifiers.trees.j48.NBTreeClassifierTree.graph()"
"16","7","weka.classifiers.trees.j48.NBTreeClassifierTree.graphTree(StringBuffer)"
"52","25","weka.classifiers.trees.j48.NBTreeModelSelection.selectModel(Instances)"
"11","5","weka.classifiers.trees.j48.PruneableClassifierTree.errorsForTree()"
"12","6","weka.classifiers.trees.j48.ClassifierSplitModel.classProb(int,Instance,int)"
"12","6","weka.classifiers.trees.j48.ClassifierSplitModel.classProbLaplace(int,Instance,int)"
"25","10","weka.classifiers.trees.j48.ClassifierSplitModel.split(Instances)"
"24","6","weka.classifiers.trees.j48.Distribution.addInstWithUnknown(Instances,int)"
"10","5","weka.classifiers.trees.j48.Distribution.check(double)"
"9","5","weka.classifiers.trees.j48.Distribution.initialize()"
"12","5","weka.classifiers.trees.j48.Distribution.maxClass(int)"
"14","5","weka.classifiers.trees.lmt.SimpleLinearRegression.computeMeans(Instances)"
"28","7","weka.classifiers.trees.lmt.SimpleLinearRegression.buildClassifier(Instances)"
"29","5","weka.classifiers.trees.lmt.LogisticBase.performBoostingInfCriterion()"
"31","7","weka.classifiers.trees.lmt.LogisticBase.performBoosting(Instances,Instances,Instances[],int)"
"28","5","weka.classifiers.trees.lmt.LogisticBase.performBoosting()"
"55","19","weka.classifiers.trees.lmt.LogisticBase.performIteration(int,int[][],int[][][][],int[][][][][][],Instances)"
"13","5","weka.classifiers.trees.lmt.LogisticBase.getFs(Instance)"
"20","8","weka.classifiers.trees.lmt.LogisticBase.getUsedAttributes()"
"14","6","weka.classifiers.trees.lmt.LogisticBase.getCoefficients()"
"12","6","weka.classifiers.trees.lmt.LogisticBase.percentAttributesUsed()"
"6","5","weka.classifiers.trees.lmt.CompareNode.compare(LMTNode,LMTNode)"
"39","9","weka.classifiers.trees.lmt.LMTNode.buildClassifier(Instances)"
"51","9","weka.classifiers.trees.lmt.LMTNode.buildTree(Instances,SimpleLinearRegression[][],double,double,Instances)"
"21","5","weka.classifiers.trees.lmt.LMTNode.prune(double)"
"14","6","weka.classifiers.trees.lmt.LMTNode.getNumLeaves()"
"26","8","weka.classifiers.trees.lmt.ResidualSplit.getSplitPoint()"
"28","8","weka.classifiers.trees.lmt.ResidualSplit.entropyGain()"
"11","7","weka.classifiers.trees.lmt.ResidualSplit.whichSubset(Instance)"
"23","11","weka.classifiers.trees.lmt.ResidualModelSelection.selectModel(Instances,Instances[][],Instances[][][][])"
"16","7","weka.classifiers.trees.RandomForest.toString()"
"17","10","weka.classifiers.trees.RandomForest.computeAverageImpurityDecreasePerAttribute(buffer.toString[][])"
"25","7","weka.classifiers.trees.RandomForest.getOptions()"
"24","13","weka.classifiers.trees.REPTree.Tree.distributionForInstance(Instance)"
"15","5","weka.classifiers.trees.REPTree.Tree.sourceExpression(int)"
"50","10","weka.classifiers.trees.REPTree.Tree.toSource(String,Tree)"
"18","5","weka.classifiers.trees.REPTree.Tree.toGraph(StringBuffer,int,Tree)"
"25","7","weka.classifiers.trees.REPTree.Tree.leafString(Tree)"
"27","10","weka.classifiers.trees.REPTree.Tree.toString(int,Tree)"
"100","31","weka.classifiers.trees.REPTree.Tree.buildTree(e.printStackTrace[][][],e.printStackTrace[][][][][][],Instances,double,double[],Instances,double,double,int,int)"
"48","16","weka.classifiers.trees.REPTree.Tree.splitData(size[][][][],size[][][][][][][][],int,double,double[][],double[][][][],Instances)"
"58","18","weka.classifiers.trees.REPTree.Tree.distribution(double[][],double[][][][][],int,int[],int[][],int[][][][],Instances)"
"102","19","weka.classifiers.trees.REPTree.Tree.numericDistribution(double[][],double[][][][][],int,int[],int[][],int[][][][],Instances,Instances[])"
"12","6","weka.classifiers.trees.REPTree.Tree.reducedErrorPrune()"
"32","11","weka.classifiers.trees.REPTree.Tree.insertHoldOutInstance(Instance,double,Tree)"
"25","10","weka.classifiers.trees.REPTree.Tree.backfitHoldOutSet()"
"34","7","weka.classifiers.trees.REPTree.setOptions(String[])"
"69","18","weka.classifiers.trees.REPTree.buildClassifier(Instances)"
"6","5","weka.classifiers.trees.REPTree.toString()"
"32","9","weka.classifiers.trees.REPTree.getMembershipValues(Instance)"
"30","25","weka.classifiers.trees.J48.buildClassifier(Instances)"
"31","5","weka.classifiers.trees.J48.setOptions(String[])"
"46","22","weka.classifiers.trees.J48.getOptions()"
"7","5","weka.classifiers.trees.J48.toString()"
"11","8","weka.classifiers.trees.J48.getMeasure(String)"
"25","8","weka.classifiers.trees.HoeffdingTree.setOptions(String[])"
"17","8","weka.classifiers.trees.HoeffdingTree.updateClassifier(Instance)"
"38","11","weka.classifiers.trees.HoeffdingTree.trySplit(ActiveHNode,SplitNode,String)"
"21","6","weka.classifiers.trees.ht.NominalConditionalSufficientStats.classDistsAfterSplit()"
"13","5","weka.classifiers.trees.ht.ActiveHNode.updateNode(Instance)"
"28","10","weka.classifiers.trees.ht.InfoGainSplitMetric.evaluateSplit(WeightMass,WeightMass)"
"7","6","weka.classifiers.trees.ht.UnivariateNumericBinarySplit.branchForInstance(Instance)"
"9","6","weka.classifiers.trees.ht.GaussianConditionalSufficientStats.GaussianEstimator.probabilityDensity(double)"
"14","5","weka.classifiers.trees.ht.GaussianConditionalSufficientStats.update(double,String,double)"
"18","9","weka.classifiers.trees.ht.GaussianConditionalSufficientStats.getSplitPointCandidates()"
"36","9","weka.classifiers.trees.ht.GaussianConditionalSufficientStats.classDistsAfterSplit(double)"
"8","5","weka.classifiers.trees.ht.SplitNode.leafForInstance(Instance,SplitNode,String)"
"29","9","weka.classifiers.trees.ht.SplitNode.graphTree(StringBuffer)"
"29","9","weka.classifiers.trees.m5.M5Base.classifyInstance(Instance)"
"19","8","weka.classifiers.trees.m5.M5Base.toString()"
"21","7","weka.classifiers.trees.m5.YongSplitInfo.attrSplit(int,Instances)"
"14","6","weka.classifiers.trees.m5.PreConstructedLinearModel.toString()"
"52","10","weka.classifiers.trees.m5.Impurity.incremental(double,int)"
"49","10","weka.classifiers.trees.m5.CorrelationSplitInfo.attrSplit(int,Instances)"
"9","7","weka.classifiers.trees.m5.RuleNode.classifyInstance(Instance)"
"63","18","weka.classifiers.trees.m5.RuleNode.split()"
"16","9","weka.classifiers.trees.m5.RuleNode.attsTestedBelow()"
"32","9","weka.classifiers.trees.m5.RuleNode.treeToString(int)"
"15","5","weka.classifiers.trees.m5.RuleNode.installLinearModels()"
"29","11","weka.classifiers.trees.m5.RuleNode.installSmoothedModels()"
"41","9","weka.classifiers.trees.m5.RuleNode.prune()"
"10","5","weka.classifiers.trees.m5.RuleNode.findBestLeaf(num_params[],RuleNode[])"
"8","7","weka.classifiers.trees.m5.RuleNode.graphTree(StringBuffer)"
"12","10","weka.classifiers.trees.m5.Rule.classifyInstance(Instance)"
"53","14","weka.classifiers.trees.m5.Rule.makeRule()"
"11","6","weka.classifiers.trees.m5.Rule.treeToString()"
"22","8","weka.classifiers.trees.m5.Rule.ruleToString()"
"22","5","weka.classifiers.trees.RandomTree.getOptions()"
"35","7","weka.classifiers.trees.RandomTree.setOptions(String[])"
"54","13","weka.classifiers.trees.RandomTree.buildClassifier(Instances)"
"12","6","weka.classifiers.trees.RandomTree.toString()"
"32","9","weka.classifiers.trees.RandomTree.getMembershipValues(Instance)"
"33","17","weka.classifiers.trees.RandomTree.Tree.distributionForInstance(Instance)"
"20","6","weka.classifiers.trees.RandomTree.Tree.toGraph(StringBuffer,int)"
"17","6","weka.classifiers.trees.RandomTree.Tree.leafString()"
"27","10","weka.classifiers.trees.RandomTree.Tree.toString(int)"
"56","23","weka.classifiers.trees.RandomTree.Tree.backfitData(Instances,Instances[],double)"
"84","34","weka.classifiers.trees.RandomTree.Tree.buildTree(Instances,Instances[],Instances[][],double,Random,int,double)"
"23","11","weka.classifiers.trees.RandomTree.Tree.splitData(Instances)"
"103","19","weka.classifiers.trees.RandomTree.Tree.numericDistribution(double[][],double[][][][][],int,int[][],Instances,Instances[])"
"64","21","weka.classifiers.trees.RandomTree.Tree.distribution(double[][],double[][][][][],int,Instances)"
"18","5","weka.classifiers.trees.RandomTree.Tree.toGraph(StringBuffer,int,Tree)"
"47","13","weka.classifiers.trees.DecisionStump.buildClassifier(Instances)"
"43","10","weka.classifiers.trees.DecisionStump.toString()"
"31","10","weka.classifiers.trees.DecisionStump.findSplitNominalNominal(int)"
"42","10","weka.classifiers.trees.DecisionStump.findSplitNominalNumeric(int)"
"33","9","weka.classifiers.trees.DecisionStump.findSplitNumericNominal(int)"
"44","10","weka.classifiers.trees.DecisionStump.findSplitNumericNumeric(int)"
"14","9","weka.classifiers.trees.DecisionStump.whichSubset(Instance)"
"22","7","weka.classifiers.trees.LMT.getOptions()"
"8","6","weka.classifiers.trees.LMT.getMeasure(String)"
"36","11","weka.classifiers.BVDecompose.setOptions(String[])"
"28","7","weka.classifiers.BVDecompose.getOptions()"
"57","16","weka.classifiers.BVDecompose.decompose()"
"21","5","weka.classifiers.BVDecompose.toString()"
"15","5","weka.classifiers.BVDecompose.main(String[])"
"40","14","weka.classifiers.CheckSource.setOptions(String[])"
"21","6","weka.classifiers.CheckSource.getOptions()"
"47","16","weka.classifiers.CheckSource.execute()"
"13","8","weka.classifiers.AbstractClassifier.runClassifier(Classifier,String[])"
"21","12","weka.classifiers.AbstractClassifier.classifyInstance(Instance)"
"16","8","weka.classifiers.AbstractClassifier.distributionForInstance(Instance)"
"15","6","weka.classifiers.AbstractClassifier.getOptions()"
"43","12","weka.classifiers.BVDecomposeSegCVSub.setOptions(String[])"
"30","7","weka.classifiers.BVDecomposeSegCVSub.getOptions()"
"145","52","weka.classifiers.BVDecomposeSegCVSub.decompose()"
"18","7","weka.classifiers.BVDecomposeSegCVSub.findCentralTendencies(Integer[])"
"27","5","weka.classifiers.BVDecomposeSegCVSub.toString()"
"15","5","weka.classifiers.BVDecomposeSegCVSub.main(String[])"
"9","7","weka.classifiers.meta.Stacking.implementsMoreEfficientBatchPrediction()"
"13","8","weka.classifiers.meta.Stacking.toString()"
"17","5","weka.classifiers.meta.Stacking.metaInstances(Instances)"
"30","9","weka.classifiers.meta.AdditiveRegression.initializeClassifier(Instances)"
"21","9","weka.classifiers.meta.AdditiveRegression.next()"
"10","6","weka.classifiers.meta.AdditiveRegression.classifyInstance(Instance)"
"18","7","weka.classifiers.meta.AdditiveRegression.toString()"
"29","6","weka.classifiers.meta.RandomSubSpace.buildClassifier(Instances)"
"27","12","weka.classifiers.meta.RandomSubSpace.distributionForInstance(Instance)"
"15","6","weka.classifiers.meta.RandomSubSpace.toString()"
"8","5","weka.classifiers.meta.WeightedInstancesHandlerWrapper.buildClassifier(Instances)"
"20","7","weka.classifiers.meta.AdaBoostM1.selectWeightQuantile(Instances,double)"
"28","5","weka.classifiers.meta.AdaBoostM1.initializeClassifier(Instances)"
"44","18","weka.classifiers.meta.AdaBoostM1.next()"
"12","5","weka.classifiers.meta.AdaBoostM1.done()"
"12","8","weka.classifiers.meta.AdaBoostM1.distributionForInstance(Instance)"
"19","8","weka.classifiers.meta.AdaBoostM1.toSource(String)"
"22","6","weka.classifiers.meta.AdaBoostM1.toString()"
"7","5","weka.classifiers.meta.IterativeClassifierOptimizer.Callable$1.call()"
"133","42","weka.classifiers.meta.IterativeClassifierOptimizer.buildClassifier(Instances)"
"11","5","weka.classifiers.meta.IterativeClassifierOptimizer.distributionForInstance(Instance)"
"14","5","weka.classifiers.meta.IterativeClassifierOptimizer.toString()"
"59","15","weka.classifiers.meta.IterativeClassifierOptimizer.setOptions(String[])"
"33","5","weka.classifiers.meta.IterativeClassifierOptimizer.getOptions()"
"8","6","weka.classifiers.meta.IterativeClassifierOptimizer.getMeasure(String)"
"25","11","weka.classifiers.meta.Vote.getCapabilities()"
"17","8","weka.classifiers.meta.Vote.buildClassifier(Instances)"
"23","14","weka.classifiers.meta.Vote.loadClassifiers(Instances)"
"29","11","weka.classifiers.meta.Vote.classifyInstance(Instance)"
"20","9","weka.classifiers.meta.Vote.classifyInstanceMedian(Instance)"
"26","10","weka.classifiers.meta.Vote.distributionForInstance(Instance)"
"25","13","weka.classifiers.meta.Vote.distributionForInstanceAverage(Instance)"
"22","11","weka.classifiers.meta.Vote.distributionForInstanceProduct(Instance)"
"40","20","weka.classifiers.meta.Vote.distributionForInstanceMajorityVoting(Instance)"
"24","16","weka.classifiers.meta.Vote.distributionForInstanceMax(Instance)"
"24","16","weka.classifiers.meta.Vote.distributionForInstanceMin(Instance)"
"41","16","weka.classifiers.meta.Vote.toString()"
"6","5","weka.classifiers.meta.MultiClassClassifierUpdateable.buildClassifier(Instances)"
"14","8","weka.classifiers.meta.MultiClassClassifierUpdateable.updateClassifier(Instance)"
"32","16","weka.classifiers.meta.MultiClassClassifierUpdateable.distributionForInstance(Instance)"
"14","6","weka.classifiers.meta.RandomCommittee.buildClassifier(Instances)"
"25","10","weka.classifiers.meta.RandomCommittee.distributionForInstance(Instance)"
"16","6","weka.classifiers.meta.RandomCommittee.getMembershipValues(Instance)"
"8","5","weka.classifiers.meta.RandomCommittee.numElements()"
"20","7","weka.classifiers.meta.AttributeSelectedClassifier.setOptions(String[])"
"48","19","weka.classifiers.meta.AttributeSelectedClassifier.buildClassifier(Instances)"
"15","7","weka.classifiers.meta.AttributeSelectedClassifier.distributionsForInstances(Instances)"
"14","10","weka.classifiers.meta.AttributeSelectedClassifier.getMeasure(String)"
"7","5","weka.classifiers.meta.MultiScheme.getClassifierSpec(int)"
"42","12","weka.classifiers.meta.MultiScheme.buildClassifier(Instances)"
"13","5","weka.classifiers.meta.MultiScheme.toString()"
"20","7","weka.classifiers.meta.LogitBoost.selectWeightQuantile(Instances,double)"
"35","10","weka.classifiers.meta.LogitBoost.setOptions(String[])"
"62","24","weka.classifiers.meta.LogitBoost.initializeClassifier(Instances)"
"13","8","weka.classifiers.meta.LogitBoost.next()"
"61","20","weka.classifiers.meta.LogitBoost.performIteration(sumOfWeights[][],sumOfWeights[][][][],sumOfWeights[][][][][][],Instances,double)"
"21","9","weka.classifiers.meta.LogitBoost.processInstance(Instance)"
"29","9","weka.classifiers.meta.LogitBoost.distributionsForInstances(Instances)"
"34","13","weka.classifiers.meta.LogitBoost.toSource(String)"
"27","10","weka.classifiers.meta.LogitBoost.toString()"
"17","5","weka.classifiers.meta.ClassificationViaRegression.buildClassifier(Instances)"
"19","7","weka.classifiers.meta.ClassificationViaRegression.distributionForInstance(Instance)"
"17","8","weka.classifiers.meta.ClassificationViaRegression.distributionsForInstances(Instances)"
"16","6","weka.classifiers.meta.Bagging.getOptions()"
"7","5","weka.classifiers.meta.Bagging.measureOutOfBagError()"
"50","18","weka.classifiers.meta.Bagging.buildClassifier(Instances)"
"25","10","weka.classifiers.meta.Bagging.distributionForInstance(Instance)"
"12","6","weka.classifiers.meta.Bagging.toString()"
"16","6","weka.classifiers.meta.Bagging.getMembershipValues(Instance)"
"8","5","weka.classifiers.meta.Bagging.numElements()"
"20","15","weka.classifiers.meta.MultiClassClassifier.RandomCode.good()"
"87","19","weka.classifiers.meta.MultiClassClassifier.buildClassifier(Instances)"
"18","5","weka.classifiers.meta.MultiClassClassifier.individualPredictions(Instance)"
"59","23","weka.classifiers.meta.MultiClassClassifier.distributionForInstance(Instance)"
"23","9","weka.classifiers.meta.MultiClassClassifier.toString()"
"37","16","weka.classifiers.meta.MultiClassClassifier.pairwiseCoupling(String[][][],String[][][][][])"
"63","16","weka.classifiers.meta.RegressionByDiscretization.buildClassifier(Instances)"
"18","5","weka.classifiers.meta.RegressionByDiscretization.getDensityEstimator(Instance,boolean)"
"17","5","weka.classifiers.meta.RegressionByDiscretization.classifyInstance(Instance)"
"17","5","weka.classifiers.meta.RegressionByDiscretization.getOptions()"
"27","18","weka.classifiers.meta.CVParameterSelection.CVParameter.CVParameter(String)"
"17","8","weka.classifiers.meta.CVParameterSelection.createOptions()"
"39","11","weka.classifiers.meta.CVParameterSelection.findParamsByCrossValidation(int,Instances,Random)"
"27","7","weka.classifiers.meta.CVParameterSelection.buildClassifier(Instances)"
"22","7","weka.classifiers.meta.CVParameterSelection.toString()"
"21","5","weka.classifiers.meta.CostSensitiveClassifier.setOptions(String[])"
"26","12","weka.classifiers.meta.CostSensitiveClassifier.buildClassifier(Instances)"
"14","7","weka.classifiers.meta.CostSensitiveClassifier.distributionsForInstances(Instances)"
"9","5","weka.classifiers.ParallelMultipleClassifiersCombiner.buildClassifier(Instances)"
"7","5","weka.classifiers.ParallelMultipleClassifiersCombiner.block(boolean)"
"21","5","weka.classifiers.ParallelMultipleClassifiersCombiner.buildClassifiers(Instances)"
"13","6","weka.classifiers.ParallelMultipleClassifiersCombiner.completedClassifier(int,boolean)"
"41","17","weka.classifiers.bayes.net.MarginCalculator.process(bayesNet[][],BayesNet)"
"10","5","weka.classifiers.bayes.net.MarginCalculator.initialize(JunctionTreeNode[],JunctionTreeNode[][],Integer[],Integer[],Integer[][])"
"19","6","weka.classifiers.bayes.net.MarginCalculator.getJunctionTree(Integer[],Integer[],Integer[][],Integer[][][],BayesNet)"
"20","8","weka.classifiers.bayes.net.MarginCalculator.JunctionTreeSeparator.update(JunctionTreeNode)"
"29","11","weka.classifiers.bayes.net.MarginCalculator.JunctionTreeNode.initializeUp()"
"34","12","weka.classifiers.bayes.net.MarginCalculator.JunctionTreeNode.initializeDown(boolean)"
"20","8","weka.classifiers.bayes.net.MarginCalculator.JunctionTreeNode.calcMarginalProbabilities()"
"35","13","weka.classifiers.bayes.net.MarginCalculator.JunctionTreeNode.calculatePotentials(BayesNet,Integer,Integer[])"
"28","12","weka.classifiers.bayes.net.MarginCalculator.JunctionTreeNode.setEvidence(int,int)"
"36","13","weka.classifiers.bayes.net.MarginCalculator.JunctionTreeNode.updateEvidence(JunctionTreeNode)"
"15","8","weka.classifiers.bayes.net.MarginCalculator.getCliqueTree(iCPTnew[][],Integer[],Integer[])"
"30","20","weka.classifiers.bayes.net.MarginCalculator.getCliques(Integer[][],Integer[][][][])"
"13","7","weka.classifiers.bayes.net.MarginCalculator.moralizeNode(ParentSet,int,int[][])"
"18","10","weka.classifiers.bayes.net.MarginCalculator.fillIn(nParent2[][][],nParent2[][][][][])"
"23","10","weka.classifiers.bayes.net.MarginCalculator.getMaxCardOrder(bAdjacencyMatrix[][][])"
"9","8","weka.classifiers.bayes.net.MarginCalculator.setEvidence(int,int)"
"14","6","weka.classifiers.bayes.net.ParentSet.deleteParent(int,Instances)"
"26","15","weka.classifiers.bayes.net.search.SearchAlgorithm.addArcMakesSense(BayesNet,Instances,int,int)"
"28","17","weka.classifiers.bayes.net.search.SearchAlgorithm.reverseArcMakesSense(BayesNet,Instances,int,int)"
"23","12","weka.classifiers.bayes.net.search.SearchAlgorithm.buildStructure(BayesNet,Instances)"
"24","14","weka.classifiers.bayes.net.search.SearchAlgorithm.doMarkovBlanketCorrection(BayesNet,Instances)"
"11","5","weka.classifiers.bayes.net.search.ci.CISearchAlgorithm.isConditionalIndependent(int,int,int[],int)"
"5","5","weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm.SeparationSet.contains(int)"
"20","6","weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm.search(BayesNet,Instances)"
"33","14","weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm.calcDependencyGraph(m_instances[][],SeparationSet[][])"
"31","14","weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm.existsSepSet(int,int,int,int[][])"
"5","5","weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm.next(int,int,int,int[][])"
"11","11","weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm.calcVeeNodes(x[][],x[][][][],SeparationSet[][])"
"48","77","weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm.calcArcDirections(iNode3[][],iNode3[][][][])"
"43","14","weka.classifiers.bayes.net.search.local.K2.search(BayesNet,Instances)"
"13","7","weka.classifiers.bayes.net.search.local.GeneticSearch.BayesNetRepresentation.calcScore()"
"16","11","weka.classifiers.bayes.net.search.local.GeneticSearch.BayesNetRepresentation.hasCycles()"
"12","5","weka.classifiers.bayes.net.search.local.GeneticSearch.BayesNetRepresentation.crossOver(BayesNetRepresentation)"
"60","24","weka.classifiers.bayes.net.search.local.GeneticSearch.search(BayesNet,Instances)"
"17","5","weka.classifiers.bayes.net.search.local.GeneticSearch.setOptions(String[])"
"34","11","weka.classifiers.bayes.net.search.local.LAGDHillClimber.lookAheadInGoodDirectionsSearch(BayesNet,Instances,int,int)"
"8","5","weka.classifiers.bayes.net.search.local.LAGDHillClimber.getAntiOperation(Operation)"
"17","6","weka.classifiers.bayes.net.search.local.LAGDHillClimber.getGoodOperations(BayesNet,Instances,int)"
"29","9","weka.classifiers.bayes.net.search.local.LAGDHillClimber.getOptimalOperations(BayesNet,Instances,int,int)"
"24","5","weka.classifiers.bayes.net.search.local.RepeatedHillClimber.search(BayesNet,Instances)"
"17","9","weka.classifiers.bayes.net.search.local.RepeatedHillClimber.generateRandomNet(BayesNet,Instances)"
"44","10","weka.classifiers.bayes.net.search.local.SimulatedAnnealing.search(BayesNet,Instances)"
"14","5","weka.classifiers.bayes.net.search.local.SimulatedAnnealing.setOptions(String[])"
"4","5","weka.classifiers.bayes.net.search.local.HillClimber.Operation.equals(Operation)"
"9","7","weka.classifiers.bayes.net.search.local.HillClimber.Cache.get(Operation)"
"13","6","weka.classifiers.bayes.net.search.local.HillClimber.initCache(BayesNet,Instances)"
"18","7","weka.classifiers.bayes.net.search.local.HillClimber.performOperation(BayesNet,Instances,Operation)"
"12","7","weka.classifiers.bayes.net.search.local.HillClimber.findBestArcToAdd(BayesNet,Instances,Operation)"
"11","5","weka.classifiers.bayes.net.search.local.HillClimber.findBestArcToDelete(BayesNet,Instances,Operation)"
"13","7","weka.classifiers.bayes.net.search.local.HillClimber.findBestArcToReverse(BayesNet,Instances,Operation)"
"12","5","weka.classifiers.bayes.net.search.local.HillClimber.updateCache(int,int,ParentSet)"
"13","5","weka.classifiers.bayes.net.search.local.HillClimber.getOptions()"
"30","7","weka.classifiers.bayes.net.search.local.TabuSearch.search(BayesNet,Instances)"
"19","8","weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm.logScore(int)"
"30","6","weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm.calcNodeScoreADTree(int)"
"45","18","weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm.calcScoreOfCounts(double[],int,int,Instances)"
"45","18","weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm.calcScoreOfCounts2(double[][],int,int,Instances)"
"14","6","weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm.setOptions(String[])"
"23","7","weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm.getOptions()"
"57","30","weka.classifiers.bayes.net.search.local.TAN.buildStructure(BayesNet,Instances)"
"14","7","weka.classifiers.bayes.net.search.fixed.FromFile.buildStructure(BayesNet,Instances)"
"40","14","weka.classifiers.bayes.net.search.global.K2.search(BayesNet,Instances)"
"12","7","weka.classifiers.bayes.net.search.global.GeneticSearch.BayesNetRepresentation.calcGlobalScore()"
"16","11","weka.classifiers.bayes.net.search.global.GeneticSearch.BayesNetRepresentation.hasCycles()"
"12","5","weka.classifiers.bayes.net.search.global.GeneticSearch.BayesNetRepresentation.crossOver(BayesNetRepresentation)"
"58","23","weka.classifiers.bayes.net.search.global.GeneticSearch.search(BayesNet,Instances)"
"17","5","weka.classifiers.bayes.net.search.global.GeneticSearch.setOptions(String[])"
"17","9","weka.classifiers.bayes.net.search.global.RepeatedHillClimber.generateRandomNet(BayesNet,Instances)"
"38","9","weka.classifiers.bayes.net.search.global.SimulatedAnnealing.search(BayesNet,Instances)"
"14","5","weka.classifiers.bayes.net.search.global.SimulatedAnnealing.setOptions(String[])"
"4","5","weka.classifiers.bayes.net.search.global.HillClimber.Operation.equals(Operation)"
"18","7","weka.classifiers.bayes.net.search.global.HillClimber.performOperation(BayesNet,Instances,Operation)"
"13","7","weka.classifiers.bayes.net.search.global.HillClimber.findBestArcToAdd(BayesNet,Instances,Operation)"
"12","5","weka.classifiers.bayes.net.search.global.HillClimber.findBestArcToDelete(BayesNet,Instances,Operation)"
"14","7","weka.classifiers.bayes.net.search.global.HillClimber.findBestArcToReverse(BayesNet,Instances,Operation)"
"10","8","weka.classifiers.bayes.net.search.global.GlobalScoreSearchAlgorithm.calcScore(BayesNet)"
"28","5","weka.classifiers.bayes.net.search.global.GlobalScoreSearchAlgorithm.kFoldCV(BayesNet,int)"
"8","5","weka.classifiers.bayes.net.search.global.GlobalScoreSearchAlgorithm.accuracyIncrease(Instance)"
"19","6","weka.classifiers.bayes.net.search.global.GlobalScoreSearchAlgorithm.getOptions()"
"26","6","weka.classifiers.bayes.net.search.global.TabuSearch.search(BayesNet,Instances)"
"52","24","weka.classifiers.bayes.net.search.global.TAN.buildStructure(BayesNet,Instances)"
"10","7","weka.classifiers.bayes.net.VaryNode.getCounts(iNode[],iNode[][],iNode[][][],int,int,ADNode,boolean)"
"26","8","weka.classifiers.bayes.net.EditableBayesNet.EditableBayesNet(Instances)"
"24","12","weka.classifiers.bayes.net.EditableBayesNet.setData(Instances)"
"30","8","weka.classifiers.bayes.net.EditableBayesNet.addNode(String,int,int,int)"
"40","10","weka.classifiers.bayes.net.EditableBayesNet.deleteNode(int)"
"16","7","weka.classifiers.bayes.net.EditableBayesNet.deleteSelection(Integer)"
"10","6","weka.classifiers.bayes.net.EditableBayesNet.getDefinition(Document,String)"
"99","26","weka.classifiers.bayes.net.EditableBayesNet.paste(String,int)"
"45","14","weka.classifiers.bayes.net.EditableBayesNet.addNodeValue(int,String)"
"58","21","weka.classifiers.bayes.net.EditableBayesNet.delNodeValue(int,String)"
"15","6","weka.classifiers.bayes.net.EditableBayesNet.setPosition(int,int,int)"
"24","10","weka.classifiers.bayes.net.EditableBayesNet.setPosition(int,int,int,Integer)"
"11","6","weka.classifiers.bayes.net.EditableBayesNet.alignLeft(Integer)"
"11","6","weka.classifiers.bayes.net.EditableBayesNet.alignRight(Integer)"
"11","6","weka.classifiers.bayes.net.EditableBayesNet.alignTop(Integer)"
"11","6","weka.classifiers.bayes.net.EditableBayesNet.alignBottom(Integer)"
"14","8","weka.classifiers.bayes.net.EditableBayesNet.centerHorizontal(Integer)"
"14","8","weka.classifiers.bayes.net.EditableBayesNet.centerVertical(Integer)"
"14","8","weka.classifiers.bayes.net.EditableBayesNet.spaceHorizontal(Integer)"
"14","8","weka.classifiers.bayes.net.EditableBayesNet.spaceVertical(Integer)"
"33","9","weka.classifiers.bayes.net.EditableBayesNet.toXMLBIF03()"
"33","7","weka.classifiers.bayes.net.EditableBayesNet.toXMLBIF03(Integer)"
"36","9","weka.classifiers.bayes.net.EditableBayesNet.DeleteNodeAction.undo()"
"24","6","weka.classifiers.bayes.net.EditableBayesNet.DeleteSelectionAction.DeleteSelectionAction(Integer)"
"46","15","weka.classifiers.bayes.net.EditableBayesNet.DeleteSelectionAction.undo()"
"16","5","weka.classifiers.bayes.net.EditableBayesNet.DelValueAction.DelValueAction(int,String)"
"23","6","weka.classifiers.bayes.net.BIFReader.buildStructure(Document)"
"49","10","weka.classifiers.bayes.net.BIFReader.buildInstances(Document,String)"
"10","6","weka.classifiers.bayes.net.BIFReader.getDefinition(Document,String)"
"12","7","weka.classifiers.bayes.net.BIFReader.missingArcs(BayesNet)"
"12","7","weka.classifiers.bayes.net.BIFReader.extraArcs(BayesNet)"
"38","15","weka.classifiers.bayes.net.BIFReader.divergence(BayesNet)"
"12","7","weka.classifiers.bayes.net.BIFReader.reversedArcs(BayesNet)"
"7","5","weka.classifiers.bayes.net.BIFReader.getNode(String)"
"23","8","weka.classifiers.bayes.net.ADNode.makeVaryNode(int,Integer,Instances)"
"19","8","weka.classifiers.bayes.net.ADNode.getCounts(instances[],instances[][],instances[][][],int,int,boolean)"
"58","15","weka.classifiers.bayes.net.estimate.BMAEstimator.estimateCPTs(BayesNet)"
"27","10","weka.classifiers.bayes.net.estimate.DiscreteEstimatorBayes.logScore(int,int)"
"18","7","weka.classifiers.bayes.net.estimate.DiscreteEstimatorBayes.main(String[])"
"10","5","weka.classifiers.bayes.net.estimate.SimpleEstimator.initCPTs(BayesNet)"
"29","11","weka.classifiers.bayes.net.estimate.SimpleEstimator.distributionForInstance(BayesNet,Instance)"
"18","7","weka.classifiers.bayes.net.estimate.DiscreteEstimatorFullBayes.main(String[])"
"61","18","weka.classifiers.bayes.net.estimate.MultiNomialBMAEstimator.estimateCPTs(BayesNet)"
"29","10","weka.classifiers.bayes.net.estimate.MultiNomialBMAEstimator.distributionForInstance(BayesNet,Instance)"
"33","6","weka.classifiers.bayes.net.GUI.ActionGenerateData.ActionListener$1.actionPerformed(ActionEvent)"
"13","6","weka.classifiers.bayes.net.GUI.ActionLearnCPT.actionPerformed(ActionEvent)"
"15","5","weka.classifiers.bayes.net.GUI.ActionSetData.actionPerformed(ActionEvent)"
"20","7","weka.classifiers.bayes.net.GUI.ActionAddNode.ActionListener$1.actionPerformed(ActionEvent)"
"15","5","weka.classifiers.bayes.net.GUI.ActionDeleteNode.actionPerformed(ActionEvent)"
"11","6","weka.classifiers.bayes.net.GUI.ActionAddArc.actionPerformed(ActionEvent)"
"14","5","weka.classifiers.bayes.net.GUI.ActionSave.saveAs()"
"9","7","weka.classifiers.bayes.net.GUI.ActionQuit.actionPerformed(ActionEvent)"
"30","10","weka.classifiers.bayes.net.GUI.ActionZoomIn.actionPerformed(ActionEvent)"
"27","7","weka.classifiers.bayes.net.GUI.ActionZoomOut.actionPerformed(ActionEvent)"
"21","6","weka.classifiers.bayes.net.GUI.ActionLayout.ActionListener$1.actionPerformed(ActionEvent)"
"28","8","weka.classifiers.bayes.net.GUI.ActionListener$1.actionPerformed(ActionEvent)"
"17","6","weka.classifiers.bayes.net.GUI.GraphPanel.paintComponent(Graphics)"
"65","16","weka.classifiers.bayes.net.GUI.GraphPanel.drawNode(Graphics,int,int)"
"38","6","weka.classifiers.bayes.net.GUI.GraphPanel.drawArrow(Graphics,int,int,int,int)"
"24","7","weka.classifiers.bayes.net.GUI.GraphPanel.print(Graphics,PageFormat,int)"
"17","7","weka.classifiers.bayes.net.GUI.GraphVisualizerTableModel.randomize()"
"27","11","weka.classifiers.bayes.net.GUI.GraphVisualizerTableModel.setValueAt(Object,int,int)"
"25","9","weka.classifiers.bayes.net.GUI.GraphVisualizerMouseListener.mouseClicked(MouseEvent)"
"50","12","weka.classifiers.bayes.net.GUI.GraphVisualizerMouseListener.handleRightClick(MouseEvent,int,int)"
"24","11","weka.classifiers.bayes.net.GUI.GraphVisualizerMouseListener.ActionListener$1.actionPerformed(ActionEvent)"
"17","11","weka.classifiers.bayes.net.GUI.GraphVisualizerMouseListener.ActionListener$1.actionPerformed(ActionEvent)"
"149","18","weka.classifiers.bayes.net.GUI.GraphVisualizerMouseListener.handleRightNodeClick(MouseEvent)"
"28","8","weka.classifiers.bayes.net.GUI.GraphVisualizerMouseMotionListener.mouseDragged(MouseEvent)"
"11","6","weka.classifiers.bayes.net.GUI.GraphVisualizerMouseMotionListener.mouseMoved(MouseEvent)"
"19","8","weka.classifiers.bayes.net.GUI.updateStatus()"
"32","16","weka.classifiers.bayes.net.GUI.addArcInto(int)"
"13","9","weka.classifiers.bayes.net.GUI.renameNode(int)"
"10","5","weka.classifiers.bayes.net.GUI.addValue()"
"111","15","weka.classifiers.bayes.net.GUI.editCPT(int)"
"28","7","weka.classifiers.bayes.net.BayesNetGenerator.Init(int,int)"
"22","12","weka.classifiers.bayes.net.BayesNetGenerator.generateRandomNetworkStructure(int,int)"
"35","9","weka.classifiers.bayes.net.BayesNetGenerator.generateTree(int)"
"23","10","weka.classifiers.bayes.net.BayesNetGenerator.generateRandomDistributions(int,int)"
"18","5","weka.classifiers.bayes.net.BayesNetGenerator.generateInstances()"
"23","12","weka.classifiers.bayes.net.BayesNetGenerator.getOrder()"
"30","8","weka.classifiers.bayes.net.BayesNetGenerator.setOptions(String[])"
"13","6","weka.classifiers.bayes.net.BayesNetGenerator.main(String[])"
"47","17","weka.classifiers.bayes.NaiveBayesMultinomialText.distributionForInstance(Instance)"
"44","18","weka.classifiers.bayes.NaiveBayesMultinomialText.tokenizeInstance(Instance,boolean)"
"12","8","weka.classifiers.bayes.NaiveBayesMultinomialText.pruneDictionary(boolean)"
"51","14","weka.classifiers.bayes.NaiveBayesMultinomialText.setOptions(String[])"
"35","9","weka.classifiers.bayes.NaiveBayesMultinomialText.getOptions()"
"35","12","weka.classifiers.bayes.NaiveBayesMultinomialText.toString()"
"30","12","weka.classifiers.bayes.NaiveBayesMultinomialText.aggregate(NaiveBayesMultinomialText)"
"6","5","weka.classifiers.bayes.NaiveBayesMultinomialText.finalizeAggregation()"
"20","10","weka.classifiers.bayes.NaiveBayesMultinomial.buildClassifier(Instances)"
"15","6","weka.classifiers.bayes.NaiveBayesMultinomial.toString()"
"57","19","weka.classifiers.bayes.NaiveBayes.buildClassifier(Instances)"
"26","12","weka.classifiers.bayes.NaiveBayes.distributionForInstance(Instance)"
"12","6","weka.classifiers.bayes.NaiveBayes.getOptions()"
"195","58","weka.classifiers.bayes.NaiveBayes.toString()"
"18","6","weka.classifiers.bayes.NaiveBayes.toStringOriginal()"
"10","8","weka.classifiers.bayes.NaiveBayes.aggregate(NaiveBayes)"
"15","5","weka.classifiers.bayes.BayesNet.normalizeDataSet(Instances)"
"20","7","weka.classifiers.bayes.BayesNet.countsForInstance(Instance)"
"16","5","weka.classifiers.bayes.BayesNet.setOptions(String[])"
"18","9","weka.classifiers.bayes.BayesNet.partitionOptions(String[])"
"26","6","weka.classifiers.bayes.BayesNet.toString()"
"32","9","weka.classifiers.bayes.BayesNet.toXMLBIF03()"
"23","7","weka.classifiers.bayes.BayesNet.XMLNormalize(String)"
"20","19","weka.classifiers.bayes.BayesNet.getMeasure(String)"
"13","7","weka.classifiers.bayes.NaiveBayesMultinomialUpdateable.updateClassifier(Instance)"
"15","6","weka.classifiers.bayes.NaiveBayesMultinomialUpdateable.toString()"
"71","17","weka.classifiers.pmml.producer.LogisticProducerHelper.toPMML(Instances,Instances,Instances[][],int)"
"39","17","weka.classifiers.pmml.consumer.NeuralNetwork.NeuralLayer.NeuralLayer(Element)"
"21","7","weka.classifiers.pmml.consumer.NeuralNetwork.NeuralLayer.computeOutput(Double)"
"13","5","weka.classifiers.pmml.consumer.NeuralNetwork.NeuralLayer.toString()"
"22","9","weka.classifiers.pmml.consumer.NeuralNetwork.Neuron.Neuron(Element,NeuralLayer)"
"22","8","weka.classifiers.pmml.consumer.NeuralNetwork.Neuron.getValue(Double)"
"16","6","weka.classifiers.pmml.consumer.NeuralNetwork.Neuron.toString()"
"34","13","weka.classifiers.pmml.consumer.NeuralNetwork.NeuralOutputs.NeuralOutputs(Element,MiningSchema)"
"18","10","weka.classifiers.pmml.consumer.NeuralNetwork.NeuralOutputs.getOuput(Double,Double[])"
"47","23","weka.classifiers.pmml.consumer.NeuralNetwork.NeuralNetwork(Element,Instances,MiningSchema)"
"44","18","weka.classifiers.pmml.consumer.NeuralNetwork.distributionForInstance(Instance)"
"14","8","weka.classifiers.pmml.consumer.PMMLClassifier.setCreatorApplication(Document)"
"14","10","weka.classifiers.pmml.consumer.SupportVectorMachineModel.Kernel.getKernel(Element,Logger)"
"29","13","weka.classifiers.pmml.consumer.SupportVectorMachineModel.PolynomialKernel.PolynomialKernel(Element,Logger)"
"11","5","weka.classifiers.pmml.consumer.SupportVectorMachineModel.RadialBasisKernel.RadialBasisKernel(Element,Logger)"
"20","9","weka.classifiers.pmml.consumer.SupportVectorMachineModel.SigmoidKernel.SigmoidKernel(Element,Logger)"
"34","13","weka.classifiers.pmml.consumer.SupportVectorMachineModel.SupportVectorMachine.distributionForInstance(double[][],Kernel,VectorDictionary,VectorDictionary[],classificationMethod,double)"
"56","25","weka.classifiers.pmml.consumer.SupportVectorMachineModel.SupportVectorMachine.SupportVectorMachine(Element,MiningSchema,VectorDictionary,SVM_representation,int,Logger)"
"15","5","weka.classifiers.pmml.consumer.SupportVectorMachineModel.SupportVectorMachine.toString()"
"43","27","weka.classifiers.pmml.consumer.SupportVectorMachineModel.SupportVectorMachineModel(Element,Instances,MiningSchema)"
"58","27","weka.classifiers.pmml.consumer.SupportVectorMachineModel.distributionForInstance(Instance)"
"21","5","weka.classifiers.pmml.consumer.SupportVectorMachineModel.toString()"
"14","8","weka.classifiers.pmml.consumer.TreeModel.ScoreDistribution.ScoreDistribution(Element,MiningSchema,double)"
"8","5","weka.classifiers.pmml.consumer.TreeModel.Predicate.booleanToEval(boolean,boolean)"
"29","10","weka.classifiers.pmml.consumer.TreeModel.Predicate.getPredicate(Element,MiningSchema)"
"29","13","weka.classifiers.pmml.consumer.TreeModel.SimplePredicate.SimplePredicate(Element,MiningSchema)"
"14","5","weka.classifiers.pmml.consumer.TreeModel.CompoundPredicate.BooleanOperator.evaluate(Predicate,Predicate[])"
"23","9","weka.classifiers.pmml.consumer.TreeModel.CompoundPredicate.CompoundPredicate(Element,MiningSchema)"
"17","6","weka.classifiers.pmml.consumer.TreeModel.CompoundPredicate.toString(int,boolean)"
"10","7","weka.classifiers.pmml.consumer.TreeModel.SimpleSetPredicate.BooleanOperator.evaluate(Predicate.Eval[],int,Array,Attribute)"
"30","17","weka.classifiers.pmml.consumer.TreeModel.SimpleSetPredicate.SimpleSetPredicate(Element,MiningSchema)"
"31","18","weka.classifiers.pmml.consumer.TreeModel.TreeNode.TreeNode(Element,MiningSchema)"
"15","7","weka.classifiers.pmml.consumer.TreeModel.TreeNode.getScoreDistributions(Element,MiningSchema)"
"17","7","weka.classifiers.pmml.consumer.TreeModel.TreeNode.dumpGraph(StringBuffer)"
"20","6","weka.classifiers.pmml.consumer.TreeModel.TreeNode.dumpTree(int,StringBuffer)"
"22","7","weka.classifiers.pmml.consumer.TreeModel.TreeNode.score(m_scoreString[][],Attribute)"
"36","16","weka.classifiers.pmml.consumer.TreeModel.TreeNode.missingValueStrategyWeightedConfidence(preds[][],Attribute)"
"14","9","weka.classifiers.pmml.consumer.TreeModel.TreeNode.freqCountsForAggNodesStrategy(preds[][],Attribute)"
"23","9","weka.classifiers.pmml.consumer.TreeModel.TreeNode.missingValueStrategyAggregateNodes(counts[][],Attribute)"
"19","8","weka.classifiers.pmml.consumer.TreeModel.TreeNode.missingValueStrategyDefaultChild(preds[][],Attribute)"
"17","6","weka.classifiers.pmml.consumer.TreeModel.TreeNode.missingValueStrategyLastPrediction(preds[][],Attribute)"
"18","7","weka.classifiers.pmml.consumer.TreeModel.TreeNode.missingValueStrategyNullPrediction(preds[][],Attribute)"
"31","17","weka.classifiers.pmml.consumer.TreeModel.TreeModel(Element,Instances,MiningSchema)"
"82","47","weka.classifiers.pmml.consumer.GeneralRegression.GeneralRegression(Element,Instances,MiningSchema)"
"17","8","weka.classifiers.pmml.consumer.GeneralRegression.readParameterList(Element)"
"28","12","weka.classifiers.pmml.consumer.GeneralRegression.readFactorsAndCovariates(Element,String)"
"51","20","weka.classifiers.pmml.consumer.GeneralRegression.readPPMatrix(Element)"
"57","33","weka.classifiers.pmml.consumer.GeneralRegression.readParamMatrix(Element)"
"50","21","weka.classifiers.pmml.consumer.GeneralRegression.toString()"
"48","23","weka.classifiers.pmml.consumer.GeneralRegression.printPPMatrix(StringBuffer)"
"49","21","weka.classifiers.pmml.consumer.GeneralRegression.printParameterMatrix(StringBuffer)"
"20","8","weka.classifiers.pmml.consumer.GeneralRegression.incomingParamVector(buff.append[][])"
"37","16","weka.classifiers.pmml.consumer.GeneralRegression.distributionForInstance(Instance)"
"29","14","weka.classifiers.pmml.consumer.GeneralRegression.computeResponses(preds[],preds[][],preds[][][])"
"14","5","weka.classifiers.pmml.consumer.GeneralRegression.computeProbabilitiesMultinomialLogistic(Exception[])"
"32","18","weka.classifiers.pmml.consumer.GeneralRegression.computeResponseGeneralizedLinear(sum[],sum[][])"
"19","8","weka.classifiers.pmml.consumer.GeneralRegression.computeResponseOrdinalMultinomial(linkParam[],linkParam[][])"
"11","6","weka.classifiers.pmml.consumer.Regression.RegressionTable.Predictor.Predictor(Element,Instances)"
"12","6","weka.classifiers.pmml.consumer.Regression.RegressionTable.CategoricalPredictor.CategoricalPredictor(Element,Instances)"
"26","16","weka.classifiers.pmml.consumer.Regression.RegressionTable.PredictorTerm.PredictorTerm(Element,Instances)"
"33","13","weka.classifiers.pmml.consumer.Regression.RegressionTable.RegressionTable(Element,int,MiningSchema)"
"16","6","weka.classifiers.pmml.consumer.Regression.Regression(Element,Instances,MiningSchema)"
"10","5","weka.classifiers.pmml.consumer.Regression.setUpRegressionTables(Element,int)"
"27","9","weka.classifiers.pmml.consumer.Regression.determineNormalization(Element)"
"15","5","weka.classifiers.pmml.consumer.Regression.toString()"
"86","37","weka.classifiers.pmml.consumer.Regression.distributionForInstance(Instance)"
"15","6","weka.classifiers.pmml.consumer.RuleSetModel.SimpleRule.toString(String,int)"
"42","24","weka.classifiers.pmml.consumer.RuleSetModel.SimpleRule.SimpleRule(Element,MiningSchema)"
"16","5","weka.classifiers.pmml.consumer.RuleSetModel.SimpleRule.score(ruleCollection.add[][],Attribute)"
"14","5","weka.classifiers.pmml.consumer.RuleSetModel.CompoundRule.CompoundRule(Element,MiningSchema)"
"15","6","weka.classifiers.pmml.consumer.RuleSetModel.RuleSet.toString()"
"60","29","weka.classifiers.pmml.consumer.RuleSetModel.RuleSet.RuleSet(Element,MiningSchema)"
"54","24","weka.classifiers.pmml.consumer.RuleSetModel.RuleSet.score(tempRule[][],Attribute)"
"19","10","weka.classifiers.pmml.consumer.RuleSetModel.RuleSetModel(Element,Instances,MiningSchema)"
"19","7","weka.classifiers.MultipleClassifiersCombiner.setOptions(String[])"
"22","6","weka.classifiers.lazy.LWL.setOptions(String[])"
"4","8","weka.classifiers.lazy.LWL.setWeightingKernel(int)"
"15","5","weka.classifiers.lazy.LWL.buildClassifier(Instances)"
"9","6","weka.classifiers.lazy.LWL.updateClassifier(Instance)"
"66","26","weka.classifiers.lazy.LWL.distributionForInstance(Instance)"
"33","12","weka.classifiers.lazy.LWL.toString()"
"7","5","weka.classifiers.lazy.KStar.updateClassifier(Instance)"
"38","13","weka.classifiers.lazy.KStar.distributionForInstance(Instance)"
"15","5","weka.classifiers.lazy.KStar.instanceTransformationProbability(Instance,Instance)"
"23","7","weka.classifiers.lazy.KStar.setOptions(String[])"
"20","6","weka.classifiers.lazy.KStar.getOptions()"
"91","23","weka.classifiers.lazy.kstar.KStarNumericAttribute.scaleFactorUsingBlend()"
"21","5","weka.classifiers.lazy.kstar.KStarNumericAttribute.calculateSphereSize(double,KStarWrapper)"
"102","25","weka.classifiers.lazy.kstar.KStarNumericAttribute.scaleFactorUsingEntropy()"
"34","12","weka.classifiers.lazy.kstar.KStarNumericAttribute.calculateEntropy(double,KStarWrapper)"
"22","6","weka.classifiers.lazy.kstar.KStarNominalAttribute.transProb()"
"89","20","weka.classifiers.lazy.kstar.KStarNominalAttribute.stopProbUsingEntropy()"
"34","12","weka.classifiers.lazy.kstar.KStarNominalAttribute.calculateEntropy(double,KStarWrapper)"
"55","12","weka.classifiers.lazy.kstar.KStarNominalAttribute.stopProbUsingBlend()"
"22","6","weka.classifiers.lazy.kstar.KStarNominalAttribute.calculateSphereSize(int,double,KStarWrapper)"
"8","5","weka.classifiers.lazy.kstar.KStarCache.CacheTable.containsKey(double)"
"13","6","weka.classifiers.lazy.kstar.KStarCache.CacheTable.insert(double,double,double)"
"8","5","weka.classifiers.lazy.kstar.KStarCache.CacheTable.getEntry(double)"
"17","7","weka.classifiers.lazy.IBk.buildClassifier(Instances)"
"15","9","weka.classifiers.lazy.IBk.updateClassifier(Instance)"
"17","10","weka.classifiers.lazy.IBk.distributionForInstance(Instance)"
"31","8","weka.classifiers.lazy.IBk.setOptions(String[])"
"19","5","weka.classifiers.lazy.IBk.getOptions()"
"19","10","weka.classifiers.lazy.IBk.toString()"
"35","11","weka.classifiers.lazy.IBk.makeDistribution(Instances,Instances[])"
"60","25","weka.classifiers.lazy.IBk.crossValidate()"
"15","9","weka.classifiers.lazy.IBk.pruneToK(Instances,Instances[],int)"
"16","6","weka.classifiers.rules.RuleStats.countData()"
"20","7","weka.classifiers.rules.RuleStats.countData(int,Instances,Instances[][])"
"25","6","weka.classifiers.rules.RuleStats.computeSimpleStats(int,Instances,Instances[],Instances[][])"
"17","6","weka.classifiers.rules.RuleStats.addAndUpdate(Rule)"
"21","5","weka.classifiers.rules.RuleStats.potential(int,double,double[],double[][],boolean)"
"38","8","weka.classifiers.rules.RuleStats.minDataDLIfDeleted(int,double,boolean)"
"18","5","weka.classifiers.rules.RuleStats.minDataDLIfExists(int,double,boolean)"
"24","7","weka.classifiers.rules.RuleStats.reduceDL(double,boolean)"
"13","5","weka.classifiers.rules.RuleStats.rmCoveredBySuccessives(Instances,Rule,int)"
"23","10","weka.classifiers.rules.RuleStats.stratify(Instances,int,Random)"
"18","6","weka.classifiers.rules.RuleStats.combinedDL(double,double)"
"22","8","weka.classifiers.rules.OneR.OneRRule.toString()"
"15","10","weka.classifiers.rules.OneR.classifyInstance(Instance)"
"21","9","weka.classifiers.rules.OneR.buildClassifier(Instances)"
"72","20","weka.classifiers.rules.OneR.newNumericRule(Attribute,Instances,Instances[])"
"44","8","weka.classifiers.rules.OneR.toSource(String)"
"11","5","weka.classifiers.rules.OneR.toString()"
"29","6","weka.classifiers.rules.DecisionTable.insertIntoTable(Instance,Instance[])"
"47","14","weka.classifiers.rules.DecisionTable.evaluateInstanceLeaveOneOut(Instance,Instance[])"
"71","18","weka.classifiers.rules.DecisionTable.evaluateFoldCV(Instances,Instances[])"
"63","27","weka.classifiers.rules.DecisionTable.estimatePerformance(BitSet,int)"
"33","11","weka.classifiers.rules.DecisionTable.setOptions(String[])"
"27","8","weka.classifiers.rules.DecisionTable.getOptions()"
"52","7","weka.classifiers.rules.DecisionTable.buildClassifier(Instances)"
"31","5","weka.classifiers.rules.DecisionTable.distributionForInstance(Instance)"
"62","21","weka.classifiers.rules.DecisionTable.toString()"
"31","20","weka.classifiers.rules.PART.buildClassifier(Instances)"
"27","5","weka.classifiers.rules.PART.setOptions(String[])"
"36","17","weka.classifiers.rules.PART.getOptions()"
"25","5","weka.classifiers.rules.JRip.setOptions(String[])"
"64","17","weka.classifiers.rules.JRip.NumericAntd.splitData(Instances,double,double)"
"12","5","weka.classifiers.rules.JRip.NumericAntd.covers(Instance)"
"26","7","weka.classifiers.rules.JRip.NominalAntd.splitData(Instances,double,double)"
"20","7","weka.classifiers.rules.JRip.RipperRule.cleanUp(Instances)"
"53","21","weka.classifiers.rules.JRip.RipperRule.grow(Instances)"
"48","19","weka.classifiers.rules.JRip.RipperRule.prune(Instances,boolean)"
"72","22","weka.classifiers.rules.JRip.buildClassifier(Instances)"
"10","5","weka.classifiers.rules.JRip.distributionForInstance(Instance)"
"219","71","weka.classifiers.rules.JRip.rulesetForOneClass(double,Instances,double,double)"
"22","13","weka.classifiers.rules.JRip.checkStop(boolean[],double,double)"
"16","7","weka.classifiers.rules.JRip.toString()"
"29","9","weka.classifiers.rules.ZeroR.buildClassifier(Instances)"
"7","5","weka.classifiers.rules.ZeroR.toString()"
"12","5","weka.classifiers.rules.DecisionTableHashKey.DecisionTableHashKey(Instance,int,boolean)"
"17","6","weka.classifiers.rules.DecisionTableHashKey.toString(Instances,int)"
"12","6","weka.classifiers.rules.DecisionTableHashKey.hashCode()"
"20","14","weka.classifiers.rules.DecisionTableHashKey.equals(Object)"
"56","17","weka.classifiers.rules.part.PruneableDecList.buildDecList(Instances,Instances,boolean)"
"11","5","weka.classifiers.rules.part.PruneableDecList.errorsForTree()"
"47","12","weka.classifiers.rules.part.MakeDecList.buildClassifier(Instances)"
"16","5","weka.classifiers.rules.part.MakeDecList.distributionForInstance(Instance)"
"54","17","weka.classifiers.rules.part.C45PruneableDecList.buildDecList(Instances,boolean)"
"9","5","weka.classifiers.rules.part.C45PruneableDecList.getEstimatedErrorsForTree()"
"46","12","weka.classifiers.rules.part.ClassifierDecList.buildDecList(Instances,boolean)"
"14","5","weka.classifiers.rules.part.ClassifierDecList.classifyInstance(Instance)"
"10","7","weka.classifiers.rules.part.ClassifierDecList.weight(Instance)"
"20","8","weka.classifiers.rules.part.ClassifierDecList.chooseIndex()"
"12","6","weka.classifiers.rules.part.ClassifierDecList.chooseLastIndex()"
"15","7","weka.classifiers.rules.part.ClassifierDecList.getProbs(int,Instance,double)"
"7","5","weka.classifiers.functions.SimpleLinearRegression.classifyInstance(Instance)"
"112","30","weka.classifiers.functions.SimpleLinearRegression.buildClassifier(Instances)"
"30","5","weka.classifiers.functions.SimpleLinearRegression.toString()"
"12","5","weka.classifiers.functions.supportVector.CheckKernel.getOptions()"
"27","12","weka.classifiers.functions.supportVector.CheckKernel.testsPerClassType(int,boolean,boolean)"
"63","23","weka.classifiers.functions.supportVector.CheckKernel.correctBuildInitialisation(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"19","5","weka.classifiers.functions.supportVector.CheckKernel.canHandleMissing(boolean,boolean,boolean,boolean,boolean,boolean,int,boolean,boolean,int)"
"52","17","weka.classifiers.functions.supportVector.CheckKernel.instanceWeights(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"30","11","weka.classifiers.functions.supportVector.CheckKernel.datasetIntegrity(boolean,boolean,boolean,boolean,boolean,boolean,int,boolean,boolean)"
"43","20","weka.classifiers.functions.supportVector.CheckKernel.runBasicTest(boolean,boolean,boolean,boolean,boolean,boolean,int,int,int,boolean,boolean,int,int,String)"
"38","15","weka.classifiers.functions.supportVector.CheckKernel.printAttributeSummary(boolean,boolean,boolean,boolean,boolean,boolean,int)"
"151","75","weka.classifiers.functions.supportVector.RegSMO.findOptimalPointOnLine(int,double,double,double,int,double,double,double,double,double,double)"
"58","30","weka.classifiers.functions.supportVector.RegSMO.takeStep(int,int,double,double,double)"
"19","22","weka.classifiers.functions.supportVector.RegSMO.examineExample(int)"
"6","8","weka.classifiers.functions.supportVector.RegSMO.secondChoiceHeuristic(int)"
"27","14","weka.classifiers.functions.supportVector.RegSMO.optimize()"
"8","5","weka.classifiers.functions.supportVector.RBFKernel.evaluate(int,int,Instance)"
"36","9","weka.classifiers.functions.supportVector.StringKernel.setOptions(String[])"
"42","21","weka.classifiers.functions.supportVector.StringKernel.eval(int,int,Instance)"
"34","7","weka.classifiers.functions.supportVector.StringKernel.unnormalizedKernel(double[],double[][])"
"12","6","weka.classifiers.functions.supportVector.StringKernel.kernel(int,int[],int,int[],int)"
"16","9","weka.classifiers.functions.supportVector.StringKernel.kernelHelper(int,int[],int,int[],int)"
"21","11","weka.classifiers.functions.supportVector.StringKernel.kernelHelper2(int,int[],int,int[],int)"
"14","8","weka.classifiers.functions.supportVector.StringKernel.kernelLP(int,int[],int,int[],int,int)"
"21","15","weka.classifiers.functions.supportVector.StringKernel.kernelHelperLP(int,int[],int,int[],int,int)"
"34","27","weka.classifiers.functions.supportVector.StringKernel.kernelHelper2LP(int,int[],int,int[],int,int)"
"6","5","weka.classifiers.functions.supportVector.StringKernel.getPowerOfLambda(int)"
"37","12","weka.classifiers.functions.supportVector.KernelEvaluation.evaluate(Kernel,String[])"
"31","8","weka.classifiers.functions.supportVector.KernelEvaluation.evaluate(Kernel,Instances)"
"17","16","weka.classifiers.functions.supportVector.KernelEvaluation.equals(Object)"
"46","18","weka.classifiers.functions.supportVector.CachedKernel.eval(int,int,Instance)"
"19","6","weka.classifiers.functions.supportVector.CachedKernel.dotProd(Instance,Instance)"
"12","6","weka.classifiers.functions.supportVector.Kernel.makeCopies(Kernel,int)"
"43","11","weka.classifiers.functions.supportVector.RegSMOImproved.takeStep(int,int,double,double,double)"
"21","8","weka.classifiers.functions.supportVector.RegSMOImproved.updateIndexSetFor(int,double)"
"20","7","weka.classifiers.functions.supportVector.RegSMOImproved.updateBoundaries(int,double)"
"75","30","weka.classifiers.functions.supportVector.RegSMOImproved.examineExample(int)"
"19","9","weka.classifiers.functions.supportVector.RegSMOImproved.optimize1()"
"22","10","weka.classifiers.functions.supportVector.RegSMOImproved.optimize2()"
"28","8","weka.classifiers.functions.supportVector.NormalizedPolyKernel.evaluate(int,int,Instance)"
"17","8","weka.classifiers.functions.supportVector.RegOptimizer.wrapUp()"
"10","5","weka.classifiers.functions.supportVector.RegOptimizer.SVMOutput(Instance)"
"27","13","weka.classifiers.functions.supportVector.RegOptimizer.toString()"
"30","5","weka.classifiers.functions.SMOreg.setOptions(String[])"
"59","17","weka.classifiers.functions.SMOreg.buildClassifier(Instances)"
"8","6","weka.classifiers.functions.SMOreg.toString()"
"8","6","weka.classifiers.functions.SMOreg.getMeasure(String)"
"67","17","weka.classifiers.functions.LinearRegression.buildClassifier(Instances)"
"48","20","weka.classifiers.functions.LinearRegression.toString()"
"16","5","weka.classifiers.functions.LinearRegression.getOptions()"
"16","7","weka.classifiers.functions.LinearRegression.deselectColinearAttributes(boolean[],boolean[][])"
"70","25","weka.classifiers.functions.LinearRegression.findBestModel()"
"78","24","weka.classifiers.functions.LinearRegression.doRegression(result[][])"
"9","6","weka.classifiers.functions.SGDText.dloss(double)"
"67","19","weka.classifiers.functions.SGDText.setOptions(String[])"
"47","10","weka.classifiers.functions.SGDText.getOptions()"
"32","12","weka.classifiers.functions.SGDText.updateClassifier(Instance,boolean)"
"28","12","weka.classifiers.functions.SGDText.tokenizeInstance(Instance,boolean)"
"8","8","weka.classifiers.functions.SGDText.pruneDictionary(boolean)"
"26","7","weka.classifiers.functions.SGDText.distributionForInstance(Instance)"
"18","10","weka.classifiers.functions.SGDText.dotProd(Count)"
"34","12","weka.classifiers.functions.SGDText.toString()"
"9","5","weka.classifiers.functions.SGDText.getDictionarySize()"
"18","5","weka.classifiers.functions.SGDText.aggregate(SGDText)"
"20","6","weka.classifiers.functions.SGD.setOptions(String[])"
"32","11","weka.classifiers.functions.SGD.buildClassifier(Instances)"
"24","20","weka.classifiers.functions.SGD.dloss(double)"
"18","7","weka.classifiers.functions.SGD.dotProd(Instance,Instance[],int)"
"38","20","weka.classifiers.functions.SGD.updateClassifier(Instance,boolean)"
"29","10","weka.classifiers.functions.SGD.distributionForInstance(Instance)"
"33","12","weka.classifiers.functions.SGD.toString()"
"11","8","weka.classifiers.functions.SGD.aggregate(SGD)"
"79","17","weka.classifiers.functions.GaussianProcesses.buildClassifier(Instances)"
"34","12","weka.classifiers.functions.GaussianProcesses.toString()"
"9","7","weka.classifiers.functions.Logistic.OptObject.logOfSum(double,double)"
"21","8","weka.classifiers.functions.Logistic.OptObject.objectiveFunction(double[])"
"31","11","weka.classifiers.functions.Logistic.OptObject.evaluateGradient(nll[][])"
"112","30","weka.classifiers.functions.Logistic.buildClassifier(Instances)"
"12","5","weka.classifiers.functions.Logistic.evaluateProbability(distribution[][])"
"74","28","weka.classifiers.functions.Logistic.toString()"
"12","9","weka.classifiers.functions.Logistic.aggregate(Logistic)"
"9","7","weka.classifiers.functions.Logistic.finalizeAggregation()"
"22","5","weka.classifiers.functions.VotedPerceptron.setOptions(String[])"
"32","6","weka.classifiers.functions.VotedPerceptron.buildClassifier(Instances)"
"22","5","weka.classifiers.functions.VotedPerceptron.distributionForInstance(Instance)"
"23","8","weka.classifiers.functions.VotedPerceptron.innerProduct(Instance,Instance)"
"11","5","weka.classifiers.functions.VotedPerceptron.makePrediction(int,Instance)"
"19","9","weka.classifiers.functions.neural.NeuralNode.disconnectInput(NeuralConnection,int)"
"6","6","weka.classifiers.functions.neural.NeuralConnection.onUnit(Graphics,int,int,int,int)"
"10","5","weka.classifiers.functions.neural.NeuralConnection.connectInput(NeuralConnection,int)"
"10","5","weka.classifiers.functions.neural.NeuralConnection.connectOutput(NeuralConnection,int)"
"17","9","weka.classifiers.functions.neural.NeuralConnection.disconnectInput(NeuralConnection,int)"
"17","9","weka.classifiers.functions.neural.NeuralConnection.disconnectOutput(NeuralConnection,int)"
"29","25","weka.classifiers.functions.neural.NeuralConnection.connect(NeuralConnection,NeuralConnection)"
"16","13","weka.classifiers.functions.neural.NeuralConnection.disconnect(NeuralConnection,NeuralConnection)"
"17","5","weka.classifiers.functions.SimpleLogistic.setOptions(String[])"
"8","6","weka.classifiers.functions.SimpleLogistic.getMeasure(String)"
"38","8","weka.classifiers.functions.SMO.BinarySMO.fitCalibrator(Instances,int,int,int,Random)"
"126","34","weka.classifiers.functions.SMO.BinarySMO.buildClassifier(Instances,int,int,boolean,int,int)"
"29","11","weka.classifiers.functions.SMO.BinarySMO.SVMOutput(int,Instance)"
"59","24","weka.classifiers.functions.SMO.BinarySMO.toString()"
"35","22","weka.classifiers.functions.SMO.BinarySMO.examineExample(int)"
"155","61","weka.classifiers.functions.SMO.BinarySMO.takeStep(int,int,double)"
"17","11","weka.classifiers.functions.SMO.BinarySMO.checkClassifier()"
"70","25","weka.classifiers.functions.SMO.buildClassifier(Instances)"
"46","17","weka.classifiers.functions.SMO.distributionForInstance(Instance)"
"22","7","weka.classifiers.functions.SMO.obtainVotes(Instance)"
"51","9","weka.classifiers.functions.SMO.setOptions(String[])"
"21","9","weka.classifiers.functions.SMO.toString()"
"7","6","weka.classifiers.functions.MultilayerPerceptron.NeuralEnd.onUnit(Graphics,int,int,int,int)"
"14","8","weka.classifiers.functions.MultilayerPerceptron.NeuralEnd.outputValue(boolean)"
"25","12","weka.classifiers.functions.MultilayerPerceptron.NeuralEnd.errorValue(boolean)"
"10","8","weka.classifiers.functions.MultilayerPerceptron.NeuralEnd.setLink(boolean,int)"
"55","23","weka.classifiers.functions.MultilayerPerceptron.NodePanel.MouseAdapter$1.mousePressed(MouseEvent)"
"34","18","weka.classifiers.functions.MultilayerPerceptron.NodePanel.selection(NeuralConnection,boolean,boolean)"
"19","8","weka.classifiers.functions.MultilayerPerceptron.NodePanel.paintComponent(Graphics)"
"24","15","weka.classifiers.functions.MultilayerPerceptron.setHiddenLayers(String)"
"13","5","weka.classifiers.functions.MultilayerPerceptron.removeNode(NeuralConnection)"
"34","13","weka.classifiers.functions.MultilayerPerceptron.setClassType(Instances)"
"57","20","weka.classifiers.functions.MultilayerPerceptron.setupHiddenLayer()"
"100","21","weka.classifiers.functions.MultilayerPerceptron.initializeClassifier(Instances)"
"83","41","weka.classifiers.functions.MultilayerPerceptron.next()"
"35","15","weka.classifiers.functions.MultilayerPerceptron.distributionForInstance(Instance)"
"66","15","weka.classifiers.functions.MultilayerPerceptron.setOptions(String[])"
"34","9","weka.classifiers.functions.MultilayerPerceptron.getOptions()"
"37","11","weka.classifiers.functions.MultilayerPerceptron.toString()"
"18","5","weka.classifiers.evaluation.MarginCurve.getCurve(Prediction)"
"51","17","weka.classifiers.evaluation.ThresholdCurve.getCurve(Prediction,int)"
"24","8","weka.classifiers.evaluation.ThresholdCurve.getNPointPrecision(Instances,int)"
"17","7","weka.classifiers.evaluation.ThresholdCurve.getPRCArea(Instances)"
"23","6","weka.classifiers.evaluation.ThresholdCurve.getROCArea(Instances)"
"8","8","weka.classifiers.evaluation.ThresholdCurve.getThresholdInstance(Instances,double)"
"15","7","weka.classifiers.evaluation.ThresholdCurve.binarySearch(int[],int[][],double)"
"18","5","weka.classifiers.evaluation.ThresholdCurve.main(String[])"
"8","5","weka.classifiers.evaluation.ConfusionMatrix.makeWeighted(CostMatrix)"
"6","5","weka.classifiers.evaluation.ConfusionMatrix.addPrediction(NominalPrediction)"
"15","6","weka.classifiers.evaluation.ConfusionMatrix.getTwoClassStats(int)"
"29","13","weka.classifiers.evaluation.ConfusionMatrix.toString(String)"
"5","5","weka.classifiers.evaluation.RegressionAnalysis.calculateAdjRSquared(double,int,int)"
"7","5","weka.classifiers.evaluation.RegressionAnalysis.calculateFStat(double,int,int)"
"20","7","weka.classifiers.evaluation.RegressionAnalysis.calculateStdErrorOfCoef(Instances,Instances[],double,int,int)"
"26","5","weka.classifiers.evaluation.CostCurve.getCurve(Prediction,int)"
"30","8","weka.classifiers.evaluation.output.prediction.HTML.doPrintHeader()"
"18","8","weka.classifiers.evaluation.output.prediction.HTML.attributeValuesString(Instance)"
"55","18","weka.classifiers.evaluation.output.prediction.HTML.doPrintClassification(text.toString[],Instance,int)"
"19","10","weka.classifiers.evaluation.output.prediction.InMemory.attributeValuesToMap(Instance)"
"21","8","weka.classifiers.evaluation.output.prediction.PlainText.doPrintHeader()"
"16","7","weka.classifiers.evaluation.output.prediction.PlainText.attributeValuesString(Instance)"
"54","18","weka.classifiers.evaluation.output.prediction.PlainText.doPrintClassification(text.toString[],Instance,int)"
"12","5","weka.classifiers.evaluation.output.prediction.XML.attributeValuesString(Instance)"
"68","18","weka.classifiers.evaluation.output.prediction.XML.doPrintClassification(text.toString[],Instance,int)"
"17","6","weka.classifiers.evaluation.output.prediction.AbstractOutput.getOptions()"
"8","6","weka.classifiers.evaluation.output.prediction.AbstractOutput.checkBasic()"
"29","15","weka.classifiers.evaluation.output.prediction.AbstractOutput.printClassifications(Classifier,DataSource)"
"9","5","weka.classifiers.evaluation.output.prediction.AbstractOutput.printClassifications(Classifier,Instances)"
"14","5","weka.classifiers.evaluation.output.prediction.AbstractOutput.printFooter()"
"22","9","weka.classifiers.evaluation.output.prediction.CSV.doPrintHeader()"
"12","6","weka.classifiers.evaluation.output.prediction.CSV.attributeValuesString(Instance)"
"55","19","weka.classifiers.evaluation.output.prediction.CSV.doPrintClassification(Override[],Instance,int)"
"8","5","weka.classifiers.evaluation.EvaluationMetricHelper.initializeWithPluginMetrics()"
"53","52","weka.classifiers.evaluation.EvaluationMetricHelper.builtInMetricIsMaximisable(int)"
"54","61","weka.classifiers.evaluation.EvaluationMetricHelper.getBuiltinMetricValue(int,int)"
"5","5","weka.classifiers.evaluation.EvaluationMetricHelper.getPluginMetricValue(AbstractEvaluationMetric,String,int)"
"11","8","weka.classifiers.evaluation.EvaluationMetricHelper.getNamedMetric(String,int)"
"12","7","weka.classifiers.evaluation.EvaluationMetricHelper.getNamedMetricThresholds(String)"
"9","5","weka.classifiers.evaluation.EvaluationMetricHelper.metricIsMaximisable(String)"
"12","5","weka.classifiers.evaluation.AbstractEvaluationMetric.getPluginMetrics()"
"46","13","weka.classifiers.evaluation.AggregateableEvaluation.aggregate(Evaluation)"
"9","7","weka.classifiers.evaluation.NominalPrediction.margin()"
"11","5","weka.classifiers.CostMatrix.replaceStrings(Instances)"
"59","28","weka.classifiers.CostMatrix.applyCostMatrix(Instances,Random)"
"11","7","weka.classifiers.CostMatrix.expectedCosts(instances[][])"
"16","8","weka.classifiers.CostMatrix.expectedCosts(costs[][],Instance)"
"10","5","weka.classifiers.CostMatrix.getMaxCost(int)"
"14","6","weka.classifiers.CostMatrix.getMaxCost(int,Instance)"
"41","29","weka.classifiers.CostMatrix.readOldFormat(Reader)"
"42","20","weka.classifiers.CostMatrix.CostMatrix(Reader)"
"15","5","weka.classifiers.CostMatrix.toMatlab()"
"42","17","weka.classifiers.CostMatrix.toString()"
"31","9","weka.classifiers.ParallelIteratedSingleClassifierEnhancer.buildClassifiers()"
